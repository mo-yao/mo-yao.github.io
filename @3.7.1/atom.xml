<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>唐志远の博客</title>
  
  
  <link href="https://fe32.top/atom.xml" rel="self"/>
  
  <link href="https://fe32.top/"/>
  <updated>2023-06-18T16:45:47.245Z</updated>
  <id>https://fe32.top/</id>
  
  <author>
    <name>Ethan.Tzy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>被发现了，这些吊炸天的摸鱼网站！</title>
    <link href="https://fe32.top/articles/joy10001/"/>
    <id>https://fe32.top/articles/joy10001/</id>
    <published>2023-06-18T16:40:07.000Z</published>
    <updated>2023-06-18T16:45:47.245Z</updated>
    
    
    <summary type="html">推荐几个好玩的网页游戏网站！</summary>
    
    
    
    <category term="joy" scheme="https://fe32.top/categories/joy/"/>
    
    
    <category term="摸鱼网站" scheme="https://fe32.top/tags/%E6%91%B8%E9%B1%BC%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>解决 Vue 中使用 Echarts 出现 There Is a Chart Instance Already Initialized on the Dom 的警告问题</title>
    <link href="https://fe32.top/articles/vue20002/"/>
    <id>https://fe32.top/articles/vue20002/</id>
    <published>2023-06-18T16:20:32.000Z</published>
    <updated>2023-06-18T16:45:33.835Z</updated>
    
    
    <summary type="html">解决 Vue 中使用 Echarts 出现 There is a chart instance already initialized on the dom 的警告问题。</summary>
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="Echarts" scheme="https://fe32.top/tags/Echarts/"/>
    
  </entry>
  
  <entry>
    <title>如何新窗口打开导航链接？</title>
    <link href="https://fe32.top/articles/hexo1619/"/>
    <id>https://fe32.top/articles/hexo1619/</id>
    <published>2023-06-04T13:53:07.000Z</published>
    <updated>2023-06-05T15:23:35.366Z</updated>
    
    
    <summary type="html">简单介绍 Hexo +Butterfly　项目如何在新窗口中打开导航链接。</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>一文读懂TS的(.d.ts)文件</title>
    <link href="https://fe32.top/articles/ts30001/"/>
    <id>https://fe32.top/articles/ts30001/</id>
    <published>2023-04-30T14:28:06.000Z</published>
    <updated>2023-05-17T10:01:10.177Z</updated>
    
    
    <summary type="html">随着前端技术的不断发展，TypeScript(简称:TS)已经在逐步取代JavaScript(简称:JS),尤其在以Vue3使用TS重构后，TS更是成为前端框架编写的主力语言。</summary>
    
    
    
    <category term="Typescript" scheme="https://fe32.top/categories/Typescript/"/>
    
    
  </entry>
  
  <entry>
    <title>Property &#39;Xxx&#39; Does Not Exist on Type &#39;AxiosResponse&lt;any, Any&gt;&#39; 的解决办法</title>
    <link href="https://fe32.top/articles/vue20001/"/>
    <id>https://fe32.top/articles/vue20001/</id>
    <published>2023-04-30T12:34:18.000Z</published>
    <updated>2023-05-17T10:01:10.219Z</updated>
    
    
    <summary type="html">定义接口返回数据类型，解决 Property &#39;xxxx&#39; does not exist on type &#39;AxiosResponse&lt;any, any&gt;&#39;。</summary>
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="Typescript" scheme="https://fe32.top/tags/Typescript/"/>
    
  </entry>
  
  <entry>
    <title>Css中有哪些可继承的属性？</title>
    <link href="https://fe32.top/articles/css10003/"/>
    <id>https://fe32.top/articles/css10003/</id>
    <published>2023-04-30T08:49:50.000Z</published>
    <updated>2023-05-17T10:01:10.216Z</updated>
    
    
    <summary type="html">简述 Css 中有哪些可继承属性和不可继承属性。</summary>
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>关于博客更新的二三事</title>
    <link href="https://fe32.top/articles/blog9528/"/>
    <id>https://fe32.top/articles/blog9528/</id>
    <published>2023-04-14T16:45:14.000Z</published>
    <updated>2023-06-18T16:51:05.452Z</updated>
    
    
    <summary type="html">简述博客相比上一版本（v3.7.1）做了哪些优化</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="博客更新" scheme="https://fe32.top/tags/%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>虚拟列表，我真的会了！</title>
    <link href="https://fe32.top/articles/xn2023lb/"/>
    <id>https://fe32.top/articles/xn2023lb/</id>
    <published>2023-02-14T13:24:50.000Z</published>
    <updated>2023-06-27T14:39:00.606Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;tzy-post&quot;&gt;

&lt;h2 id=&quot;虚拟列表的使用场景&quot;&gt;&lt;a href=&quot;#虚拟列表的使用场景&quot; class=&quot;headerlink&quot; title=&quot;虚拟列表的使用场景&quot;&gt;&lt;/a&gt;虚拟列表的使用场景&lt;/h2&gt;&lt;p&gt;如果我想要在网页中放大量的列表项，纯渲染的话，对于浏览器性能将会是个极大的挑战，会造成滚动卡顿，整体体验非常不好，主要有以下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;页面等待时间极长，用户体验差&lt;/li&gt;
&lt;li&gt;CPU 计算能力不够，滑动会卡顿&lt;/li&gt;
&lt;li&gt;GPU 渲染能力不够，页面会跳屏&lt;/li&gt;
&lt;li&gt;RAM 内存容量不够，浏览器崩溃&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;传统做法&quot;&gt;&lt;a href=&quot;#传统做法&quot; class=&quot;headerlink&quot; title=&quot;传统做法&quot;&gt;&lt;/a&gt;传统做法&lt;/h3&gt;&lt;p&gt;对于长列表渲染，传统的方法是使用懒加载的方式，下拉到底部获取新的内容加载进来，其实就相当于是在垂直方向上的分页叠加功能，&lt;strong&gt;但随着加载数据越来越多，浏览器的回流和重绘的开销将会越来越大&lt;/strong&gt;，整个滑动也会造成卡顿，这个时候我们就可以考虑使用虚拟列表来解决问题。&lt;/p&gt;
&lt;h3 id=&quot;虚拟列表&quot;&gt;&lt;a href=&quot;#虚拟列表&quot; class=&quot;headerlink&quot; title=&quot;虚拟列表&quot;&gt;&lt;/a&gt;虚拟列表&lt;/h3&gt;&lt;p&gt;其核心思想就是在处理用户滚动时，只改变列表在可视区域的渲染部分，具体步骤为：&lt;/p&gt;
&lt;p&gt;先计算可见区域起始数据的索引值&lt;code&gt;startIndex&lt;/code&gt;和当前可见区域结束数据的索引值&lt;code&gt;endIndex&lt;/code&gt;，假如元素的高度是固定的，那么&lt;code&gt;startIndex&lt;/code&gt;的算法很简单，即&lt;code&gt;startIndex = Math.floor(scrollTop/itemHeight)，endIndex = startIndex + (clientHeight/itemHeight) - 1&lt;/code&gt;，再根据&lt;code&gt;startIndex&lt;/code&gt;和&lt;code&gt;endIndex&lt;/code&gt;取相应范围的数据，渲染到可视区域，然后再计算&lt;code&gt;startOffset&lt;/code&gt;（上滚动空白区域）和&lt;code&gt;endOffset&lt;/code&gt;（下滚动空白区域），这两个偏移量的作用就是来撑开容器元素的内容，从而起到缓冲的作用，使得滚动条保持平滑滚动，并使滚动条处于一个正确的位置&lt;/p&gt;
&lt;p&gt;上述的操作可以总结成五步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不把长列表数据一次性全部直接渲染在页面上&lt;/li&gt;
&lt;li&gt;截取长列表一部分数据用来填充可视区域&lt;/li&gt;
&lt;li&gt;长列表数据不可视部分使用空白占位填充（下图中的startOffset和endOffset区域）&lt;/li&gt;
&lt;li&gt;监听滚动事件根据滚动位置动态改变可视列表&lt;/li&gt;
&lt;li&gt;监听滚动事件根据滚动位置动态改变空白填充&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/02/04/63de2ce894ab0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;


&lt;h2 id=&quot;定高虚拟列表实现步骤&quot;&gt;&lt;a href=&quot;#定高虚拟列表实现步骤&quot; class=&quot;headerlink&quot; title=&quot;定高虚拟列表实现步骤&quot;&gt;&lt;/a&gt;定高虚拟列表实现步骤&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;掘金使用的是传统懒加载的方式加载的哈，用的并不是虚拟列表，这里只是想表达一下什么是定高的列表！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/02/04/63de2cf6e083e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实现的效果应该是：&lt;strong&gt;不论怎么滚动，我们改变的只是滚动条的高度和可视区的元素内容，并没有增加任何多余的元素，下面来看看要怎么实现吧！&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 虚拟列表DOM结构&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;container&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 监听滚动事件的盒子，该高度继承了父元素的高度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;scroll-box&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ref&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{containerRef}&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onScroll&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{boxScroll}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 该盒子的高度一定会超过父元素，要不实现不了滚动的效果，而且还要动态的改变它的padding值用于控制滚动条的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{topBlankFill.current}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      showList.map(item =&amp;gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;item&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;key&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{item.commentId&lt;/span&gt; || (&lt;span class=&quot;attr&quot;&gt;Math.random&lt;/span&gt;() + &lt;span class=&quot;attr&quot;&gt;item.comments&lt;/span&gt;)}&amp;gt;&lt;/span&gt;{item.content}&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;计算容器最大容积数量&quot;&gt;&lt;a href=&quot;#计算容器最大容积数量&quot; class=&quot;headerlink&quot; title=&quot;计算容器最大容积数量&quot;&gt;&lt;/a&gt;计算容器最大容积数量&lt;/h3&gt;&lt;p&gt;简单来说，就是我们必须要知道在可视区域内最多能够容纳多少个列表项，这是我们在截取内容数据渲染到页面之前关键的步骤之一&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 滚动容器高度改变后执行的函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeHeight = useCallback(throttle(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 容器高度，通过操作dom元素获取高度是因为它不一定是个定值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  curContainerHeight.current = containerRef.current.offsetHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 列表最大数量，考虑到列表中顶部和底部可能都会出现没有展现完的item&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  curViewNum.current = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.ceil(curContainerHeight.current / itemHeight) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;), [])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;useEffect(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 组件第一次挂载需要初始化容器的高度以及最大容纳值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  changeHeight()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 因为我们的可视窗口和浏览器大小有关系，所以我们需要监听浏览器大小的变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 当浏览器大小改变之后需要重新执行changeHeight函数计算当前可视窗口对应的最大容纳量是多少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;resize&#39;&lt;/span&gt;, changeHeight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.removeEventListener(&lt;span class=&quot;string&quot;&gt;&#39;resize&#39;&lt;/span&gt;, changeHeight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, [changeHeight])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;监听滚动事件动态截取数据-amp-amp-设置上下滚动缓冲消除快速滚动白屏&quot;&gt;&lt;a href=&quot;#监听滚动事件动态截取数据-amp-amp-设置上下滚动缓冲消除快速滚动白屏&quot; class=&quot;headerlink&quot; title=&quot;监听滚动事件动态截取数据&amp;amp;&amp;amp;设置上下滚动缓冲消除快速滚动白屏&quot;&gt;&lt;/a&gt;监听滚动事件动态截取数据&amp;amp;&amp;amp;设置上下滚动缓冲消除快速滚动白屏&lt;/h3&gt;&lt;p&gt;这是虚拟列表的核心之处，不将所有我们请求到的元素渲染出来，而是只渲染我们能够看到的元素，大大减少了容器内的dom节点数量。&lt;/p&gt;
&lt;p&gt;不过有个隐藏的问题我们需要考虑到，当用户滑动过快的时候，很多用户的设备性能并不是很好，很容易出现屏幕已经滚动过去了，但是列表项还没有及时加载出来的情况，这个时候用户就会看到短暂的白屏，对用户的体验非常不好。所以我们需要设置一段缓冲区域，让用户过快的滚动之后还能看到我们提前渲染好的数据，等到缓冲数据滚动完了，我们新的数据也渲染到页面中去了！&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; scrollHandle = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 注意这个对应的是可视区第一个元素的索引值，而不是第多少个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; startIndex = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(containerRef.current.scrollTop / itemHeight) &lt;span class=&quot;comment&quot;&gt;// itemHeight是列表每一项的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 优化：如果是用户滚动触发的，而且两次startIndex的值都一样，那么就没有必要执行下面的逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isNeedLoad &amp;amp;&amp;amp; lastStartIndex.current === startIndex) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  isNeedLoad.current = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  lastStartIndex.current = startIndex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; containerMaxSize = curViewNum.current&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   * 解决滑动过快出现的白屏问题：注意endIndex要在startIndex人为改变之前就计算好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   * 因为我们实际上需要三板的数据用于兼容低性能的设备，用做上下滚动的缓冲区域，避免滑动的时候出现白屏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   * 现在的startIndex是可视区的第一个元素索引，再加上2倍可视区元素量，刚好在下方就会多出一板来当做缓冲区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 此处的endIndex是为了在可视区域的下方多出一板数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; endIndex = startIndex + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * containerMaxSize - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 接近滚动到屏幕底部的时候，就可以请求发送数据了，这个时候触底的并不是可视区的最后一个元素，而是多出那一版的最后一个元素触底了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; currLen = dataListRef.current.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (endIndex &amp;gt; currLen - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 更新请求参数，发送请求获取新的数据(但是要保证当前不在请求过程中，否则就会重复请求相同的数据)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    !isRequestRef.current &amp;amp;&amp;amp; setOptions(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;state&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ &lt;span class=&quot;attr&quot;&gt;offset&lt;/span&gt;: state.offset + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; }))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 如果已经滚动到了底部，那么就设置endIndex为最后一个元素索引即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    endIndex = currLen - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 此处的endIndex是为了在可视区域的上方多出一板数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 这里人为的调整startIndex的值，目的就是为了能够在可视区域上方多出一板来当做缓冲区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (startIndex &amp;lt;= containerMaxSize) { &lt;span class=&quot;comment&quot;&gt;// containerMaxSize是我们之前计算出来的容器容纳量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    startIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    startIndex = startIndex - containerMaxSize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 使用slice方法截取数据，但是要记住第二个参数对应的索引元素不会被删除，最多只能删除到它的前一个，所以我们这里的endIndex需要加一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setShowList(dataListRef.current.slice(startIndex, endIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;动态设置上下空白占位&quot;&gt;&lt;a href=&quot;#动态设置上下空白占位&quot; class=&quot;headerlink&quot; title=&quot;动态设置上下空白占位&quot;&gt;&lt;/a&gt;动态设置上下空白占位&lt;/h3&gt;&lt;p&gt;这是虚拟列表的灵魂所在，本质上我们数据量是很少的，一般来说只有几条到十几条数据，如果不对列表做一些附加的操作，连生成滚动条都有点困难，更别说让用户自由操控滚动条滚动了。&lt;/p&gt;
&lt;p&gt;我们必须要用某种方法将内容区域撑起来，这样才会出现比较合适的滚动条。我这里采取的方法就是设置&lt;code&gt;paddingTop&lt;/code&gt;和&lt;code&gt;paddingBottom&lt;/code&gt;的值来动态的撑开内容区域。&lt;/p&gt;
&lt;p&gt;为什么要动态的改变呢？举个例子，我们向下滑动的时候会更换页面中要展示的数据列表，如果不改变原先的空白填充区域，那么随着滚动条的滚动，原先展示在可视区的第一条数据就会向上移动，虽然我们更新的数据是正确的，但并没有将它们展示在合适的位置。完美的方案是是不仅要展示正确的数据，而且还要改变空白填充区域高度，使得数据能够正确的展示在浏览器视口当中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 以下代码要放在更新列表数据之前，也是在滚动事件boxScroll当中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 改变空白填充区域的样式，否则就会出现可视区域的元素与滚动条不匹配的情况，实现不了平滑滚动的效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;topBlankFill.current = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 起始索引就是缓冲区第一个元素的索引，索引为多少就代表前面有多少个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  paddingTop: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${startIndex * itemHeight}&lt;/span&gt;px`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// endIndex是缓冲区的最后一个元素，可能不在可视区内；用dataListRef数组最后一个元素的索引与endIndex相减就可以得到还没有渲染元素的数目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  paddingBottom: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${(dataListRef.current.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - endIndex) * itemHeight}&lt;/span&gt;px`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;下拉置底自动请求和加载数据&quot;&gt;&lt;a href=&quot;#下拉置底自动请求和加载数据&quot; class=&quot;headerlink&quot; title=&quot;下拉置底自动请求和加载数据&quot;&gt;&lt;/a&gt;下拉置底自动请求和加载数据&lt;/h3&gt;&lt;p&gt;在真实的开发场景中，我们不会一次性请求1w、10w条数据过来，这样请求时间那么长，用户早就把页面关掉了，还优化个屁啊哈哈！&lt;/p&gt;
&lt;p&gt;所以真实开发中，我们还是要结合原来的懒加载方式，等到下拉触底的时候去加载新的数据进来，放置到缓存数据当中，然后我们再根据滚动事件决定具体渲染哪一部分的数据到页面上去。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 组件刚挂载以及下拉触底的时候请求更多数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;useEffect(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 表明当前正处于请求过程中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      isRequestRef.current = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { offset } = options&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; limit = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) limit = &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { &lt;span class=&quot;attr&quot;&gt;data&lt;/span&gt;: { comments, more } } = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; axios({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: &lt;span class=&quot;string&quot;&gt;`http://localhost:3000/comment/music?id=&lt;span class=&quot;subst&quot;&gt;${&lt;span class=&quot;number&quot;&gt;186015&lt;/span&gt; - offset}&lt;/span&gt;&amp;amp;limit=&lt;span class=&quot;subst&quot;&gt;${limit}&lt;/span&gt;&amp;amp;offset=1`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      isNeedLoad.current = more&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 将新请求到的数据添加到存储列表数据的变量当中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dataListRef.current = [...dataListRef.current, ...comments]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 必选要在boxScroll之前将isRequestRef设为false，因为boxScroll函数内部会用到这个变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      isRequestRef.current = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 请求完最新数据的时候需要重新触发一下boxScroll函数，因为容器内的数据、空白填充区域可能需要变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      boxScroll()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (err) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      isRequestRef.current = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 在boxScroll函数里面，一旦发生了触底操作就会去改变optiosn的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, [options])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;滚动事件请求动画帧进行节流优化&quot;&gt;&lt;a href=&quot;#滚动事件请求动画帧进行节流优化&quot; class=&quot;headerlink&quot; title=&quot;滚动事件请求动画帧进行节流优化&quot;&gt;&lt;/a&gt;滚动事件请求动画帧进行节流优化&lt;/h4&gt;&lt;p&gt;虚拟列表很依赖于滚动事件，考虑到用户可能会滑动很快，我们在用节流优化的时候事件必须要设置的够短，否则还是会出现白屏现象。&lt;/p&gt;
&lt;p&gt;这里我没有用传统的节流函数，而是用到了请求动画帧帮助我们进行节流，这里就不做具体介绍了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 利用请求动画帧做了一个节流优化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; then = useRef(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; boxScroll = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; now = &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   * 这里的等待时间不宜设置过长，不然会出现滑动到空白占位区域的情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   * 因为间隔时间过长的话，太久没有触发滚动更新事件，下滑就会到padding-bottom的空白区域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   * 电脑屏幕的刷新频率一般是60HZ，渲染的间隔时间为16.6ms，我们的时间间隔最好小于两次渲染间隔16.6*2=33.2ms，一般情况下30ms左右，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (now - then.current &amp;gt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    then.current = now&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 重复调用scrollHandle函数，让浏览器在下一次重绘之前执行函数，可以确保不会出现丢帧现象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame(scrollHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然，填充空白区域、模拟滚动条还有其它的办法，比如根据总数据量让一个盒子撑开父盒子用于生成滚动条，根据&lt;code&gt;startIndex&lt;/code&gt;计算出可视区域距离顶部的距离并调节内容区域元素的&lt;code&gt;transform&lt;/code&gt;属性，即&lt;code&gt;startOffset = scrollTop \- (scrollTop % this.itemSize)&lt;/code&gt;，让内容区域一直暴露在可视区域内&lt;/p&gt;
&lt;p&gt;目前为止，我们已经实现了固定高度的列表项用虚拟列表来展示的功能！接下里我们将会介绍关于不定高（其高度由内容进行撑开）的列表项如何用虚拟列表进行优化&lt;/p&gt;
&lt;h2 id=&quot;不定高虚拟列表实现步骤&quot;&gt;&lt;a href=&quot;#不定高虚拟列表实现步骤&quot; class=&quot;headerlink&quot; title=&quot;不定高虚拟列表实现步骤&quot;&gt;&lt;/a&gt;不定高虚拟列表实现步骤&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;微博是一个很典型的不定高虚拟列表，大家感兴趣的话可以去看一下哦！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/02/04/63de2cffacfd5.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在之前的实现中，列表项的高度是固定的，因为高度固定，所以可以很轻易的就能获取列表项的整体高度以及滚动时的显示数据与对应的偏移量。而实际应用的时候，当列表中包含文本、图片之类的可变内容，会导致列表项的高度并不相同。&lt;/p&gt;
&lt;p&gt;我们在列表渲染之前，确实没有办法知道每一项的高度，但是又必须要渲染出来，那怎么办呢？&lt;/p&gt;
&lt;p&gt;这里有一个解决方法，就是&lt;strong&gt;先给没有渲染出来的列表项设置一个预估高度，等到这些数据渲染成真实dom元素了之后，再获取到他们的真实高度去更新原来设置的预估高度&lt;/strong&gt;，下面我们来看看跟定高列表有什么不同，具体要怎么实现吧！&lt;/p&gt;
&lt;h3 id=&quot;请求到新数据对数据进行初始化（设置预估高度）&quot;&gt;&lt;a href=&quot;#请求到新数据对数据进行初始化（设置预估高度）&quot; class=&quot;headerlink&quot; title=&quot;请求到新数据对数据进行初始化（设置预估高度）&quot;&gt;&lt;/a&gt;请求到新数据对数据进行初始化（设置预估高度）&lt;/h3&gt;&lt;p&gt;预估高度的设置其实是有技巧的，列表项预估高度设置的越大，展现出来的数据就会越少，所以当预估高度比实际高度大很多的时候，很容易出现可视区域数据量太少而引起的可视区域出现部分空白。为了避免这种情况，我们的预估高度应该设置为列表项产生的最小值，这样尽管可能会多渲染出几条数据，但能保证首次呈现给用户的画面中没有空白&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 请求更多的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;useEffect(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 只有当前不在请求状态的时候才可以发送新的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isRequestRef.current) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;发送请求了&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isRequestRef.current = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { offset } = options&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; limit = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) limit = &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { &lt;span class=&quot;attr&quot;&gt;data&lt;/span&gt;: { comments, more } } = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; axios({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          url: &lt;span class=&quot;string&quot;&gt;`http://localhost:3000/comment/music?id=&lt;span class=&quot;subst&quot;&gt;${&lt;span class=&quot;number&quot;&gt;186015&lt;/span&gt; - offset}&lt;/span&gt;&amp;amp;limit=&lt;span class=&quot;subst&quot;&gt;${limit}&lt;/span&gt;&amp;amp;offset=1`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isNeedLoad.current = more&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 获取缓存中最后一个数据的索引值，如果没有，则返回-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; lastIndex = dataListRef.current.length ? dataListRef.current[dataListRef.current.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].index : -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 先将请求到的数据添加到缓存数组中去&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataListRef.current = [...dataListRef.current, ...comments]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; dataList = dataListRef.current&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 将刚刚请求到的新数据做一下处理，为他们添加上对应的索引值、预估高度、以及元素首尾距离容器顶部的距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = lastIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, len = dataListRef.current.length; i &amp;lt; len; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          dataList[i].index = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// 预估高度是列表项对应的最小高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          dataList[i].height = &lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// 每一个列表项头部距离容器顶部的距离等于上一个元素尾部距离容器顶部的距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          dataList[i].top = dataList[i - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]?.bottom || &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// 每一个列表项尾部距离容器顶部的距离等于上一个元素头部距离容器顶部的距离加上自身列表项的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          dataList[i].bottom = dataList[i].top + dataList[i].height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isRequestRef.current = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boxScroll()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (err) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isRequestRef.current = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// eslint-disable-next-line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, [options])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;每次列表更新之后将列表项真实高度更新缓存中的预估高度&quot;&gt;&lt;a href=&quot;#每次列表更新之后将列表项真实高度更新缓存中的预估高度&quot; class=&quot;headerlink&quot; title=&quot;每次列表更新之后将列表项真实高度更新缓存中的预估高度&quot;&gt;&lt;/a&gt;每次列表更新之后将列表项真实高度更新缓存中的预估高度&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;React&lt;/code&gt;函数式组件中，&lt;code&gt;useEffect&lt;/code&gt;只要不传第二个参数，就可以实现类组件&lt;code&gt;componentDidUpdate&lt;/code&gt;生命周期函数的作用，只要我们重新渲染一次列表组件，就会重新计算一下当前列表每一项中的真实高度并更新到缓存中去，当下次我们再用到缓存中的这些数据时，使用的就是真实高度了&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 每次组件重新渲染即用户滚动更改了数据之后需要将列表中我们还不知道的列表项高度更新到我们的缓存数据中去，以便下一次更新的时候能够正常渲染&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;useEffect(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; { &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; doms = containerRef.current.children[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].children&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; len = doms.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 因为一开始我们没有请求数据，所以即使组件渲染完了，但是没有列表项，此时不需要执行后续操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (len) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 遍历所有的列表结点，根据结点的真实高度去更改缓存中的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; len; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; realHeight = doms[i].offsetHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; originHeight = showList[i].height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; dValue = realHeight - originHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 如果列表项的真实高度就是缓存中的高度，则不需要进行更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dValue) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; index = showList[i].index&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; allData = dataListRef.current&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;           * 如果列表项的真实高度不是缓存中的高度，那么不仅要更新缓存中这一项的bottom和height属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;           * 在该列表项后续的所有列表项的top、bottom都会受到它的影响，所以我们又需要一层for循环进行更改缓存中后续的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;           */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allData[index].bottom += dValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allData[index].height = realHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;           * 注意：这里更改的一定要是缓存数组中对应位置后续的所有值，如果只改变的是showList值的话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;           * 会造成dataList间断性的bottom和下一个top不连续，因为startIndex、endIndex以及空白填充区域都是依据top和bottom值来进行计算的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;           * 所以会导致最后计算的结果出错，滑动得来的startIndex变化幅度大且滚动条不稳定，出现明显抖动问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;           */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; j = index + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, len = allData.length; j &amp;lt; len; j++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          allData[j].top = allData[j - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].bottom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          allData[j].bottom += dValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// eslint-disable-next-line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;得到可视区域的起始和结束元素索引-amp-amp-设置上下滚动缓冲区域消除快速滚动白屏&quot;&gt;&lt;a href=&quot;#得到可视区域的起始和结束元素索引-amp-amp-设置上下滚动缓冲区域消除快速滚动白屏&quot; class=&quot;headerlink&quot; title=&quot;得到可视区域的起始和结束元素索引&amp;amp;&amp;amp;设置上下滚动缓冲区域消除快速滚动白屏&quot;&gt;&lt;/a&gt;得到可视区域的起始和结束元素索引&amp;amp;&amp;amp;设置上下滚动缓冲区域消除快速滚动白屏&lt;/h3&gt;&lt;p&gt;列表项的&lt;code&gt;bottom&lt;/code&gt;属性代表的就是该元素尾部到容器顶部的距离，不难发现，可视区的第一个元素的&lt;code&gt;bottom&lt;/code&gt;是第一个大于滚动高度的；可视区最后一个元素的&lt;code&gt;bottom&lt;/code&gt;是第一个大于（滚动高度+可视高度）的。我们可以利用这条规则遍历缓存数组找到对应的&lt;code&gt;startIndex&lt;/code&gt;和&lt;code&gt;endIndex&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于我们的缓存数据，本身就是有顺序的，所以获取开始索引的方法可以考虑通过二分查找的方式来降低检索次数，减少时间复杂度。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 得到要渲染数据的起始索引和结束索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; getIndex = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 设置缓冲区域的数据量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; aboveCount = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; belowCount = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 结果数组，里面包含了起始索引和结束索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; resObj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    startIndex: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    endIndex: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; scrollTop = containerRef.current.scrollTop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; dataList = dataListRef.current&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; len = dataList.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 设置上层缓冲区，如果索引值大于缓冲区域，那么就需要减小startIndex的值用于设置顶层缓冲区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; startIndex = binarySearch(scrollTop)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (startIndex &amp;lt;= aboveCount) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resObj.startIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resObj.startIndex = startIndex - aboveCount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * 缓冲数据中第一个bottom大于滚动高度加上可视区域高度的元素就是可视区域最后一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * 如果没有找到的话就说明当前滚动的幅度过大，缓存中没有数据的bottom大于我们的目标值，所以搜索不到对应的索引，我们只能拿缓存数据中的最后一个元素补充上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; endIndex = binarySearch(scrollTop + curContainerHeight.current) || len - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 增大endIndex的索引值用于为滚动区域下方设置一段缓冲区，避免快速滚动所导致的白屏问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resObj.endIndex = endIndex + belowCount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; resObj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 由于我们的缓存数据，本身就是有顺序的，所以获取开始索引的方法可以考虑通过二分查找的方式来降低检索次数：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; binarySearch = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; list = dataListRef.current&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; end = list.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; tempIndex = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (start &amp;lt;= end) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; midIndex = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;((start + end) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; midValue = list[midIndex].bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (midValue === value) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 说明当前滚动区域加上可视区域刚好是一个结点的边界，那么我们可以以其下一个结点作为末尾元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; midIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (midValue &amp;lt; value) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 由于当前值与目标值还有一定的差距，所以我们需要增加start值以让下次中点的落点更靠后&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      start = midIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (midValue &amp;gt; value) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 因为我们的目的并不是找到第一个满足条件的值，而是要找到满足条件的最小索引值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tempIndex === &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; || tempIndex &amp;gt; midIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tempIndex = midIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 由于我们要继续找更小的索引，所以需要让end-1以缩小范围，让下次中点的落点更靠前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      end--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tempIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;监听滚动事件动态截取数据-amp-amp-动态设置上下空白占位&quot;&gt;&lt;a href=&quot;#监听滚动事件动态截取数据-amp-amp-动态设置上下空白占位&quot; class=&quot;headerlink&quot; title=&quot;监听滚动事件动态截取数据&amp;amp;&amp;amp;动态设置上下空白占位&quot;&gt;&lt;/a&gt;监听滚动事件动态截取数据&amp;amp;&amp;amp;动态设置上下空白占位&lt;/h3&gt;&lt;p&gt;动态截取数据的操作和定高的虚拟列表几乎一样，区别比较大的地方就在&lt;code&gt;padding&lt;/code&gt;值的计算方式上。在定高的列表中，我们可以根据起始索引值和结尾索引值直接计算出空白填充区域的高度。&lt;/p&gt;
&lt;p&gt;其实在不定高的列表中，计算方式更加简单，因为&lt;code&gt;startIndex&lt;/code&gt;对应元素的&lt;code&gt;top&lt;/code&gt;值就是我们需要填充的上空白区域，下空白区域也可以根据整个列表的高度（最后一个元素的bottom值）和&lt;code&gt;endIndex&lt;/code&gt;对应元素的&lt;code&gt;bottom&lt;/code&gt;值之差得出&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; scrollHandle = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取当前要渲染元素的起始索引和结束索引值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; { startIndex, endIndex } = getIndex()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * 如果是用户滚动触发的，而且两次startIndex的值都一样，那么就没有必要执行下面的逻辑，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * 除非是用户重新请求了之后需要默认执行一次该函数，这是一种特殊情况，就是startIndex没变，但需要执行后续的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isNeedLoad &amp;amp;&amp;amp; lastStartIndex.current === startIndex) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 渲染完一次之后就需要初始化isNeedLoad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  isNeedLoad.current = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 用于实时监控lastStartIndex的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  lastStartIndex.current = startIndex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 下层缓冲区域最后的元素接触到屏幕底部的时候，就可以请求发送数据了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; currLen = dataListRef.current.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (endIndex &amp;gt;= currLen - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 当前不在请求状态下时才可以改变请求参数发送获取更多数据的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    !isRequestRef.current &amp;amp;&amp;amp; setOptions(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;state&lt;/span&gt; =&amp;gt;&lt;/span&gt; ({ &lt;span class=&quot;attr&quot;&gt;offset&lt;/span&gt;: state.offset + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; }))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 注意endIndex不可以大于缓存中最后一个元素的索引值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    endIndex = currLen - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 空白填充区域的样式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  topBlankFill.current = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 改变空白填充区域的样式，起始元素的top值就代表起始元素距顶部的距离，可以用来充当paddingTop值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    paddingTop: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${dataListRef.current[startIndex].top}&lt;/span&gt;px`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 缓存中最后一个元素的bottom值与endIndex对应元素的bottom值的差值可以用来充当paddingBottom的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    paddingBottom: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${dataListRef.current[dataListRef.current.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].bottom - dataListRef.current[endIndex].bottom}&lt;/span&gt;px`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setShowList(dataListRef.current.slice(startIndex, endIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;问题思考&quot;&gt;&lt;a href=&quot;#问题思考&quot; class=&quot;headerlink&quot; title=&quot;问题思考&quot;&gt;&lt;/a&gt;问题思考&lt;/h3&gt;&lt;p&gt;我们虽然实现了根据列表项动态高度下的虚拟列表，但如果列表项中包含图片，并且列表高度由图片撑开。在这种场景下，由于图片会发送网络请求，列表项可能已经渲染到页面中了，但是图片还没有加载出来，此时无法保证我们在获取列表项真实高度时图片是否已经加载完成，获取到的高度有无包含图片高度，从而造成计算不准确的情况。&lt;/p&gt;
&lt;p&gt;但是这种任意由图片来撑开盒子大小的场景很少见，因为这样会显得整个列表很不规则。大多数展示图片的列表场景，其实都是提前确定要展示图片的尺寸的，比如微博，1张图片的尺寸是多少，2x2，3x3的尺寸是多少都是提前设计好的，只要我们给img标签加了固定高度，这样就算图片还没有加载出来，但是我们也能够准确的知道列表项的高度是多少。&lt;/p&gt;
&lt;p&gt;如果你真的遇到了这种列表项会由图片任意撑开的场景，可以给图片绑定&lt;code&gt;onload&lt;/code&gt;事件，等到它加载完之后再重新计算一下列表的高度，然后把它更新到缓存数据中，这是一种方法。其次，还可以使用ResizeObserver来监听列表项内容区域的高度改变，从而实时获取每一列表项的高度，只不过MDN有说道这只是在实验中的一个功能，所以暂时可能没有办法兼容所有的浏览器！&lt;/p&gt;
&lt;p&gt;如果大家有其它更好的方法，可以在评论区交流哦！&lt;/p&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;原文链接 : &lt;a href=&quot;https://juejin.cn/post/7085941958228574215&quot;&gt;Running53 -</summary>
        
      
    
    
    
    <category term="前端进阶" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="虚拟列表" scheme="https://fe32.top/tags/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Uni-App 如何实现消息推送功能？</title>
    <link href="https://fe32.top/articles/uni10089/"/>
    <id>https://fe32.top/articles/uni10089/</id>
    <published>2023-01-12T06:47:47.000Z</published>
    <updated>2023-06-27T14:39:00.731Z</updated>
    
    
    <summary type="html">uni-app 实现消息推送功能，包括安卓、IOS、在线、离线都能收到推送的消息。</summary>
    
    
    
    <category term="uni-app" scheme="https://fe32.top/categories/uni-app/"/>
    
    
    <category term="uni-app" scheme="https://fe32.top/tags/uni-app/"/>
    
    <category term="Google Play" scheme="https://fe32.top/tags/Google-Play/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Butterfly 侧边栏公众号</title>
    <link href="https://fe32.top/articles/hexo1618/"/>
    <id>https://fe32.top/articles/hexo1618/</id>
    <published>2023-01-05T12:50:31.000Z</published>
    <updated>2023-06-27T14:39:00.799Z</updated>
    
    
    <summary type="html">有几个小伙伴想要同款侧边栏公众号效果，这里简单说下侧边栏公众号如何实现。</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Uni-App 提交 App应用 到 Google Play 提示 API 级别过低的解决办法</title>
    <link href="https://fe32.top/articles/uni10088/"/>
    <id>https://fe32.top/articles/uni10088/</id>
    <published>2023-01-05T08:05:31.000Z</published>
    <updated>2023-06-27T14:39:00.731Z</updated>
    
    
    <summary type="html">uniapp 提交 aab 版本到 Google Play 提示 API 级别过低的解决办法</summary>
    
    
    
    <category term="uni-app" scheme="https://fe32.top/categories/uni-app/"/>
    
    
    <category term="uni-app" scheme="https://fe32.top/tags/uni-app/"/>
    
    <category term="Google Play" scheme="https://fe32.top/tags/Google-Play/"/>
    
  </entry>
  
  <entry>
    <title>时光飞逝，博客两周年啦</title>
    <link href="https://fe32.top/articles/blog9527/"/>
    <id>https://fe32.top/articles/blog9527/</id>
    <published>2022-12-11T15:45:14.000Z</published>
    <updated>2023-07-05T13:12:07.442Z</updated>
    
    
    <summary type="html">来随便聊聊吧~</summary>
    
    
    
    <category term="随笔" scheme="https://fe32.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="博客记录" scheme="https://fe32.top/tags/%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/"/>
    
    <category term="随笔" scheme="https://fe32.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>包管理工具的演进</title>
    <link href="https://fe32.top/articles/pack1997/"/>
    <id>https://fe32.top/articles/pack1997/</id>
    <published>2022-12-10T08:14:02.000Z</published>
    <updated>2023-06-27T14:39:00.662Z</updated>
    
    
    <summary type="html">本文主要是围绕 npm（ Node.js 直接内置）、yarn （corepack 内置） 以及 pnpm （corepack 内置）来阐述包管理工具在迭代演进中提出的一些创新性特性以及其遇到困难是如何解决问题的。</summary>
    
    
    
    <category term="前端进阶" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="npm" scheme="https://fe32.top/tags/npm/"/>
    
    <category term="包管理工具" scheme="https://fe32.top/tags/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
    <category term="yarn" scheme="https://fe32.top/tags/yarn/"/>
    
    <category term="pnpm" scheme="https://fe32.top/tags/pnpm/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Butterfly 自定义页脚</title>
    <link href="https://fe32.top/articles/hexo1617/"/>
    <id>https://fe32.top/articles/hexo1617/</id>
    <published>2022-12-09T08:02:44.000Z</published>
    <updated>2023-06-27T14:39:00.789Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）: 环境准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）: 项目初识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）: 主题安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）: 基础配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）: 详细配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）: 主题美化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;基于 Hexo 键入搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;基于 Hexo 键入分享功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1610/&quot;&gt;基于 Hexo 键入在线聊天功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1611/&quot;&gt;基于 Hexo 键入评论功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608/&quot;&gt;Hexo + Butterfly 自定义右键菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1613/&quot;&gt;请收下这只可爱的猫咪吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;效果预览&quot;&gt;&lt;a href=&quot;#效果预览&quot; class=&quot;headerlink&quot; title=&quot;效果预览&quot;&gt;&lt;/a&gt;效果预览&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/11/6395f7970a3bb.jpg&quot; alt=&quot; 3.7.1 版本效果&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt; 3.7.1 版本效果&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/13/63986fa379730.png&quot; alt=&quot; 4.5.1 版本效果&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt; 4.5.1 版本效果&lt;/span&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;这里用 4.5.1 版本跑了【自定义页脚】的功能，主题是新拉的，可能未过多美化，只是为了验证下该功能有没有问题。如果你在使用此功能时遇见了 BUG ，请检查&lt;code&gt;footer.pug&lt;/code&gt;的格式以及&lt;code&gt;custom.css&lt;/code&gt;是否正确引入。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本人用的是&lt;code&gt;npm&lt;/code&gt;方式安装的 &lt;code&gt;hexo-theme-butterfly&lt;/code&gt;，后续魔改时更改的文件都是【BlogRoot/node_modules/hexo-theme-butterfly】文件夹中的文件。如果你是&lt;code&gt;git clone&lt;/code&gt;方式安装的主题，请在【BlogRoot/themes/butterfly】文件夹下修改对应的文件。&lt;/p&gt;
&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/footer.pug&lt;/code&gt;中添加如下代码: &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#footer-wrap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #ft&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .ft-item-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .t-top&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .t-t-l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          p.ft-t.t-l-t 说点什么&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          .bg-ad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              | （这里的内容随你写，但是不要过长影响整体美观度，具体可根据实现效果修改）随便说点什么说点什么、随便说点什么说点什么随便说点什么说点什么随便说点什么说点什么随便说点什么说。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .btn-xz-box&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a.btn-xz(href=&#39;https://fe32.top/&#39;) 点击跳转到哪儿&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .t-t-r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          p.ft-t.t-l-t 修仙导航&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ul.ft-links&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/articles/hexo1600/&#39;) 建站指南&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/nav.html&#39;) 网址导航&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/sponsorWall/&#39;) 来杯咖啡&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/comments/&#39;) 留点什么&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/about/&#39;) 关于博主&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/archives/&#39;) 文章归档&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/categories/&#39;) 文章分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/tags/&#39;) 文章标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/gallery/&#39;) 我的相册&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/bangumis/&#39;) 我的追番&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/specialEffects/&#39;) 一些特效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              a(href=&#39;https://fe32.top/wallpaper/&#39;) 一些壁纸&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .ft-item-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      p.ft-t 推荐友链&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .ft-img-group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .img-group-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          a(href=&#39;https://fe32.top/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img(src=&#39;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&#39; alt=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if theme.footer.owner.enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - var now = new Date()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - var nowYear = now.getFullYear()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if theme.footer.owner.since &amp;amp;&amp;amp; theme.footer.owner.since != nowYear&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .copyright!= `&amp;amp;copy;${theme.footer.owner.since} - ${nowYear + &#39; &#39;} &amp;lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&amp;gt;&amp;lt;/i&amp;gt; ${config.author}`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .copyright!= `&amp;amp;copy;${nowYear + &#39; &#39;} &amp;lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&amp;gt;&amp;lt;/i&amp;gt; ${config.author}`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if theme.footer.copyright&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .framework-info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span= _p(&#39;footer.framework&#39;) + &#39; &#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      a(href=&#39;https://hexo.io&#39;)= &#39;Hexo&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span.footer-separator |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span= _p(&#39;footer.theme&#39;) + &#39; &#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      a(href=&#39;https://github.com/jerryc127/hexo-theme-butterfly&#39;)= &#39;Butterfly&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if theme.footer.custom_text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .footer_custom_text!=`${theme.footer.custom_text}`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;你需要添加的代码为&lt;code&gt;#ft&lt;/code&gt;整个 div，注意在缩进上与主题的几个&lt;code&gt;if&lt;/code&gt;对齐。这里你可以根据自己的需求修改以上内容等，例如【说点什么】、自定义底部导航链接等，【推荐友链】的图片尺寸建议 1:1。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;将以下代码复制到自定义的&lt;code&gt;custom.css&lt;/code&gt;中，不会自定义css的请阅读 &lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt; 一文中关于【关于自定义的 js 和 css 文件】部分。&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 自定义底部  start */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#ft&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto &lt;span class=&quot;number&quot;&gt;12px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgb&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;80%&lt;/span&gt;) &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: left;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-2&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-1&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex-direction&lt;/span&gt;: column;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-2&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex-direction&lt;/span&gt;: column;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.t-t-l&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex-direction&lt;/span&gt;: column;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.t-t-l&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.bg-ad&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;85%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.btn-xz-box&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.btn-xz&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;var&lt;/span&gt;(--btn-bg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;var&lt;/span&gt;(--btn-color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2.4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;cursor&lt;/span&gt;: pointer &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.btn-xz&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-decoration&lt;/span&gt;: none &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.btn-xz-box&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.btn-xz&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#6f42c1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.t-t-r&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex-direction&lt;/span&gt;: column;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-links&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;list-style&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-links&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;cursor&lt;/span&gt;: pointer &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-links&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-decoration&lt;/span&gt;: none &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#6f42c1&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-2&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.ft-img-group&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-t&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.8rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.t-l-t&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-2&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.ft-img-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.img-group-item&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;18.4%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;6px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-2&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.ft-img-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.img-group-item&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;cursor&lt;/span&gt;: pointer &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ft-item-2&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.ft-img-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.img-group-item&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;768px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.ft-item-1&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;flex-basis&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.ft-item-2&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;flex-basis&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.t-t-l&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.bg-ad&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;576px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;flex-wrap&lt;/span&gt;: wrap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.t-t-l&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;flex-basis&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.t-top&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.t-t-r&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;flex-basis&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 自定义底部  End */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;css 中的&lt;code&gt;#6f42c1&lt;/code&gt;是我的主题色，这里记得换成你的主题色。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;到这里你已经成功了</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>深入理解函数式编程（下）</title>
    <link href="https://fe32.top/articles/jsnb9547/"/>
    <id>https://fe32.top/articles/jsnb9547/</id>
    <published>2022-12-06T07:28:26.000Z</published>
    <updated>2023-06-27T14:39:00.623Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;tzy-post&quot;&gt;

&lt;h2 id=&quot;前文回顾&quot;&gt;&lt;a href=&quot;#前文回顾&quot; class=&quot;headerlink&quot; title=&quot;前文回顾&quot;&gt;&lt;/a&gt;前文回顾&lt;/h2&gt;&lt;p&gt;在上篇中，我们分析了函数式编程的起源和基本特性，并通过每一个特性的示例来演示这种特性的实际效果。首先，函数式编程起源于数理逻辑，起源于&lt;strong&gt;λ演算&lt;/strong&gt;，这是一种演算法，它定义一些基础的数据结构，然后通过归约和代换来实现更复杂的数据结构，而函数本身也是它的一种数据。其次，我们探讨了很多函数式编程的特性，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First Class&lt;/li&gt;
&lt;li&gt;纯函数&lt;/li&gt;
&lt;li&gt;引用透明&lt;/li&gt;
&lt;li&gt;表达式&lt;/li&gt;
&lt;li&gt;高阶函数&lt;/li&gt;
&lt;li&gt;柯里化&lt;/li&gt;
&lt;li&gt;函数组合&lt;/li&gt;
&lt;li&gt;point-free&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但我们也指出了一个实际问题：不能处理副作用的程序是毫无意义的。我们的计算机程序随时都在产生副作用。我们程序里面有大量的网络请求、多媒体输入输出、内部状态、全局状态等，甚至在提倡“碳中和”的今天，电脑的发热量也是一个不容小觑的副作用。那么我们应该如何处理这些问题呢？&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;本文简介&quot;&gt;&lt;a href=&quot;#本文简介&quot; class=&quot;headerlink&quot; title=&quot;本文简介&quot;&gt;&lt;/a&gt;本文简介&lt;/h2&gt;&lt;p&gt;本文通过深入函数式编程的副作用处理及实际应用场景，提供一个学习和使用函数式编程的视角给读者。一方面，这种副作用管理方式是一种高级的抽象形式，不易理解；另一方面，我们在学习和使用函数式编程的过程中，几乎都会遇到类似的副作用问题需要解决，能否解决这个问题也决定了一门函数式编程语言最终是否能走上成功。&lt;/p&gt;
&lt;p&gt;本文主要分为三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;副作用处理方式&lt;/li&gt;
&lt;li&gt;函数式编程的应用&lt;/li&gt;
&lt;li&gt;函数式编程的优缺点比较&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;副作用处理：单子-Monad，一种不可避免的抽象&quot;&gt;&lt;a href=&quot;#副作用处理：单子-Monad，一种不可避免的抽象&quot; class=&quot;headerlink&quot; title=&quot;副作用处理：单子 Monad，一种不可避免的抽象&quot;&gt;&lt;/a&gt;副作用处理：单子 Monad，一种不可避免的抽象&lt;/h2&gt;&lt;p&gt;上面说的，都是最基础的 JavaScript 概念+函数式编程概念。但我们还留了一个“坑”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何去处理 IO 操作？&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;tzy-post&quot;&gt;

&lt;p&gt;我们的代码经常在和副作用打交道，如果要满足纯函数的要求，几乎连一个需求都完成不了。不用急，我们来看一下&lt;strong&gt;React Hooks&lt;/strong&gt;。&lt;strong&gt;React Hooks&lt;/strong&gt;的设计是很巧妙的，以&lt;code&gt;useEffect&lt;/code&gt;为例：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385cfb887318.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在函数组件中，&lt;code&gt;useState&lt;/code&gt;用来产生状态，在使用&lt;code&gt;useEffect&lt;/code&gt;的时候，我们需要挂载这个&lt;code&gt;state&lt;/code&gt;到第二个参数，而第一个参数给到的运行函数在&lt;code&gt;state&lt;/code&gt;变更的时候被调用，被调用时得到最新的&lt;code&gt;state&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这里面有一个状态转换：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385cfbaef537.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;React Hooks&lt;/strong&gt;给我们的启发是，副作用都被放到一个状态节点里面去被动触发，行程一个单向的数据流动。而实际上，函数式编程语言确实也是这么做的，把副作用包裹到一个特殊的函数里面。&lt;/p&gt;
&lt;p&gt;如果一个函数既包含了我们的值，又封装了值的统一操作，使得我们可以在它限定的范围内进行任意运算，那么，我们称这种函数类型为&lt;strong&gt;Monad&lt;/strong&gt;。&lt;strong&gt;Monad&lt;/strong&gt;是一种高级别的思维抽象。&lt;/p&gt;
&lt;h3 id=&quot;什么是Monad？&quot;&gt;&lt;a href=&quot;#什么是Monad？&quot; class=&quot;headerlink&quot; title=&quot;什么是Monad？&quot;&gt;&lt;/a&gt;什么是Monad？&lt;/h3&gt;&lt;p&gt;先思考一个问题，下面两个定义有什么区别？&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385cfed55040.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;num1&lt;/code&gt;是数字类型，而&lt;code&gt;num2&lt;/code&gt;是对象类型，这是一个直观的区别。&lt;/p&gt;
&lt;p&gt;不过，不仅仅如此。利用类型，我们可以做更多的事。因为作为数字的&lt;code&gt;num1&lt;/code&gt;是支持加减乘除运算的，而&lt;code&gt;num2&lt;/code&gt;却不行，必须要把它视为一个对象&lt;code&gt;{val: 2}&lt;/code&gt;，并通过属性访问符&lt;code&gt;num2.val&lt;/code&gt;才能进行计算&lt;code&gt;num2.val + 2&lt;/code&gt;。但我们知道，函数式编程是不能改变状态的，现在为了计算&lt;code&gt;num2.val&lt;/code&gt;被改变了，这不是我们期望的，并且我们使用属性操作符去读数据，更像是在操作对象，而不是操作函数，这与我们的初衷有所背离。&lt;/p&gt;
&lt;p&gt;现在我们把&lt;code&gt;num2&lt;/code&gt;当作一个独立的数据，并假设存在一个方法&lt;code&gt;fmap&lt;/code&gt;可以操作这个数据，可能是这样的。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385cff682642.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;得到的还是对象，但操作通过一个纯函数&lt;code&gt;addOne&lt;/code&gt;去实现了。&lt;/p&gt;
&lt;p&gt;上面这个例子里面的&lt;code&gt;Num&lt;/code&gt;，实际上就是一个最简单的&lt;strong&gt;Monad&lt;/strong&gt;，而&lt;code&gt;fmap&lt;/code&gt;是属于&lt;code&gt;Functor（函子）&lt;/code&gt;的概念。我们说函数就是从一个数据到另一个数据的映射，这里的fmap就是一个映射函数，在范畴论里面叫做&lt;strong&gt;态射&lt;/strong&gt;（后面讲解）。&lt;/p&gt;
&lt;p&gt;由于有一个包裹的过程，很多人会把&lt;strong&gt;Monad&lt;/strong&gt;看作是一个盒子类型。但&lt;strong&gt;Monad&lt;/strong&gt;不仅是一个盒子的概念，它还需要满足一些特定的运算规律（后面涉及）。&lt;/p&gt;
&lt;p&gt;但是我们直接使用数字的加减乘除不行吗？为什么一定要&lt;strong&gt;Monad&lt;/strong&gt;类型？&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;fmap&lt;/code&gt;的目的是把数据从一个类型映射到另一个类型，而&lt;code&gt;JavaScript&lt;/code&gt;里面的&lt;code&gt;map&lt;/code&gt;函数实际上就是这个功能。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385cfff14fdd.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们可以认为&lt;code&gt;Array&lt;/code&gt;就是一个&lt;strong&gt;Monad&lt;/strong&gt;实现，&lt;code&gt;map&lt;/code&gt;把&lt;code&gt;Array&amp;lt; T &amp;gt;&lt;/code&gt;类型映射到&lt;code&gt;Array&amp;lt; K &amp;gt;&lt;/code&gt;类型，操作仍然在数组范畴，数组的值被映射为新的值。 如果用 TypeScript 来表示，会不会更清晰一点？&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d00b3d4dc.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;看起来&lt;strong&gt;Monad&lt;/strong&gt;只是一个实现了&lt;code&gt;fmap&lt;/code&gt;的对象（&lt;code&gt;Functor&lt;/code&gt;类型，&lt;code&gt;mappable&lt;/code&gt;接口）而已。但&lt;strong&gt;Monad&lt;/strong&gt;类型不仅是一个&lt;code&gt;Functor&lt;/code&gt;，它还有很多其他的工具函数，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bind函数&lt;/li&gt;
&lt;li&gt;flatMap函数&lt;/li&gt;
&lt;li&gt;liftM函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些概念在学习&lt;strong&gt;Haskell&lt;/strong&gt;时可以遇到，本文不作过多提及。这些额外的函数可以帮助我们操作被封装起来的值。&lt;/p&gt;
&lt;h3 id=&quot;范畴、群、幺半群&quot;&gt;&lt;a href=&quot;#范畴、群、幺半群&quot; class=&quot;headerlink&quot; title=&quot;范畴、群、幺半群&quot;&gt;&lt;/a&gt;范畴、群、幺半群&lt;/h3&gt;&lt;p&gt;范畴论是一种研究抽象数学形式的科学，它把我们的数学世界抽象为两个概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象&lt;/li&gt;
&lt;li&gt;态射&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么说这是一种&lt;strong&gt;形式&lt;/strong&gt;上的抽象呢？因为很多数学的概念都可以被这种形式所描述，比如集合，对集合范畴来说，一个集合就是一个范畴对象，从集合A到集合B的映射就是集合的态射，再细化一点，整数集合到整数集合的加减乘操作构成了整数集合的态射（除法会产生整数集合无法表示的数字，因此这里排除了除法）。又比如，三角形可以被代数表示，也可以用几何表示、向量表示，从代数表示到几何表示的运算就可以视为三角形范畴的一种态射。&lt;/p&gt;
&lt;p&gt;总之，&lt;strong&gt;对象描述了一个范畴中的元素，而态射描述了针对这些元素的操作&lt;/strong&gt;。范畴论不仅可以应用到数学科学里面，在其他科学里面也有一些应用，实际上，范畴论就是我们描述客观世界的一种方式（抽象形式）。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d012bc38e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;相对应的，&lt;strong&gt;函子就是描述一个范畴对象和另一个范畴对象间关系的态射&lt;/strong&gt;，具体到编程语言中，函子是一个帮助我们映射一个范畴元素（比如&lt;strong&gt;Monad&lt;/strong&gt;）到另一个范畴元素的函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;群论（Group）&lt;/strong&gt;研究的是&lt;strong&gt;群&lt;/strong&gt;这种代数结构，怎么去理解群呢？比如一个三角形有三个顶点&lt;strong&gt;A/B/C&lt;/strong&gt;，那么我们可以表示一个三角形为&lt;strong&gt;ABC&lt;/strong&gt;或者&lt;strong&gt;ACB&lt;/strong&gt;，三角形还是这个三角形，但是从&lt;strong&gt;ABC&lt;/strong&gt;到&lt;strong&gt;ACB&lt;/strong&gt;一定是经过了某种变换。这就像范畴论，三角形的表示是范畴对象，而一个三角形的表示变换到另一个形式，就是范畴的态射。而我们说这些三角形表示方式的集合为一个&lt;strong&gt;群&lt;/strong&gt;。&lt;strong&gt;群论主要是研究变换关系&lt;/strong&gt;，群又可以分为很多种类，也有很多规律特性，这不在本文研究范围之内，读者可以自行学习相关内容。&lt;/p&gt;
&lt;p&gt;科学解释一个&lt;strong&gt;Monad&lt;/strong&gt;为自函子范畴上的幺半群。如果没有学习群论和范畴论的话，我们是很难理解这个解释的。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d01e80c1c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;简单来说先固定一个正方形abcd，它和它的几何变换方式（旋转/逆时针旋转/对称/中心对称等）形成的其他正方形一起构成一个群。从这个角度来说，群研究的事物是同一类，只是性质稍有不一样（态射后）。&lt;/p&gt;
&lt;p&gt;另外一个理解群的概念就是&lt;strong&gt;自然数（构成一个群）和加法（群的二元运算，且满足结合律，半群）&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0366e1d6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;到此，我们可以理解&lt;strong&gt;Monad&lt;/strong&gt;为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;满足自函子运算（从A范畴态射到A范畴，fmap是在自己空间做映射）。&lt;/li&gt;
&lt;li&gt;满足含幺半群的结合律。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多函数式编程里面都会实现一个&lt;code&gt;Identity&lt;/code&gt;函数，实际就是一个幺元素。比如 JavaScript 中对 Just 满足二元结合律可以这么操作：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d041267f1.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;Monad范畴：定律、折叠和链&quot;&gt;&lt;a href=&quot;#Monad范畴：定律、折叠和链&quot; class=&quot;headerlink&quot; title=&quot;Monad范畴：定律、折叠和链&quot;&gt;&lt;/a&gt;Monad范畴：定律、折叠和链&lt;/h3&gt;&lt;p&gt;我们要在一个更大的空间上讨论这个范畴对象（Monad）。就像Number封装了数字类型，&lt;strong&gt;Monad&lt;/strong&gt;也封装了一些类型。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d05494b4d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Monad&lt;/strong&gt;需要满足一些定律：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结合律：比如a · b · c = a · (b · c)。&lt;/li&gt;
&lt;li&gt;幺元：比如a · e = e · a = a。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一旦定义了&lt;strong&gt;Monad&lt;/strong&gt;为一类对象，&lt;strong&gt;fmap&lt;/strong&gt;为针对这种对象的操作，那么定律我们可以很容易证明：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0574244c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们可以通过&lt;code&gt;Monad Just&lt;/code&gt;上挂载的操作来对数据进行计算，这些运算是限定在了&lt;code&gt;Just&lt;/code&gt;上的，也就是说你只能得到&lt;code&gt;Just(..)&lt;/code&gt;类型。要获取原始数据，可以基于这个定义一个&lt;code&gt;fold&lt;/code&gt;方法。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d059b1b97.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;fold&lt;/strong&gt;（折叠，对应能力我们称为foldable）的意义在于你可以将数据从一个特定范畴映射到你的常用范畴，比如面向对象语言的 toString 方法，就是把数据从对象域转换到字符串域。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript 中的 Array.prototype.reduce 其实就是一个 fold 函数，它把数据从 Array 范畴映射到其他范畴。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一旦数据类型被我们锁定在了 Monad 空间（范畴），那我们就可以在这个范畴内连续调用 fmap（或者其他这个空间的函数）来进行值操作，这样我们就可以&lt;strong&gt;链式处理&lt;/strong&gt;我们的数据。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d05bb5e05.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;Maybe和Either&quot;&gt;&lt;a href=&quot;#Maybe和Either&quot; class=&quot;headerlink&quot; title=&quot;Maybe和Either&quot;&gt;&lt;/a&gt;Maybe和Either&lt;/h3&gt;&lt;p&gt;有了&lt;strong&gt;Just&lt;/strong&gt;的概念，我们再来学习一些新的&lt;strong&gt;Monad&lt;/strong&gt;概念。比如&lt;strong&gt;Nothing&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d05e382d4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Nothing&lt;/strong&gt;表示在&lt;strong&gt;Monad&lt;/strong&gt;范畴上没有的值。和&lt;strong&gt;Just&lt;/strong&gt;一起正好描述了所有的数据情况，合称为&lt;strong&gt;Maybe&lt;/strong&gt;，我们的&lt;strong&gt;Maybe Monad&lt;/strong&gt;要么是&lt;strong&gt;Just&lt;/strong&gt;，要么是&lt;strong&gt;Nothing&lt;/strong&gt;。这有什么意义呢？&lt;/p&gt;
&lt;p&gt;其实这就是模拟了其他范畴内的“有”和“无”的概念，方便我们模拟其他编程范式的空值操作。比如：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d060abbed.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这种情况下我们需要去判断&lt;strong&gt;x&lt;/strong&gt;和&lt;strong&gt;y&lt;/strong&gt;是否为空。在&lt;strong&gt;Monad&lt;/strong&gt;空间中，这种情况就很好表示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0632e89f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们在&lt;strong&gt;Monad&lt;/strong&gt;空间中消除了烦人的&lt;code&gt;!== null&lt;/code&gt;判断，甚至消除了三元运算符。一切都只有函数。实际使用中一个 &lt;strong&gt;Maybe&lt;/strong&gt;要么是&lt;strong&gt;Just&lt;/strong&gt;要么是&lt;strong&gt;Nothing&lt;/strong&gt;。因此，这里用**Maybe(..)**构造可能让我们难以理解。&lt;/p&gt;
&lt;p&gt;如果非要理解的话，可以理解&lt;strong&gt;Maybe&lt;/strong&gt;为&lt;strong&gt;Nothing&lt;/strong&gt;和&lt;strong&gt;Just&lt;/strong&gt;的抽象类，&lt;strong&gt;Just&lt;/strong&gt;和&lt;strong&gt;Nothing&lt;/strong&gt;构成这个抽象类的两个实现。实际在函数式编程语言实现中，&lt;strong&gt;Maybe&lt;/strong&gt;确实只是一个类型（称为代数类型），具体的一个值有具体类型&lt;strong&gt;Just&lt;/strong&gt;或&lt;strong&gt;Nothing&lt;/strong&gt;，就像数字可以分为有理数和无理数一样。&lt;/p&gt;
&lt;p&gt;除了这种值存在与否的判断，我们的程序还有一些分支结构的方式，因此我们来看一下在&lt;strong&gt;Monad&lt;/strong&gt;空间中，分支情况怎么去模拟？&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0653dcca.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;假设我们有一个代数类型&lt;strong&gt;Either&lt;/strong&gt;，&lt;strong&gt;Left&lt;/strong&gt;和&lt;strong&gt;Right&lt;/strong&gt;分别表示当数据为错误和数据为正确情况下的逻辑。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d06845509.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样，我们就可以使用“函数”来替代分支了。这里的&lt;strong&gt;Either&lt;/strong&gt;实现比较粗糙，因为&lt;strong&gt;Either&lt;/strong&gt;类型应该只在&lt;strong&gt;Monad&lt;/strong&gt;空间。这里加入了布尔常量的判断，目的是好理解一些。其他的编程语言特性，在函数式编程中也能找到对应的影子，比如循环结构，我们往往使用函数递归来实现。&lt;/p&gt;
&lt;h3 id=&quot;IO的处理方式&quot;&gt;&lt;a href=&quot;#IO的处理方式&quot; class=&quot;headerlink&quot; title=&quot;IO的处理方式&quot;&gt;&lt;/a&gt;IO的处理方式&lt;/h3&gt;&lt;p&gt;终于到&lt;strong&gt;IO&lt;/strong&gt;了，如果不能处理好&lt;strong&gt;IO&lt;/strong&gt;，我们的程序是不健全的。到目前为止，我们的&lt;strong&gt;Monad&lt;/strong&gt;都是针对数据的。这句话对也不对，因为函数也是一种数据（函数是第一公民）。我们先让&lt;strong&gt;Monad Just&lt;/strong&gt;能存储函数。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d06b888cb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你可以想象为&lt;strong&gt;Just&lt;/strong&gt;增加了一个抽象类实现，这个抽象类为：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0cf760e5.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个抽象类我们称为“应用函子”，它可以保存一个函数作为内部值，并且使用&lt;code&gt;apply&lt;/code&gt;方法可以把这个函数作用到另一个&lt;code&gt;Monad&lt;/code&gt;上。到这里，我们完全可以把Monad之间的各种操作（接口，比如&lt;code&gt;fmap&lt;/code&gt;和&lt;code&gt;apply&lt;/code&gt;）视为契约，也就是数学上的态射。&lt;/p&gt;
&lt;p&gt;现在，如果我们有一个单子叫&lt;code&gt;IO&lt;/code&gt;，并且它有如下表现：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0d2673c9.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们把这种类型的Monad称为IO，我们在IO中处理打印（副作用）。你可以把之前我们学习到的类型合并一下，得到一个示例：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0d4ad896.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通常一个程序会有一个主入口函数&lt;code&gt;main&lt;/code&gt;，这个main函数返回值类型是一个&lt;code&gt;IO&lt;/code&gt;，我们的副作用现在全在&lt;code&gt;IO&lt;/code&gt;这个范畴下运行，而其他操作，都可以保持纯净（类型运算）。&lt;/p&gt;
&lt;p&gt;IO类型让我们可以在&lt;code&gt;Monad&lt;/code&gt;空间处理那些烦人的副作用，这个&lt;code&gt;Monad&lt;/code&gt;类型和&lt;code&gt;Promise&lt;/code&gt;（限定副作用到&lt;code&gt;Promise&lt;/code&gt;域处理，可链式调用，可用&lt;code&gt;then&lt;/code&gt;折叠和映射）很像。&lt;/p&gt;
&lt;h2 id=&quot;函数式编程的应用&quot;&gt;&lt;a href=&quot;#函数式编程的应用&quot; class=&quot;headerlink&quot; title=&quot;函数式编程的应用&quot;&gt;&lt;/a&gt;函数式编程的应用&lt;/h2&gt;&lt;p&gt;除了上面我们提到的一些示例，函数式编程可以应用到更广的业务代码开发中，用来替代我们的一些基础业务代码。这里举几个例子。&lt;/p&gt;
&lt;h3 id=&quot;设计一个请求模块&quot;&gt;&lt;a href=&quot;#设计一个请求模块&quot; class=&quot;headerlink&quot; title=&quot;设计一个请求模块&quot;&gt;&lt;/a&gt;设计一个请求模块&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0d720cd5.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用这种方式构建的模块，组合和复用性很强，你也可以利用&lt;code&gt;lodash&lt;/code&gt;的其他库对&lt;code&gt;req&lt;/code&gt;做一个其他改造。我们调用业务代码的时候只管传递&lt;code&gt;params&lt;/code&gt;，分支校验和错误检查就教给&lt;code&gt;validate.js&lt;/code&gt;里面的高阶函数就好了。&lt;/p&gt;
&lt;h3 id=&quot;设计一个输入框&quot;&gt;&lt;a href=&quot;#设计一个输入框&quot; class=&quot;headerlink&quot; title=&quot;设计一个输入框&quot;&gt;&lt;/a&gt;设计一个输入框&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0d9bbd98.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个例子也是来源于前端常见的场景。我们使用函数式编程的思想，把多个看似不相关的函数进行组合，得到了业务需要的&lt;code&gt;subscribe&lt;/code&gt;函数，但同时，上面的任意一个函数都可以被用于其他功能组合。比如&lt;code&gt;callback&lt;/code&gt;函数可以直接给&lt;code&gt;dom&lt;/code&gt;回调，&lt;code&gt;listenInput&lt;/code&gt;可以用于任意一个&lt;code&gt;dom&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这种通过高阶组件不停组合得到最终结果的方式，我们可以认为就是函数式的。（尽管它没有像上一个例子一样引入&lt;strong&gt;IO/Monad&lt;/strong&gt;等概念）&lt;/p&gt;
&lt;h3 id=&quot;超长文本省略：Ramdajs为例&quot;&gt;&lt;a href=&quot;#超长文本省略：Ramdajs为例&quot; class=&quot;headerlink&quot; title=&quot;超长文本省略：Ramdajs为例&quot;&gt;&lt;/a&gt;超长文本省略：Ramdajs为例&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0dcc134a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个也是常见的前端场景，当文本长度大于X时，显示省略号，这个实现使用 Ramdajs 。这个过程中你就像是在搭积木，很容易就把业务给“搭建”完成了。&lt;/p&gt;
&lt;h2 id=&quot;函数式编程库、语言&quot;&gt;&lt;a href=&quot;#函数式编程库、语言&quot; class=&quot;headerlink&quot; title=&quot;函数式编程库、语言&quot;&gt;&lt;/a&gt;函数式编程库、语言&lt;/h2&gt;&lt;p&gt;函数式编程的库可以学习：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ramda.js：函数式编程库&lt;/li&gt;
&lt;li&gt;lodash.js：函数工具&lt;/li&gt;
&lt;li&gt;immutable.js：数据不可变&lt;/li&gt;
&lt;li&gt;rx.js：响应式编程&lt;/li&gt;
&lt;li&gt;partial.lenses：函数工具&lt;/li&gt;
&lt;li&gt;monio.js：函数式编程工具库/IO库&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你可以结合起来使用。下面是&lt;strong&gt;Ramda.js&lt;/strong&gt;示例：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/29/6385d0dece84c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;而纯函数式语言，有很多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lisp 代表软件 emacs…&lt;/li&gt;
&lt;li&gt;Haskell 代表软件 pandoc…&lt;/li&gt;
&lt;li&gt;Ocaml …&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;函数式编程并不是什么“黑科技”，它已经存在的时间甚至比面向对象编程更久远。希望本文能帮助大家理解什么是函数式编程。&lt;/p&gt;
&lt;p&gt;现在我们来回顾先览，实际上，函数式编程也是程序实现方式的一种，它和面向对象是殊途同归的。在函数式语言中，我们要构建一个个小的基础函数，并通过一些通用的流程把他们粘合起来。举个例子，面向对象里面的继承，我在函数式编程中可以使用组合compose或者高阶函数hoc来实现。&lt;/p&gt;
&lt;p&gt;尽管在实现上是等价的，但和面向对象的编程范式对比，函数式编程有很多优点值得大家去尝试。&lt;/p&gt;
&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;p&gt;除了上面提到的风格和特性之外，函数式编程相对其他编程范式，有很多优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数纯净 程序有更少的状态量，编码心智负担更小。随着状态量的增加，某些编程范式构建的软件库代码复杂度可能呈几何增长，而函数式编程的状态量都收敛了，对软件复杂度带来的影响更小。&lt;/li&gt;
&lt;li&gt;引用透明性 可以让你在不影响其他功能的前提下，升级某一个特定功能（一个对象的引用需要改动的话，可能牵一发而动全身）。&lt;/li&gt;
&lt;li&gt;高度可组合 函数之间复用方便（需要关注的状态量更少），函数的功能升级改造也更容易（高阶组件）。&lt;/li&gt;
&lt;li&gt;副作用隔离 所有的状态量被收敛到一个盒子（函数）里面处理，关注点更加集中。&lt;/li&gt;
&lt;li&gt;代码简洁/流程更清晰 通常函数式编程风格的程序，代码量比其他编程风格的少很多，这得益于函数的高度可组合性以及大量的完善的基础函数，简洁性也使得代码更容易维护。&lt;/li&gt;
&lt;li&gt;语义化 一个个小的函数分别完成一种小的功能，当你需要组合上层能力的时候，基本可以按照函数语义来进行快速组合。&lt;/li&gt;
&lt;li&gt;惰性计算 被组合的函数只会生成一个更高阶的函数，最后调用时数据才会在函数之间流动。&lt;/li&gt;
&lt;li&gt;跨语言统一性 不同的语言，似乎都遵从类似的函数式编程范式，比如Java 8的lambda表达式，Rust的collection、匿- 名函数；而面向对象的实现，不同语言可能千差万别，函数式编程的统一性让你可以舒服地跨语言开发。&lt;/li&gt;
&lt;li&gt;关键领域应用 因为函数式编程状态少、代码简洁等特点，使得它在交互复杂、安全性要求高的领域有重要的应用，像Lisp和Haskell就是因上一波人工智能热而火起来的，后来也在一些特殊的领域（银行、水利、航空航天等）得到了较大规模的应用。&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;不足&quot;&gt;&lt;a href=&quot;#不足&quot; class=&quot;headerlink&quot; title=&quot;不足&quot;&gt;&lt;/a&gt;不足&lt;/h3&gt;&lt;p&gt;当然，函数式编程也存在一些不足之处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;陡峭的学习曲线 面向对象和命令式编程范式都是贴近我们的日常习惯的方式，而函数式编程要更抽象一些，要想更好地管理副作用，你可能需要学习很多新的概念（响应式、Monad等），这些概念入门很难，而且是一个长期积累的过程。&lt;/li&gt;
&lt;li&gt;可能的调用栈溢出问题 惰性计算在一些电脑或特种程序架构上可能有函数调用栈错误（超长调用链、超长递归），另外许多函数式编程语言需要编译器支持尾递归优化（优化为循环迭代）以得到更好的性能。&lt;/li&gt;
&lt;li&gt;额外的抽象负担 当程序有大量可变状态、副作用时，用函数式编程可能造成额外的抽象负担，项目开发周期可能会延长，这时可能用其他抽象方式更好（比如OOP）。&lt;/li&gt;
&lt;li&gt;数据不变性的问题 为了数据不变，运行时可能会构建生成大量的数据副本，造成时间和空间消耗更大，拖慢性能；同时数据不可变性可能会造成构建一些基础数据结构的时候语法不简洁，性能也更差（比如LinkedList、HashMap等数据结构）。&lt;/li&gt;
&lt;li&gt;语义化的问题 往往为了开发一个功能，去造许多的基础函数，大量业务组件想要语义化的命名，也会带给开发人员很多负担；并且功能抽象能力因人而异，公共函数往往不够公用或者过度设计。&lt;/li&gt;
&lt;li&gt;生态问题 函数式编程在工业生产领域因其抽象性和性能带来的问题，被许多开发者拒之门外，一些特定功能的解决方案也更小众（相比其他编程范式），生态也一直比较小，这成为一些新的开发人员学习和使用函数式编程的又一个巨大障碍。&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;日常业务开发中，往往我们需要取长补短，在适合的领域用适合的方法/范式。大家只要要记住，软件开发并没有“银弹”。&lt;/p&gt;
&lt;h2 id=&quot;FAQ&quot;&gt;&lt;a href=&quot;#FAQ&quot; class=&quot;headerlink&quot; title=&quot;FAQ&quot;&gt;&lt;/a&gt;FAQ&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Q：你觉得Promise是不是一种Monad IO模型？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A：我认为是的。纯函数是没有异步概念的，Promise用了一种很棒的方式把异步和IO转化为了.then函数。你仍然可以在.then函数中写纯粹的函数，也可以在.then函数中调用其他的Promise，这就和IO</summary>
        
      
    
    
    
    <category term="前端进阶" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>深入理解函数式编程（上）</title>
    <link href="https://fe32.top/articles/jsnb9546/"/>
    <id>https://fe32.top/articles/jsnb9546/</id>
    <published>2022-12-04T11:17:06.000Z</published>
    <updated>2023-06-27T14:39:00.623Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;tzy-post&quot;&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文分为上下两篇，上篇讲述&lt;strong&gt;函数式编程的基础概念和特性&lt;/strong&gt;，下篇讲述&lt;strong&gt;函数式编程的进阶概念、应用及优缺点&lt;/strong&gt;。函数式编程既不是简单的堆砌函数，也不是语言范式的终极之道。我们将深入浅出地讨论它的特性，以期在日常工作中能在对应场景中进行灵活应用。&lt;/p&gt;
&lt;h2 id=&quot;代码组合和复用&quot;&gt;&lt;a href=&quot;#代码组合和复用&quot; class=&quot;headerlink&quot; title=&quot;代码组合和复用&quot;&gt;&lt;/a&gt;代码组合和复用&lt;/h2&gt;&lt;p&gt;在前端代码中，我们现有一些可行的模块复用方式，比如：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/63847e23e120f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;除了上面提到的组件和功能级别的代码复用，我们也可以在软件架构层面上，通过选择一些合理的架构设计来减少重复开发的工作量，比如说很多公司在中后台场景中大量使用的&lt;strong&gt;低代码平台&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;可以说，在大部分软件项目中，我们都要去探索&lt;strong&gt;代码组合和复用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;函数式编程，曾经有过一段黄金时代，后来又因面向对象范式的崛起而逐步变为小众范式。但是，函数式编程目前又开始在不同的语言中流行起来了，像Java 8、JS、Rust等语言都有对函数式编程的支持。&lt;/p&gt;
&lt;p&gt;今天我们就来探讨JavaScript的&lt;strong&gt;函数&lt;/strong&gt;，并进一步探讨&lt;strong&gt;JavaScript中的函数式编程&lt;/strong&gt;（关于函数式编程风格软件的&lt;strong&gt;组织、组合和复用&lt;/strong&gt;）。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/63847e2688387.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;什么是函数式编程？&quot;&gt;&lt;a href=&quot;#什么是函数式编程？&quot; class=&quot;headerlink&quot; title=&quot;什么是函数式编程？&quot;&gt;&lt;/a&gt;什么是函数式编程？&lt;/h2&gt;&lt;h3 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h3&gt;&lt;p&gt;函数式编程是一种风格范式，没有一个标准的教条式定义。我们来看一下维基百科的定义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;函数式编程是一种编程范式，它将电脑运算视为函数运算，并且避免使用程序状态以及易变对象。其中，&lt;strong&gt;λ演算&lt;/strong&gt;是该语言最重要的基础。而且λ演算的函数可以接受函数作为输入的参数和输出的返回值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们可以直接读出以下信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;避免状态变更&lt;/li&gt;
&lt;li&gt;函数作为输入输出&lt;/li&gt;
&lt;li&gt;和&lt;strong&gt;λ演算&lt;/strong&gt;有关&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那什么是&lt;strong&gt;λ演算&lt;/strong&gt;呢？&lt;/p&gt;
&lt;h3 id=&quot;函数式编程起源：λ演算&quot;&gt;&lt;a href=&quot;#函数式编程起源：λ演算&quot; class=&quot;headerlink&quot; title=&quot;函数式编程起源：λ演算&quot;&gt;&lt;/a&gt;函数式编程起源：λ演算&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;λ演算（读作lambda演算）&lt;/strong&gt;由数学家&lt;strong&gt;阿隆佐·邱奇&lt;/strong&gt;在20世纪30年代首次发表，它从&lt;strong&gt;数理逻辑&lt;/strong&gt;（Mathematical logic）中发展而来，使用变量绑定（binding）和代换规则（substitution）来研究函数如何抽象化定义（define）、函数如何被应用（apply）以及递归（recursion）的形式系统。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;λ演算&lt;/strong&gt;和图灵机等价（图灵完备，作为一种研究语言又很方便）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通常用这个定义形式来表示一个&lt;strong&gt;λ演算&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/63849ee359221.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以λ演算式就三个要点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绑定关系。变量任意性，x、y和z都行，它仅仅是具体数据的代称。&lt;/li&gt;
&lt;li&gt;递归定义。λ项递归定义，M可以是一个λ项。&lt;/li&gt;
&lt;li&gt;替换归约。λ项可应用，空格分隔表示对M应用N，N可以是一个λ项。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;比如这样的演算式：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/63849ee6247b3.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过变&lt;strong&gt;量代换（substitution）&lt;/strong&gt;和&lt;strong&gt;归约（reduction）&lt;/strong&gt;，我们可以像化简方程一样处理我们的演算。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;λ演算&lt;/strong&gt;有很多方式进行，数学家们也总结了许多和它相关的规律和定律（可查看维基百科）。&lt;/p&gt;
&lt;p&gt;举个例子，小时候我们学习整数就是学会几个数字，然后用加法/减法来推演其他数字。在&lt;strong&gt;函数&lt;/strong&gt;式编程中，我们可以用函数来定义自然数，有很多定义方式，这里我们讲一种实现方式：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/63849ee791b92.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面的演算式表示有一个函数&lt;code&gt;f&lt;/code&gt;和一个参数&lt;code&gt;x&lt;/code&gt;。令&lt;code&gt;0&lt;/code&gt;为&lt;code&gt;x&lt;/code&gt;，&lt;code&gt;1&lt;/code&gt;为&lt;code&gt;f x&lt;/code&gt;，&lt;code&gt;2&lt;/code&gt;为&lt;code&gt;f f x&lt;/code&gt;，以此类推&lt;/p&gt;
&lt;p&gt;什么意思呢？这是不是很像我们数学中的幂：&lt;strong&gt;a^x（a的x次幂表示a对自身乘x次）&lt;/strong&gt;。相应的，我们理解上面的演算式就是&lt;strong&gt;数字n就是f对x作用的次数&lt;/strong&gt;。有了这个数字的定义之后，我们就可以在这个基础上定义运算。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/63849eebb3c27.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中&lt;code&gt;SUCC&lt;/code&gt;表示后继函数（&lt;code&gt;+1操作&lt;/code&gt;），&lt;code&gt;PLUS&lt;/code&gt;表示加法。现在我们来推导这个正确性。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/63849f6067df6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样，进行&lt;strong&gt;λ演算&lt;/strong&gt;就像是方程的代换和化简，在一个已知前提（公理，比如0/1，加法）下，进行规则推演。&lt;/p&gt;
&lt;h4 id=&quot;演算：变量的含义&quot;&gt;&lt;a href=&quot;#演算：变量的含义&quot; class=&quot;headerlink&quot; title=&quot;演算：变量的含义&quot;&gt;&lt;/a&gt;演算：变量的含义&lt;/h4&gt;&lt;p&gt;在&lt;strong&gt;λ演算&lt;/strong&gt;中我们的表达式只有一个参数，那它怎么实现两个数字的二元操作呢？比如加法 a + b，需要两个参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这时，我们要把函数本身也视为值&lt;/strong&gt;，可以通过把一个变量绑定到上下文，然后返回一个新的函数，来实现数据（或者说是状态）的保存和传递，被绑定的变量可以在需要实际使用的时候从上下文中引用到。&lt;/p&gt;
&lt;p&gt;比如下面这个简单的演算式：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a3545a994.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第一次函数调用传入&lt;code&gt;m=5&lt;/code&gt;，返回一个新函数，这个新函数接收一个参数&lt;code&gt;n&lt;/code&gt;，并返回&lt;code&gt;m + n&lt;/code&gt;的结果。像这种情况产生的上下文，就是&lt;code&gt;Closure&lt;/code&gt;（闭包，函数式编程常用的状态保存和引用手段），我们称变量&lt;code&gt;m&lt;/code&gt;是被&lt;strong&gt;绑定（binding）&lt;/strong&gt;到了第二个函数的上下文。&lt;/p&gt;
&lt;p&gt;除了绑定的变量，&lt;strong&gt;λ演算&lt;/strong&gt;也支持自由的变量，比如下面这个&lt;code&gt;y&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a35863451.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里的&lt;code&gt;y&lt;/code&gt;是一个没有绑定到参数位置的变量，被称为一个&lt;strong&gt;自由变量&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绑定变量&lt;/strong&gt;和&lt;strong&gt;自由变量&lt;/strong&gt;是函数的两种状态来源，一个可以被代换，另一个不能。实际程序中，通常把绑定变量实现为局部变量或者参数，自由变量实现为全局变量或者环境变量。&lt;/p&gt;
&lt;h4 id=&quot;演算：代换和归约&quot;&gt;&lt;a href=&quot;#演算：代换和归约&quot; class=&quot;headerlink&quot; title=&quot;演算：代换和归约&quot;&gt;&lt;/a&gt;演算：代换和归约&lt;/h4&gt;&lt;p&gt;演算分为&lt;strong&gt;Alpha&lt;/strong&gt;代换和&lt;strong&gt;Beta&lt;/strong&gt;归约。 前面章节我们实际上已经涉及这两个概念，下面来介绍一下它们。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alpha代换&lt;/strong&gt;指的是变量的名称是不重要的，你可以写&lt;code&gt;λm.λn.m + n&lt;/code&gt;，也可以写&lt;code&gt;λx.λy.x + y&lt;/code&gt;，在演算过程中它们表示同一个函数。也就是说我们只&lt;strong&gt;关心计算的形式&lt;/strong&gt;，而不关心细节用什么变量去实现。这方便我们不改变运算结果的前提下去修改变量命名，以方便在函数比较复杂的情况下进行化简操作。实际上，连整个lambda演算式的名字也是不重要的，我们只需要这种形式的计算，而不在乎这个形式的命名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Beta归约&lt;/strong&gt;指的是如果你有一个&lt;strong&gt;函数应用（函数调用）&lt;/strong&gt;，那么你可以对这个函数体中与标识符对应的部分做&lt;strong&gt;代换（substitution）&lt;/strong&gt;，方式为使用参数（可能是另一个演算式）去替换标识符。听起来有点绕口，但是它实际上就是&lt;strong&gt;函数调用的参数替换&lt;/strong&gt;。比如：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a433652ea.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以使用&lt;code&gt;1&lt;/code&gt;替换&lt;code&gt;m&lt;/code&gt;，&lt;code&gt;3&lt;/code&gt;替换&lt;code&gt;n&lt;/code&gt;，那么整个表达式可以化简为&lt;code&gt;4&lt;/code&gt;。这也是函数式编程里面的引用透明性的由来。需要注意的是，这里的&lt;code&gt;1&lt;/code&gt;和&lt;code&gt;3&lt;/code&gt;表示表达式运算值，可以替换为其他表达式。比如把&lt;code&gt;1&lt;/code&gt;替换为&lt;code&gt;(λm.λn.m + n 1 3)&lt;/code&gt;，这里就需要做两次归约来得到下面的最终结果：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a474a3eb3.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;JavaScript中的λ表达式：箭头函数&quot;&gt;&lt;a href=&quot;#JavaScript中的λ表达式：箭头函数&quot; class=&quot;headerlink&quot; title=&quot;JavaScript中的λ表达式：箭头函数&quot;&gt;&lt;/a&gt;JavaScript中的λ表达式：箭头函数&lt;/h3&gt;&lt;p&gt;ECMAScript 2015规范引入了箭头函数，它没有&lt;code&gt;this&lt;/code&gt;，没有&lt;code&gt;arguments&lt;/code&gt;。只能作为一个&lt;strong&gt;表达式（expression）&lt;/strong&gt;而不能作为一个&lt;strong&gt;声明式（statement）&lt;/strong&gt;，表达式产生一个箭头函数引用，该箭头函数引用仍然有&lt;code&gt;name&lt;/code&gt;和&lt;code&gt;length&lt;/code&gt;属性，分别表示箭头函数的名字、形参（parameters）长度。一个箭头函数就是一个单纯的运算式，箭头函数我们也可以称为&lt;strong&gt;lambda函数&lt;/strong&gt;，它在书写形式上就像是一个&lt;strong&gt;λ演算式&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a4cf91714.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以利用箭头函数做一些简单的运算，下例比较了四种箭头函数的使用方式：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a4eaf19cb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这是直接针对数字（基本数据类型）的情况，如果是针对函数做运算（&lt;strong&gt;引用数据类型&lt;/strong&gt;），事情就变得有趣起来了。我们看一下下面的示例：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a51a40066.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;fn_x&lt;/code&gt;类型，表明我们可以利用函数内的函数，当函数被当作数据传递的时候，就可以对函数进行应用（apply），生成更高阶的操作。 并且&lt;code&gt;x =&amp;gt; y =&amp;gt; x(y)&lt;/code&gt;可以有两种理解，一种是&lt;code&gt;x =&amp;gt; y&lt;/code&gt;函数传入&lt;code&gt;X =&amp;gt; x(y)&lt;/code&gt;，另一种是&lt;code&gt;x&lt;/code&gt;传入 &lt;code&gt;y =&amp;gt; x(y)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;add_x&lt;/code&gt;类型表明，一个运算式可以有很多不同的路径来实现。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上面的add_1/add_2/add_3我们用到了JavaScript的立即运算表达式&lt;strong&gt;IIFE&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;λ演算&lt;/strong&gt;是一种抽象的数学表达方式，我们不关心真实的运算情况，我们只关心这种&lt;strong&gt;运算形式&lt;/strong&gt;。因此上一节的演算可以用JavaScript来模拟。下面我们来实现&lt;strong&gt;λ演算的JavaScript表示&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a6ec5866f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们把&lt;strong&gt;λ演算中&lt;/strong&gt;的&lt;code&gt;f&lt;/code&gt;和&lt;code&gt;x&lt;/code&gt;分别取为&lt;code&gt;countTime&lt;/code&gt;和&lt;code&gt;x&lt;/code&gt;，代入运算就得到了我们的自然数。&lt;/p&gt;
&lt;p&gt;这也说明了不管你使用&lt;strong&gt;符号系统&lt;/strong&gt;还是&lt;strong&gt;JavaScript语言&lt;/strong&gt;，你想要表达的&lt;strong&gt;自然数&lt;/strong&gt;是等价的。这也侧面说明&lt;strong&gt;λ演算&lt;/strong&gt;是一种&lt;strong&gt;形式上的抽象（和具体语言表述无关的抽象表达）&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;函数式编程基础：函数的元、柯里化和Point-Free&quot;&gt;&lt;a href=&quot;#函数式编程基础：函数的元、柯里化和Point-Free&quot; class=&quot;headerlink&quot; title=&quot;函数式编程基础：函数的元、柯里化和Point-Free&quot;&gt;&lt;/a&gt;函数式编程基础：函数的元、柯里化和Point-Free&lt;/h3&gt;&lt;p&gt;回到 JavaScript 本身，我们要探究&lt;strong&gt;函数&lt;/strong&gt;本身能不能带给我们更多的东西？我们在 JavaScript 中有很多创建函数的方式：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a76db19cc.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;虽然函数有这么多定义，但 function 关键字声明的函数带有&lt;code&gt;arguments&lt;/code&gt;和&lt;code&gt;this&lt;/code&gt;关键字，这让他们看起来更像是对象方法（method），而不是函数（function）。&lt;/p&gt;
&lt;p&gt;况且 function 定义的函数大多数还能被构造（比如 new Array）。&lt;/p&gt;
&lt;p&gt;接下来我们将只研究箭头函数，因为它更像是数学意义上的函数（仅执行计算过程）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有&lt;code&gt;arguments&lt;/code&gt;和&lt;code&gt;this&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不可以被构造&lt;code&gt;new&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;函数的元：完全调用和不完全调用&quot;&gt;&lt;a href=&quot;#函数的元：完全调用和不完全调用&quot; class=&quot;headerlink&quot; title=&quot;函数的元：完全调用和不完全调用&quot;&gt;&lt;/a&gt;函数的元：完全调用和不完全调用&lt;/h4&gt;&lt;p&gt;不论使用何种方式去构造一个函数，这个函数都有两个固定的信息可以获取: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;表示当前标识符指向的函数的名字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt;表示当前标识符指向的函数定义时的参数列表长度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在数学上，我们定义&lt;code&gt;f(x) = x&lt;/code&gt;是一个一元函数，而&lt;code&gt;f(x, y) = x + y&lt;/code&gt;是一个二元函数。在JavaScript中我们可以使用函数定义时的&lt;code&gt;length&lt;/code&gt;来定义它的元。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a81cb8c0d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;定义&lt;strong&gt;函数的元&lt;/strong&gt;的意义在于，我们可以对函数进行归类，并且可以明确一个函数需要的确切参数个数。函数的元在编译期（类型检查、重载）和运行时（异常处理、动态生成代码）都有重要作用。&lt;/p&gt;
&lt;p&gt;如果我给你一个&lt;strong&gt;二元函数&lt;/strong&gt;，你就知道需要传递两个参数。比如+就可以看成是一个二元函数，它的左边接受一个参数，右边接受一个参数，返回它们的和（或字符串连接）。&lt;/p&gt;
&lt;p&gt;在一些其他语言中，+确实也是由抽象类来定义实现的，比如 Rust 语言的&lt;code&gt;trait Add&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但我们上面看到的&lt;strong&gt;λ演算&lt;/strong&gt;，每个函数都只有一个元。为什么呢？&lt;/p&gt;
&lt;p&gt;只有一个元的函数方便我们进行代数运算。λ演算的参数列表使用&lt;strong&gt;λx.λy.λz&lt;/strong&gt;的格式进行分割，返回值一般都是函数，如果一个二元函数，调用时只使用了一个参数，则返回一个「不完全调用函数」。这里用三个例子解释“不完全调用”。&lt;/p&gt;
&lt;p&gt;第一个，不完全调用，代换参数后产生了一个&lt;strong&gt;不完全调用函数 λz.3 + z&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a86381b03.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第二个，Haskell代码，调用一个函数&lt;code&gt;add&lt;/code&gt;（类型为&lt;code&gt;a -&amp;gt; a -&amp;gt; a&lt;/code&gt;），得到另一个函数&lt;code&gt;add 1&lt;/code&gt;（类型为&lt;code&gt;a -&amp;gt; a&lt;/code&gt;）。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a89cda8b2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第三个，上一个例子的 JavaScript 版本。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a8c865714.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“不完全调用”在 JavaScript 中也成立。实际上它就是 JavaScript 中闭包（Closure，上面我们已经提到过）产生的原因，一个函数还没有被销毁（调用没有完全结束），你可以在子环境内使用父环境的变量。&lt;/p&gt;
&lt;p&gt;注意，上面我们使用到的是一元函数，如果使用三元函数来表示addThree，那么函数一次性就调用完毕了，不会产生不完全调用。&lt;/p&gt;
&lt;p&gt;函数的元还有一个著名的例子（面试题）：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a8df21e6d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;造成上述结果的原因就是，&lt;code&gt;Number&lt;/code&gt;是一元的，接受&lt;code&gt;map&lt;/code&gt;第一个参数就转换得到返回值；而&lt;code&gt;parseInt&lt;/code&gt;是二元的，第二个参数拿到进制为&lt;code&gt;1&lt;/code&gt;（&lt;code&gt;map&lt;/code&gt;函数为三元函数，第二个参数返回元素索引），无法输出正确的转换，只能返回&lt;code&gt;NaN&lt;/code&gt;。这个例子里面涉及到了一元、二元、三元函数，多一个元，函数体就多一个状态。如果世界上只有一元函数就好了！我们可以全通过一元函数和不完全调用来生成新的函数处理新的问题。&lt;/p&gt;
&lt;p&gt;认识到函数是有元的，这是函数式编程的重要一步，多一个元就多一种复杂度。&lt;/p&gt;
&lt;h4 id=&quot;柯里化函数：函数元降维技术&quot;&gt;&lt;a href=&quot;#柯里化函数：函数元降维技术&quot; class=&quot;headerlink&quot; title=&quot;柯里化函数：函数元降维技术&quot;&gt;&lt;/a&gt;柯里化函数：函数元降维技术&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;柯里化（curry）函数&lt;/strong&gt;是一种把函数的元降维的技术，这个名词是为了纪念我们上文提到的数学家&lt;strong&gt;阿隆佐·邱奇&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;首先，函数的几种写法是等价的（最终计算结果一致）。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a938848d0.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里列一个简单的把普通函数变为柯里化函数的方式（柯里化函数Curry）。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a959bb07a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;柯里化函数帮助我们把一个多元函数变成一个不完全调用，利用Closure的魔法，把函数调用变成延迟的偏函数(不完全调用函数)调用。这在函数&lt;strong&gt;组合、复用&lt;/strong&gt;等场景非常有用。比如：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a97db9246.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;虽然你可以用其他闭包方式来实现函数的延迟调用，但 Curry 函数绝对是其中形式最美的几种方式之一。&lt;/p&gt;
&lt;h4 id=&quot;Point-Free｜无参风格：函数的高阶组合&quot;&gt;&lt;a href=&quot;#Point-Free｜无参风格：函数的高阶组合&quot; class=&quot;headerlink&quot; title=&quot;Point-Free｜无参风格：函数的高阶组合&quot;&gt;&lt;/a&gt;Point-Free｜无参风格：函数的高阶组合&lt;/h4&gt;&lt;p&gt;函数式编程中有一种&lt;strong&gt;Point-Free&lt;/strong&gt;风格，中文语境大概可以把&lt;strong&gt;point&lt;/strong&gt;认为是参数点，对应&lt;strong&gt;λ演算&lt;/strong&gt;中的函数应用（Function Apply），或者 JavaScript 中的函数调用（Function Call），所以可以理解&lt;strong&gt;Point-Free就指的是无参调用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;来看一个日常的例子，把二进制数据转换为八进制数据：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384a9f98721d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这段代码运行起来没有问题，但我们为了处理这个转换，需要了解&lt;code&gt;parseInt(x, 2)&lt;/code&gt;和&lt;code&gt;toString(8)&lt;/code&gt;这两个函数（为什么有魔法数字2和魔法数字8），并且要关心数据（函数类型&lt;code&gt;a -&amp;gt; b&lt;/code&gt;）在每个节点的形态（关心数据的流向）。有没有一种方式，可以让我们只关心入参和出参，不关心数据流动过程呢？&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384aa4144361.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面的方法假设我们已经有了一些基础函数&lt;code&gt;toBinary&lt;/code&gt;（语义化，消除魔法数字2）和&lt;code&gt;toStringOx&lt;/code&gt;（语义化，消除魔法数字8），并且有一种方式（&lt;code&gt;pipe&lt;/code&gt;）把基础函数组合（&lt;code&gt;Composition&lt;/code&gt;）起来。如果用&lt;strong&gt;Typescript&lt;/strong&gt;表示我们的数据流动就是：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384aa7a9bb59.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用 Haskell 表示更简洁，后面都用 Haskell 类型表示方式，作为我们的符号语言。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384aa932c79b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;值得注意的是，这里的&lt;code&gt;x-&amp;gt; [int] -&amp;gt;y&lt;/code&gt;我们不用关心，因为&lt;code&gt;pipe(..)&lt;/code&gt;函数帮我们处理了它们。pipe 就像一个盒子。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384aabd3e651.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;BOX&lt;/code&gt;内容不需要我们理解。而为了达成这个目的，我们需要做这些事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;utils 一些特定的工具函数。&lt;/li&gt;
&lt;li&gt;curry 柯里化并使得函数可以被复用。&lt;/li&gt;
&lt;li&gt;composition 一个组合函数，像胶水一样粘合所有的操作。&lt;/li&gt;
&lt;li&gt;name 给每个函数定义一个见名知意的名字。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综上，&lt;strong&gt;Point-Free&lt;/strong&gt;风格是粘合一些基础函数，最终让我们的数据操作不再关心中间态的方式。这是函数式编程，或者说函数式编程语言中我们会一直遇到的风格，表明我们的基础函数是值得信赖的，我们仅关心数据转换这种形式，而不是过程。JavaScript 中有很多实现这种基础函数工具的库，最出名的是 Lodash 。&lt;/p&gt;
&lt;p&gt;可以说函数式编程范式就是在不停地组合函数。&lt;/p&gt;
&lt;h3 id=&quot;函数式编程特性&quot;&gt;&lt;a href=&quot;#函数式编程特性&quot; class=&quot;headerlink&quot; title=&quot;函数式编程特性&quot;&gt;&lt;/a&gt;函数式编程特性&lt;/h3&gt;&lt;p&gt;说了这么久，都是在讲函数，那么究竟什么是函数式编程呢？在网上你可以看到很多定义，但大都离不开这些特性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First Class 函数：函数可以被应用，也可以被当作数据。&lt;/li&gt;
&lt;li&gt;Pure 纯函数，无副作用：任意时刻以相同参数调用函数任意次数得到的结果都一样。&lt;/li&gt;
&lt;li&gt;Referential Transparency 引用透明：可以被表达式替代。&lt;/li&gt;
&lt;li&gt;Expression 基于表达式：表达式可以被计算，促进数据流动，状态声明就像是一个暂停，好像数据到这里就会停滞了一下。&lt;/li&gt;
&lt;li&gt;Immutable 不可变性：参数不可被修改、变量不可被修改—宁可牺牲性能，也要产生新的数据（Rust内存模型例外）。&lt;/li&gt;
&lt;li&gt;High Order Function 大量使用高阶函数：变量存储、闭包应用、函数高度可组合。&lt;/li&gt;
&lt;li&gt;Curry 柯里化：对函数进行降维，方便进行组合。&lt;/li&gt;
&lt;li&gt;Composition 函数组合：将多个单函数进行组合，像流水线一样工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外还有一些特性，有的会提到，有的一笔带过，但实际也是一个特性（以Haskell为例）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type Inference 类型推导：如果无法确定数据的类型，那函数怎么去组合？（常见，但非必需）&lt;/li&gt;
&lt;li&gt;Lazy Evaluation 惰性求值：函数天然就是一个执行环境，惰性求值是很自然的选择。&lt;/li&gt;
&lt;li&gt;Side Effect IO：一种类型，用于处理副作用。一个不能执行打印文字、修改文件等操作的程序，是没有意义的，总要有位置处理副作用。（边缘）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数学上，我们定义函数为&lt;strong&gt;集合A&lt;/strong&gt;到&lt;strong&gt;集合B&lt;/strong&gt;的映射。在函数式编程中，我们也是这么认为的。函数就是把数据从某种形态映射到另一种形态。注意理解“映射”，后面我们还会讲到。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384ab2abb9c7.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;First-Class：函数也是一种数据&quot;&gt;&lt;a href=&quot;#First-Class：函数也是一种数据&quot; class=&quot;headerlink&quot; title=&quot;First Class：函数也是一种数据&quot;&gt;&lt;/a&gt;First Class：函数也是一种数据&lt;/h4&gt;&lt;p&gt;函数本身也是数据的一种，可以是参数，也可以是返回值。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384ab4ede612.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过这种方式，我们可以让函数作为一种可以保存状态的值进行流动，也可以充分利用不完全调用函数来进行函数组合。把函数作为数据，实际上就让我们有能力获取函数内部的状态，这样也产生了闭包。但函数式编程不强调状态，大部分情况下，我们的“状态”就是一个函数的元（我们从元获取外部状态）。&lt;/p&gt;
&lt;h4 id=&quot;纯函数：无状态的世界&quot;&gt;&lt;a href=&quot;#纯函数：无状态的世界&quot; class=&quot;headerlink&quot; title=&quot;纯函数：无状态的世界&quot;&gt;&lt;/a&gt;纯函数：无状态的世界&lt;/h4&gt;&lt;p&gt;通常我们定义输入输出（IO）是不纯的，因为 IO 操作不仅操作了数据，还操作了这个数据范畴外部的世界，比如打印、播放声音、修改变量状态、网络请求等。这些操作并不是说对程序造成了破坏，相反，一个完整的程序一定是需要它们的，不然我们的所有计算都将毫无意义。&lt;/p&gt;
&lt;p&gt;但纯函数是可预测的，引用透明的，我们希望代码中更多地出现纯函数式的代码，这样的代码可以被预测，可以被表达式替换，而更多地把 IO 操作放到一个统一的位置做处理。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384ab71c3579.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这个&lt;code&gt;add&lt;/code&gt;函数是不纯的，但我们把副作用都放到它里面了。任意使用这个&lt;code&gt;add&lt;/code&gt;函数的位置，都将变成不纯的（就像是&lt;code&gt;async/await&lt;/code&gt;的传递性一样）。需要说明的是抛开实际应用来谈论函数的纯粹性是毫无意义的，我们的程序需要和终端、网络等设备进行交互，不然一个计算的运行结果将毫无意义。但对于函数的元来说，这种纯粹性就很有意义，比如：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384ab947b333.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当函数的元像上面那样是一个引用值，如果一个函数的调用不去控制自己的纯粹性，对别人来说，可能会造成毁灭性打击。因此我们需要对引用值特别小心。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384abad9962d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面这种解构赋值的方式仅解决了第一层的引用值，很多其他情况下，我们要处理一个引用树、或者返回一个引用树，这需要更深层次的解引用操作。请小心对待你的引用。&lt;/p&gt;
&lt;p&gt;函数的纯粹性要求我们时刻提醒自己降低状态数量，把变化留在函数外部。&lt;/p&gt;
&lt;h4 id=&quot;引用透明：代换&quot;&gt;&lt;a href=&quot;#引用透明：代换&quot; class=&quot;headerlink&quot; title=&quot;引用透明：代换&quot;&gt;&lt;/a&gt;引用透明：代换&lt;/h4&gt;&lt;p&gt;通过表达式替代（也就是λ演算中讲的归约），可以得到最终数据形态。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384abe27fa21.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也就是说，调用一个函数的位置，我们可以使用函数的调用结果来替代此函数调用，产生的结果不变。&lt;/p&gt;
&lt;p&gt;一个引用透明的函数调用链永远是可以被合并式代换的。&lt;/p&gt;
&lt;h4 id=&quot;不可变性：把简单留给自己&quot;&gt;&lt;a href=&quot;#不可变性：把简单留给自己&quot; class=&quot;headerlink&quot; title=&quot;不可变性：把简单留给自己&quot;&gt;&lt;/a&gt;不可变性：把简单留给自己&lt;/h4&gt;&lt;p&gt;一个函数不应该去改变原有的引用值，避免对运算的其他部分造成影响。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384ac0c5a89b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一个充满变化的世界是混沌的，在函数式编程世界，我们需要强调参数和值的不可变性，甚至在很多时候我们可以为了不改变原来的引用值，牺牲性能以产生新的对象来进行运算。牺牲一部分性能来保证我们程序的每个部分都是可预测的，任意一个对象从创建到消失，它的值应该是固定的。&lt;/p&gt;
&lt;p&gt;一个元如果是引用值，请使用一个副本（克隆、复制、替代等方式）来得到状态变更。&lt;/p&gt;
&lt;h4 id=&quot;高阶：函数抽象和组合&quot;&gt;&lt;a href=&quot;#高阶：函数抽象和组合&quot; class=&quot;headerlink&quot; title=&quot;高阶：函数抽象和组合&quot;&gt;&lt;/a&gt;高阶：函数抽象和组合&lt;/h4&gt;&lt;p&gt;JS 中用的最多的就是 Array 相关的高阶函数。实际上 Array 是一种 Monad（后面讲解）。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384ac3bb03d8.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过高阶函数传递和修改变量：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384ac5d68209.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;高阶函数实际上为我们提供了注入环境变量（或者说绑定环境变量）提供了更多可能。React 的高阶组件就从这个思想上借用而来。一个高阶函数就是使用或者产生另一个函数的函数。高阶函数是函数组合（Composition）的一种方式。&lt;/p&gt;
&lt;p&gt;高阶函数让我们可以更好地组合业务。常见的高阶函数有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;map&lt;/li&gt;
&lt;li&gt;compose&lt;/li&gt;
&lt;li&gt;fold&lt;/li&gt;
&lt;li&gt;pipe&lt;/li&gt;
&lt;li&gt;curry&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;惰性计算：降低运行时开销&quot;&gt;&lt;a href=&quot;#惰性计算：降低运行时开销&quot; class=&quot;headerlink&quot; title=&quot;惰性计算：降低运行时开销&quot;&gt;&lt;/a&gt;惰性计算：降低运行时开销&lt;/h4&gt;&lt;p&gt;惰性计算的含义就是在真正调用到的时候才执行，中间步骤不真实执行程序。这样可以让我们在运行时创建很多基础函数，但并不影响实际业务运行速度，唯有业务代码真实调用时才产生开销。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384aca401e7f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;map(addOne)&lt;/code&gt;并不会真实执行&lt;code&gt;+1&lt;/code&gt;，只有真实调用&lt;code&gt;exec&lt;/code&gt;才执行。当然这个只是一个简单的例子，强大的惰性计算在函数式编程语言中还有很多其他例子。比如：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384acb0302d6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;无穷”只是一个字面定义，我们知道计算机是无法定义无穷的数据的，因此数据在take的时候才真实产生。&lt;/p&gt;
&lt;p&gt;惰性计算让我们可以无限使用函数组合，在写这些函数组合的过程中并不产生调用。但这种形式，可能会有一个严重的问题，那就是产生一个非常长的调用栈，而虚拟机或者解释器的函数调用栈一般都是有上限的，比如2000个，超过这个限制，函数调用就会栈溢出。虽然函数调用栈过长会引起这个严重的问题，但这个问题其实不是函数式语言设计的逻辑问题，因为调用栈溢出的问题在任何设计不良的程序中都有可能出现，惰性计算只是利用了函数调用栈的特性，而不是一种缺陷。&lt;/p&gt;
&lt;p&gt;记住，任何时候我们都可以重构代码，通过良好的设计来解决栈溢出的问题。&lt;/p&gt;
&lt;h4 id=&quot;类型推导&quot;&gt;&lt;a href=&quot;#类型推导&quot; class=&quot;headerlink&quot; title=&quot;类型推导&quot;&gt;&lt;/a&gt;类型推导&lt;/h4&gt;&lt;p&gt;当前的JS有TypeScript的加持，也可以算是有类型推导了。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384acddc4fdf.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;没有类型推导的函数式编程，在使用的时候会很不方便，所有的工具函数都要查表查示例，开发中效率会比较低下，也容易造成错误。&lt;/p&gt;
&lt;p&gt;但并不是说一门函数式语言必须要类型推导，这不是强制的。像&lt;strong&gt;Lisp&lt;/strong&gt;就没有强制类型推导，JavaScript 也没有强制的类型推导，这不影响他们的成功。只是说，有了类型推导，我们的编译器可以在编译器期间提前捕获错误，甚至在编译之前，写代码的时候就可以发现错误。类型推导是一些语言强调的优秀特性，它确实可以帮助我们提前发现更多的代码问题。像 Rust、Haskell 等。&lt;/p&gt;
&lt;h4 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h4&gt;&lt;p&gt;你现在也可以总结一些其他的风格或者定义。比如强调函数的组合、强调&lt;strong&gt;Point-Free&lt;/strong&gt;的风格等等。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/28/6384aedc01f2f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h3&gt;&lt;p&gt;函数式有很多基础的特性，熟练地使用这些特性，并加以巧妙地组合，就形成了我们的“函数式编程范式”。这些基础特性让我们对待一个 function，更多地看作函数，而不是一个方法。在许多场景下，使用这种范式进行编程，就像是在做数学推导（或者说是类型推导），它让我们像学习数学一样，把一个个复杂的问题简单化，再进行累加/累积，从而得到结果。&lt;/p&gt;
&lt;p&gt;同时，函数式编程还有一块大的领域需要进入，即副作用处理。不处理副作用的程序是毫无意义的（仅在内存中进行计算），下篇我们将深入函数式编程的应用，为我们的工程应用发掘出更多的特性。&lt;/p&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="前端进阶" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>Uni-App 整包更新与热更新方案(安卓和IOS)</title>
    <link href="https://fe32.top/articles/uni10087/"/>
    <id>https://fe32.top/articles/uni10087/</id>
    <published>2022-11-27T08:36:23.000Z</published>
    <updated>2023-06-27T14:39:00.727Z</updated>
    
    
    <summary type="html">提供一种uni-app整包更新与热更新的方案，包括APP和后台客户端版本管理。</summary>
    
    
    
    <category term="uni-app" scheme="https://fe32.top/categories/uni-app/"/>
    
    
    <category term="uni-app" scheme="https://fe32.top/tags/uni-app/"/>
    
    <category term="热更新" scheme="https://fe32.top/tags/%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
    
    <category term="整包更新" scheme="https://fe32.top/tags/%E6%95%B4%E5%8C%85%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>如何白嫖一个视频云存储？</title>
    <link href="https://fe32.top/articles/hexo1616/"/>
    <id>https://fe32.top/articles/hexo1616/</id>
    <published>2022-11-12T08:02:44.000Z</published>
    <updated>2023-06-27T14:39:00.654Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/735570394b43e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;p&gt;实际视频效果请移步: &lt;a href=&quot;https://fe32.top/comments/&quot;&gt;留言板&lt;/a&gt; 、 &lt;a href=&quot;https://fe32.top/link/&quot;&gt;友链&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;登录 &lt;a href=&quot;https://cp.kuaishou.com/&quot;&gt;快手创作者服务平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;上传目标视频&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/14/63723f09c07d6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/14/63723f7fcf25b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;填好相关信息（记得公开视频），发布视频。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/14/63723f91c1678.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/14/63723f9e4e252.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;只要不涉及违规内容，一般几分钟内就过审了。我是 21:48 左右发布的，21:50 就通过了。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/14/63723fe451de2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;点击、播放视频，然后 f12 打开控制台，找到 video 标签的 src 属性的值。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/14/637241501ea95.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;链接类似长成这样：&lt;br&gt;&lt;a href=&quot;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/upic/2022/11/13/21/BMjAyMjExMTMyMTQxNThfMjk1MTM4ODg1MV84ODY2ODQ2MzE3NV8wXzM=_b_B5980ab28f909cff50f35f4b4b1c8c298.mp4?pkey=AAXiQ8JSCuGGABOk_mqk_wvH4ySvg8HAT78WZCQ1G-jb6U0uQK6D6Tym1DM_CCMXoXC4y8TTZbZj1cwgFhaOYWlrIACZbnoxgc7kxykzJRwvw1wFX0ovoDQFxw2JarNXirM&amp;amp;tag=1-1668349109-unknown-0-wkh6ikmtw8-af102da173c49a79&amp;amp;clientCacheKey=3xbzqru9scddmwi_b.mp4&amp;amp;di=7788c6d6&amp;amp;bp=10004&amp;amp;tt=b&amp;amp;ss=vp&amp;amp;ali_redirect_ex_hot=66666800&amp;amp;ali_redirect_ex_beacon=1&quot;&gt;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/upic/2022/11/13/21/BMjAyMjExMTMyMTQxNThfMjk1MTM4ODg1MV84ODY2ODQ2MzE3NV8wXzM=_b_B5980ab28f909cff50f35f4b4b1c8c298.mp4?pkey=AAXiQ8JSCuGGABOk_mqk_wvH4ySvg8HAT78WZCQ1G-jb6U0uQK6D6Tym1DM_CCMXoXC4y8TTZbZj1cwgFhaOYWlrIACZbnoxgc7kxykzJRwvw1wFX0ovoDQFxw2JarNXirM&amp;amp;tag=1-1668349109-unknown-0-wkh6ikmtw8-af102da173c49a79&amp;amp;clientCacheKey=3xbzqru9scddmwi_b.mp4&amp;amp;di=7788c6d6&amp;amp;bp=10004&amp;amp;tt=b&amp;amp;ss=vp&amp;amp;ali_redirect_ex_hot=66666800&amp;amp;ali_redirect_ex_beacon=1&lt;/a&gt;&lt;br&gt;【.mp4】后面拼的参数可以去掉。最终变成：&lt;br&gt;&lt;a href=&quot;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/upic/2022/11/13/21/BMjAyMjExMTMyMTQxNThfMjk1MTM4ODg1MV84ODY2ODQ2MzE3NV8wXzM=_b_B5980ab28f909cff50f35f4b4b1c8c298.mp4&quot;&gt;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/upic/2022/11/13/21/BMjAyMjExMTMyMTQxNThfMjk1MTM4ODg1MV84ODY2ODQ2MzE3NV8wXzM=_b_B5980ab28f909cff50f35f4b4b1c8c298.mp4&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;此链接过一段时间（大概24小时），就会被拒绝访问。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/14/6372437d3ab72.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;最后一步，也是最重要的一步。你只需将 【&lt;a href=&quot;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/upic/2022/11/13/21/BMjAyMjExMTMyMTQxNThfMjk1MTM4ODg1MV84ODY2ODQ2MzE3NV8wXzM=_b_B5980ab28f909cff50f35f4b4b1c8c298.mp4&quot;&gt;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/upic/2022/11/13/21/BMjAyMjExMTMyMTQxNThfMjk1MTM4ODg1MV84ODY2ODQ2MzE3NV8wXzM=_b_B5980ab28f909cff50f35f4b4b1c8c298.mp4&lt;/a&gt;】&lt;code&gt;upic&lt;/code&gt;之前的链接 【&lt;a href=&quot;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/&quot;&gt;https://v213x8lm4u6mmiog26eezs9fet01ayhzb.mobgslb.tbcache.com/v2.kwaicdn.com/&lt;/a&gt;】替换成 【&lt;a href=&quot;https://txmov2.a.yximgs.com/&quot;&gt;https://txmov2.a.yximgs.com/&lt;/a&gt;】即可。&lt;/li&gt;
&lt;li&gt;最后让我们来看下视频效果：&lt;div class=&quot;video&quot;&gt;&lt;video controls=&quot;&quot; preload=&quot;&quot;&gt;&lt;source src=&quot;https://txmov2.a.yximgs.com/upic/2022/11/13/21/BMjAyMjExMTMyMTQxNThfMjk1MTM4ODg1MV84ODY2ODQ2MzE3NV8wXzM=_b_B5980ab28f909cff50f35f4b4b1c8c298.mp4&quot; type=&quot;video/mp4&quot;&gt;Your browser does not support the video</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>飞只因太美，给你的首页装上吧！</title>
    <link href="https://fe32.top/articles/hexo1615/"/>
    <id>https://fe32.top/articles/hexo1615/</id>
    <published>2022-11-06T04:45:08.000Z</published>
    <updated>2023-06-27T14:39:00.810Z</updated>
    
    
    <summary type="html">一架会飞的大灰机~</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>一文吃透 CSS Flex 布局</title>
    <link href="https://fe32.top/articles/cssnb001/"/>
    <id>https://fe32.top/articles/cssnb001/</id>
    <published>2022-10-30T14:53:19.000Z</published>
    <updated>2023-06-27T14:39:00.709Z</updated>
    
    
    <summary type="html">Flexbox 布局也叫 Flex 布局。它的主要思想是使父元素能够调整子元素的宽度、高度、排列方式，从而更好的适应可用的布局空间。</summary>
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
    <category term="Flex" scheme="https://fe32.top/tags/Flex/"/>
    
  </entry>
  
  <entry>
    <title>优雅的使用Webstack打造个人网址导航</title>
    <link href="https://fe32.top/articles/we0524bs/"/>
    <id>https://fe32.top/articles/we0524bs/</id>
    <published>2022-10-30T04:01:01.000Z</published>
    <updated>2023-06-27T14:39:00.694Z</updated>
    
    
    <summary type="html">Webstack一个开源的公益项目，你可以拿来制作自己的网址导航，多种主题版本供你选择，个人选择的是Hexo。</summary>
    
    
    
    <category term="Webstack" scheme="https://fe32.top/categories/Webstack/"/>
    
    
    <category term="Webstack" scheme="https://fe32.top/tags/Webstack/"/>
    
    <category term="网址导航" scheme="https://fe32.top/tags/%E7%BD%91%E5%9D%80%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>关于Vercel被墙导致获取Twikoo评论失败的解决方案</title>
    <link href="https://fe32.top/articles/hexo1614/"/>
    <id>https://fe32.top/articles/hexo1614/</id>
    <published>2022-10-23T14:07:18.000Z</published>
    <updated>2023-06-27T14:39:00.688Z</updated>
    
    
    <summary type="html">由于Vercel官方域名的Dns污染问题，导致在不挂梯子的情况下无法获取Twikoo评论数据。这里提供一种解决方案，需要的请自提！</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>浅谈性能优化之图片压缩、加载和格式选择</title>
    <link href="https://fe32.top/articles/we0523bs/"/>
    <id>https://fe32.top/articles/we0523bs/</id>
    <published>2022-10-23T08:38:14.000Z</published>
    <updated>2023-06-27T14:39:00.645Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在认识图片优化前，我们先了解下 【二进制位数】与【色彩呈现】的关系。&lt;/p&gt;
&lt;h2 id=&quot;二进制位数与色彩&quot;&gt;&lt;a href=&quot;#二进制位数与色彩&quot; class=&quot;headerlink&quot; title=&quot;二进制位数与色彩&quot;&gt;&lt;/a&gt;二进制位数与色彩&lt;/h2&gt;&lt;p&gt;在计算机中，一般用二进制数来表示像素。在不同的图片格式中，像素与二进制位数之间对应的关系是不同的。一个像素对应的二进制位数越多，它能表示的颜色种类就丰富，成像效果也就越精致，图片所需的存储空间相应也会越大。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355019ae9db4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;目前市场上优化图片资源的方式有很多，如压缩图片、选择正确格式、 CDN 加速、懒加载等。&lt;/p&gt;
&lt;h2 id=&quot;压缩图片&quot;&gt;&lt;a href=&quot;#压缩图片&quot; class=&quot;headerlink&quot; title=&quot;压缩图片&quot;&gt;&lt;/a&gt;压缩图片&lt;/h2&gt;&lt;p&gt;压缩图片相信是大家第一时间想到的方案。像我们比较熟悉的 &lt;a href=&quot;https://tinypng.com/&quot;&gt;tinpng&lt;/a&gt;，他的原理是通过有”选择性”地减少图像所要存储的颜色数量，来减少图片所要存储的内存。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“ When you upload a PNG (Portable Network Graphics) file, similar colors in your image are combined. This technique is called “quantization”. By reducing the number of colors, 24-bit PNG files can be converted to much smaller 8-bit indexed color images. ”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355019d177bd.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们来看下样例：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355087a5e6d5.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;细节展示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/635501a1f3d53.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;图片格式&quot;&gt;&lt;a href=&quot;#图片格式&quot; class=&quot;headerlink&quot; title=&quot;图片格式&quot;&gt;&lt;/a&gt;图片格式&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355131a9d264.png&quot; alt=&quot;思维导图&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;思维导图&lt;/span&gt;&lt;/div&gt;

&lt;h3 id=&quot;JPEG-JPG&quot;&gt;&lt;a href=&quot;#JPEG-JPG&quot; class=&quot;headerlink&quot; title=&quot;JPEG / JPG&quot;&gt;&lt;/a&gt;JPEG / JPG&lt;/h3&gt;&lt;p&gt;JPEG 是最常用的图像文件格式。&lt;/p&gt;
&lt;h4 id=&quot;优势&quot;&gt;&lt;a href=&quot;#优势&quot; class=&quot;headerlink&quot; title=&quot;优势&quot;&gt;&lt;/a&gt;优势&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;支持极高的压缩率，可使文件传输、下载、预览速度大大加快。&lt;/li&gt;
&lt;li&gt;利用可变的压缩比可以控制文件大小。&lt;/li&gt;
&lt;li&gt;能够轻松地处理 1600 万种颜色，可以很好地再现全彩色的图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺陷&quot;&gt;&lt;a href=&quot;#缺陷&quot; class=&quot;headerlink&quot; title=&quot;缺陷&quot;&gt;&lt;/a&gt;缺陷&lt;/h4&gt;&lt;p&gt;JPG 的有损压缩在 &lt;strong&gt;轮播图&lt;/strong&gt; 和 &lt;strong&gt;背景图&lt;/strong&gt; 的展示上确实很难看出破绽，但当它处理矢量图形和 Logo 等线条感较强、颜色对比强烈的图像时，人为压缩导致的 &lt;strong&gt;图片模糊&lt;/strong&gt; 会相当明显。因此不适宜用该格式来显示 &lt;strong&gt;高清晰度&lt;/strong&gt; 和 &lt;strong&gt;线条感较强&lt;/strong&gt; 的图像。&lt;/p&gt;
&lt;p&gt;除此之外， JPG 并不支持对有透明度要求的图像进行显示，如果需要显示 &lt;strong&gt;透明图片&lt;/strong&gt; 还是需要另寻它路。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/635501a4c52bb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;业务场景&quot;&gt;&lt;a href=&quot;#业务场景&quot; class=&quot;headerlink&quot; title=&quot;业务场景&quot;&gt;&lt;/a&gt;业务场景&lt;/h4&gt;&lt;p&gt;JPG 适用于呈现色彩丰富的图片，在我们日常开发中，JPG 图片经常作为大的 &lt;strong&gt;背景图&lt;/strong&gt;、&lt;strong&gt;轮播图&lt;/strong&gt;或 &lt;strong&gt;预览图&lt;/strong&gt; 出现。打开某电商网站首页，即可看到大图片的处理几乎都是使用了  JPG。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/635501a6b0034.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;PNG-8-与-PNG-24&quot;&gt;&lt;a href=&quot;#PNG-8-与-PNG-24&quot; class=&quot;headerlink&quot; title=&quot;PNG-8 与 PNG-24&quot;&gt;&lt;/a&gt;PNG-8 与 PNG-24&lt;/h3&gt;&lt;p&gt;png 是一种采用无损压缩算法的位图格式。&lt;/p&gt;
&lt;h4 id=&quot;优势-1&quot;&gt;&lt;a href=&quot;#优势-1&quot; class=&quot;headerlink&quot; title=&quot;优势&quot;&gt;&lt;/a&gt;优势&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;无损压缩&lt;/li&gt;
&lt;li&gt;完全支持 alpha 透明度。&lt;/li&gt;
&lt;li&gt;可以重复保存且不降低图像质量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h4&gt;&lt;p&gt;体积太大&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355096610cf0.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;


&lt;h4 id=&quot;业务场景-1&quot;&gt;&lt;a href=&quot;#业务场景-1&quot; class=&quot;headerlink&quot; title=&quot;业务场景&quot;&gt;&lt;/a&gt;业务场景&lt;/h4&gt;&lt;p&gt;理论上来说，当你追求最佳的显示效果(详情展示图、图片有放大需求、摄影作品等)，并且不在意存储大小或所需带宽时，可以使用 &lt;a href=&quot;https://baike.baidu.com/item/PNG/174154?fr=aladdin&quot;&gt;PNG-24&lt;/a&gt;。但实践当中，为了避免文件体积过大的问题，我们一般不用 PNG 去处理较复杂的图像。当我们遇到适合 PNG 的场景时，也会优先选择更为小巧的 PNG-8 。&lt;/p&gt;
&lt;p&gt;亦或者需要处理有透明度或线条明显的图片时，也会采用 PNG 。如网站主 logo：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355096a53689.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;SVG&quot;&gt;&lt;a href=&quot;#SVG&quot; class=&quot;headerlink&quot; title=&quot;SVG&quot;&gt;&lt;/a&gt;SVG&lt;/h3&gt;&lt;p&gt;严格来说应该是一种开放标准的矢量图形语言。&lt;/p&gt;
&lt;h4 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;可缩放,可支持无限放大&lt;/li&gt;
&lt;li&gt;可编程&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-1&quot;&gt;&lt;a href=&quot;#缺点-1&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;不是所有的浏览器都支持 SVG，IE8 和早期版本都需要一个插件。&lt;/li&gt;
&lt;li&gt;复杂的图片会降低渲染速度(只支持小图)。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355096e70295.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;业务场景-2&quot;&gt;&lt;a href=&quot;#业务场景-2&quot; class=&quot;headerlink&quot; title=&quot;业务场景&quot;&gt;&lt;/a&gt;业务场景&lt;/h4&gt;&lt;p&gt;SVG 是文本文件，我们既可以像写代码一样定义 SVG ，把它写在 HTML  里、成为 DOM 的一部分。用的比较多的就是 &lt;a href=&quot;https://www.iconfont.cn/&quot;&gt;iconfont&lt;/a&gt;。我们可以通过设置模块的&lt;code&gt;fill&lt;/code&gt;属性轻松适配图标的换肤功能，并通过&lt;code&gt;font-size&lt;/code&gt;调节其大小。&lt;/p&gt;
&lt;h3 id=&quot;Base64&quot;&gt;&lt;a href=&quot;#Base64&quot; class=&quot;headerlink&quot; title=&quot;Base64&quot;&gt;&lt;/a&gt;Base64&lt;/h3&gt;&lt;p&gt;一种基于 64 个可打印字符来表示二进制数据的方法。&lt;/p&gt;
&lt;h4 id=&quot;优点-1&quot;&gt;&lt;a href=&quot;#优点-1&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;减少网络请求&lt;/li&gt;
&lt;li&gt;对于动态实时生成的图片无需将图片存储在服务器占用服务器资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-2&quot;&gt;&lt;a href=&quot;#缺点-2&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;只适于小图。&lt;/li&gt;
&lt;li&gt;若需要频繁替换的图片需要整个代码替换，可维护性低。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;业务场景-3&quot;&gt;&lt;a href=&quot;#业务场景-3&quot; class=&quot;headerlink&quot; title=&quot;业务场景&quot;&gt;&lt;/a&gt;业务场景&lt;/h4&gt;&lt;p&gt;Base64 和雪碧图一样，是作为小图标解决方案而存在的。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/63550972c22e4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;“ Base64 是一种用于传输 8Bit 字节码的编码方式，通过对图片进行 Base64 编码，我们可以直接将编码结果写入 HTML 或者写入 CSS ，从而减少 HTTP 请求的次数。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Elements 中搜索 “base64” 关键字，你会发现 Base64 也有很多使用的地方。而且它对应的图片占用内存较小。&lt;/p&gt;
&lt;p&gt;既然 Base64 这么棒，我们把所有图片都用Base64 好了嘛。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355097710675.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Base64 编码后，图片大小会膨胀为原文件的 4/3（&lt;a href=&quot;https://blog.csdn.net/wo541075754/article/details/81734770&quot;&gt;Base64 编码原理&lt;/a&gt;）。如果我们把大图也编码到 HTML 或 CSS 文件中，后者的体积会明显增加，即便我们减少了 HTTP 请求，也无法弥补这庞大的体积带来的性能开销。也就是说我们牺牲的 &lt;strong&gt;渲染性能&lt;/strong&gt; 大于 &lt;strong&gt;资源请求性能&lt;/strong&gt;，这样做不太值得。&lt;/p&gt;
&lt;p&gt;我们可以看到，大多数用 Base64 编码的图片都是小图。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355097a2861a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;WebP&quot;&gt;&lt;a href=&quot;#WebP&quot; class=&quot;headerlink&quot; title=&quot;WebP&quot;&gt;&lt;/a&gt;WebP&lt;/h3&gt;&lt;p&gt;一种同时提供了有损压缩与无损压缩（可逆压缩）的图片文件格式。&lt;/p&gt;
&lt;h4 id=&quot;优点-2&quot;&gt;&lt;a href=&quot;#优点-2&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;支持有损无损&lt;/li&gt;
&lt;li&gt;占用体积小&lt;/li&gt;
&lt;li&gt;可支持透明&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;缺点-3&quot;&gt;&lt;a href=&quot;#缺点-3&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;兼容性不好&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/63551310ab344.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;业务场景-4&quot;&gt;&lt;a href=&quot;#业务场景-4&quot; class=&quot;headerlink&quot; title=&quot;业务场景&quot;&gt;&lt;/a&gt;业务场景&lt;/h4&gt;&lt;p&gt;同 JPEG/JPG 。因为目前兼容性不好，一般搭配 JPEG/JPG 一起使用。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/635513172207c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;OSS-搭配-CDN&quot;&gt;&lt;a href=&quot;#OSS-搭配-CDN&quot; class=&quot;headerlink&quot; title=&quot;OSS 搭配 CDN&quot;&gt;&lt;/a&gt;OSS 搭配 CDN&lt;/h2&gt;&lt;p&gt;我们原始的方式是将图片等资源一起放入项目中打包上线。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355131d0ce12.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样做的缺点在于打包出来的包大不说，用户请求资源的速度也会受到限制。比如我们的服务器在华南，华北的用户请求就会稍慢。当遇到并发量大的情况时，从部署服务器请求接口与资源这无外乎给我们的服务器提供了多余的压力。当我们临时想替换一张图片时，也需要重新打包并发布上线，非常麻烦。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355131fcb0e2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当我们将图片进行 OSS 放置并 CDN 加速后，这个问题就得到了很好的解决。不同地区的用户可以访问就近服务器，重复的请求也会产生缓存，避免 OSS 流量的浪费。大家也可以参考这篇文章：&lt;a href=&quot;https://www.cnblogs.com/jsfh/p/14076992.html&quot;&gt;OSS 和 CDN 的区别&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;图片的懒加载&quot;&gt;&lt;a href=&quot;#图片的懒加载&quot; class=&quot;headerlink&quot; title=&quot;图片的懒加载&quot;&gt;&lt;/a&gt;图片的懒加载&lt;/h2&gt;&lt;p&gt;在遇到首屏数据过多加载缓慢的情况下，我们就需要考虑懒加载了。当用户滚动到预览位置时，在进行图片数据的请求。期间用骨架屏或缩略图代替。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 获取图片列表，即 img 标签列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imgs = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 获取到浏览器顶部的距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTop&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; e.offsetTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 懒加载实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;lazyload&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;imgs&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 可视区域高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; h = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 滚动区域高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.scrollTop || &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.scrollTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; imgs.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//图片距离顶部的距离大于可视区域和滚动区域之和时懒加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((h + s) &amp;gt; getTop(imgs[i])) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// 真实情况是页面开始有2秒空白，所以使用 setTimeout 定时 2s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;i&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// 不加立即执行函数i会等于9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// 隐形加载图片或其他资源，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// 创建一个临时图片，这个图片在内存中不会到页面上去。实现隐形加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; temp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        temp.src = imgs[i].getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;data-src&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//只会请求一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// onload 判断图片加载完毕，真是图片加载完毕，再赋值给 dom 节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        temp.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// 获取自定义属性 data-src，用真图片替换假图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            imgs[i].src = imgs[i].getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;data-src&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                })(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lazyload(imgs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 滚屏函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onscroll = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lazyload(imgs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;参考链接:&lt;br&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/IQ1Sm_pqzCOgcM59tsUlXQ&quot;&gt;性能优化——图片压缩、加载和格式选择&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.aliyun.com/article/770616?utm_content=g_1000173381&quot;&gt;使用阿里云 CDN 加速 OSS</summary>
        
      
    
    
    
    <category term="前端工程架构" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Web性能优化" scheme="https://fe32.top/tags/Web%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>推荐几款好看又好用的开源博客</title>
    <link href="https://fe32.top/articles/blsh9527/"/>
    <id>https://fe32.top/articles/blsh9527/</id>
    <published>2022-10-14T03:13:37.000Z</published>
    <updated>2023-06-27T14:39:00.634Z</updated>
    
    
    <summary type="html">分享几款好看又好用的纯静态博客开源博客，无需后端，易上手（有计算机基础），克隆项目，安装依赖，打包部署即可看到效果。</summary>
    
    
    
    <category term="推荐分享" scheme="https://fe32.top/categories/%E6%8E%A8%E8%8D%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="开源博客" scheme="https://fe32.top/tags/%E5%BC%80%E6%BA%90%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Vuepress" scheme="https://fe32.top/tags/Vuepress/"/>
    
  </entry>
  
  <entry>
    <title>V8 是如何执行 JavaScript 代码的?</title>
    <link href="https://fe32.top/articles/jsnb9545/"/>
    <id>https://fe32.top/articles/jsnb9545/</id>
    <published>2022-09-25T13:23:31.000Z</published>
    <updated>2023-06-27T14:39:00.731Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;JS-代码执行过程&quot;&gt;&lt;a href=&quot;#JS-代码执行过程&quot; class=&quot;headerlink&quot; title=&quot;JS 代码执行过程&quot;&gt;&lt;/a&gt;JS 代码执行过程&lt;/h2&gt;&lt;p&gt;在了解 V8 的执行 JavaScript 代码的机制之前，我们先来看看&lt;strong&gt;编译型&lt;/strong&gt;和&lt;strong&gt;解释型&lt;/strong&gt;语言的区别。&lt;/p&gt;
&lt;h3 id=&quot;编译型语言和解释型语言&quot;&gt;&lt;a href=&quot;#编译型语言和解释型语言&quot; class=&quot;headerlink&quot; title=&quot;编译型语言和解释型语言&quot;&gt;&lt;/a&gt;编译型语言和解释型语言&lt;/h3&gt;&lt;p&gt;机器是不能直接理解代码的。所以，在执行程序之前，需要将代码翻译成机器能读懂的机器语言。按语言的执行流程，可以把计算机语言划分为编译型语言和解释型语言: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;编译型语言&lt;/strong&gt;: 在代码运行前编译器直接将对应的代码转换成机器码，运行时不需要再重新翻译，直接可以使用编译后的结果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解释型语言&lt;/strong&gt;: 需要将代码转换成机器码，和编译型语言的区别在于运行时需要转换。解释型语言的执行速度要慢于编译型语言，因为解释型语言每次执行都需要把源码转换一次才能执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Java 和 C++ 等语言都是编译型语言，而 JavaScript 是解释性语言，它整体的执行速度会略慢于编译型的语言。V8 是众多浏览器的 JS 引擎中性能表现最好的一个，并且它是 Chrome 的内核，Node.js 也是基于 V8 引擎研发的。&lt;/p&gt;
&lt;p&gt;编译型语言和解释器语言代码执行的具体流程如下: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/6330667876afb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;两者的执行流程如下: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在编译型语言的编译过程中，编译器首先会依次对源代码进行词法分析、语法分析，生成抽象语法树（AST），然后优化代码，最后再生成处理器能够理解的机器码。如果编译成功，将会生成一个可执行的文件。但如果编译过程发生了语法或者其他的错误，那么编译器就会抛出异常，最后的二进制文件也不会生成成功。&lt;/li&gt;
&lt;li&gt;在解释型语言的解释过程中，同样解释器也会对源代码进行词法分析、语法分析，并生成抽象语法树（AST），不过它会再基于抽象语法树生成字节码，最后再根据字节码来执行程序、输出结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;V8-执行代码过程&quot;&gt;&lt;a href=&quot;#V8-执行代码过程&quot; class=&quot;headerlink&quot; title=&quot;V8 执行代码过程&quot;&gt;&lt;/a&gt;V8 执行代码过程&lt;/h3&gt;&lt;p&gt;V8 在执行过程用到了 &lt;strong&gt;解释器&lt;/strong&gt; 和 &lt;strong&gt;编译器&lt;/strong&gt; 。 其执行过程如下: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Parse 阶段: V8 引擎将 JS 代码转换成 AST（抽象语法树）&lt;/li&gt;
&lt;li&gt;Ignition 阶段: 解释器将 AST 转换为字节码，解析执行字节码也会为下一个阶段优化编译提供需要的信息&lt;/li&gt;
&lt;li&gt;TurboFan 阶段: 编译器利用上个阶段收集的信息，将字节码优化为可以执行的机器码&lt;/li&gt;
&lt;li&gt;Orinoco 阶段: 垃圾回收阶段，将程序中不再使用的内存空间进行回收&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里前三个步骤是 JavaScript 的执行过程，最后一步是垃圾回收的过程。下面就先来看看V8 执行 JavaScript 的过程。&lt;/p&gt;
&lt;h4 id=&quot;生成抽象语法树&quot;&gt;&lt;a href=&quot;#生成抽象语法树&quot; class=&quot;headerlink&quot; title=&quot;生成抽象语法树&quot;&gt;&lt;/a&gt;生成抽象语法树&lt;/h4&gt;&lt;p&gt;这个过程就是将源代码转换为抽象语法树（AST），并生成执行上下文，执行上下文就是代码在执行过程中的环境信息。&lt;/p&gt;
&lt;p&gt;将 JS 代码解析成 AST主要分为两个阶段: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;词法分析: 这个阶段会将源代码拆成最小的、不可再分的词法单元，称为 token。比如代码 var a = 1;  通常会被分解成 var 、a、=、1、;  这五个词法单元。代码中的空格在 JavaScript 中是直接忽略的，简单来说就是将 JavaScript 代码解析成一个个令牌（Token）。&lt;/li&gt;
&lt;li&gt;语法分析: 这个过程是将上一步生成的 token 数据，根据语法规则转为 AST。如果源码符合语法规则，这一步就会顺利完成。如果源码存在语法错误，这一步就会终止，并抛出一个语法错误，简单来说就是将令牌组装成一棵抽象的语法树（AST）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过词法分析会对代码逐个字符进行解析，生成类似下面结构的令牌（Token），这些令牌类型各不相同，有关键字、标识符、符号、数字等。代码 var a = 1;  会转化为下面这样的令牌: &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Keyword(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Identifier(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Punctuator(=)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;语法分析阶段会用令牌生成一棵抽象语法树，生成树的过程中会去除不必要的符号令牌，然后按照语法规则来生成。下面来看两段代码: &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第一段代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第二段代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;a,b&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;将这两段代码分别转换成 AST 抽象语法树之后返回的 JSON 如下: &lt;/p&gt;
&lt;p&gt;第一段代码，编译后的结果: &lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Program&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;body&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;VariableDeclaration&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;declarations&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;VariableDeclarator&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Identifier&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;init&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Literal&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;value&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;raw&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;kind&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;var&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;sourceType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;它的结构大致如下: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/6330667b36b44.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第二段代码，编译出来的结果: &lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Program&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;body&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;FunctionDeclaration&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Identifier&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;sum&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;expression&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;generator&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;async&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;params&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Identifier&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Identifier&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;&quot;body&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;BlockStatement&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;38&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;body&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;ReturnStatement&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;argument&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;BinaryExpression&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;&quot;left&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Identifier&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;&quot;operator&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;+&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;attr&quot;&gt;&quot;right&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Identifier&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;end&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;sourceType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;它的结构大致如下: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/6330667e5988f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到，AST 只是源代码语法结构的一种抽象的表示形式，计算机也不会去直接去识别 JS 代码，转换成抽象语法树也只是识别这一过程中的第一步。AST 的结构和代码的结构非常相似，其实也可以把 AST 看成代码的结构化的表示，编译器或者解释器后续的工作都需要依赖于 AST。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AST的应用场景:&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;AST 是一种很重要的数据结构，很多地方用到了AST。比如在 Babel 中，Babel 是一个代码转码器，可以将 ES6 代码转为 ES5 代码。Babel 的工作原理就是先将 ES6 源码转换为 AST，然后再将 ES6 语法的 AST 转换为 ES5 语法的 AST，最后利用 ES5 的 AST 生成 JavaScript 源代码。&lt;/p&gt;
&lt;p&gt;除了 Babel 之外，ESLint 也使用到了 AST。ESLint 是一个用来检查 JavaScript 编写规范的插件，其检测流程也是需要将源码转换为 AST，然后再利用 AST 来检查代码规范化的问题。&lt;/p&gt;
&lt;p&gt;除了上述应用场景，AST 的应用场景还有很多: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS 反编译，语法解析&lt;/li&gt;
&lt;li&gt;代码高亮&lt;/li&gt;
&lt;li&gt;关键字匹配&lt;/li&gt;
&lt;li&gt;代码压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;生成字节码&quot;&gt;&lt;a href=&quot;#生成字节码&quot; class=&quot;headerlink&quot; title=&quot;生成字节码&quot;&gt;&lt;/a&gt;生成字节码&lt;/h4&gt;&lt;p&gt;有了 抽象语法树 AST 和执行上下文后，就轮到解释器就登场了，它会根据 AST 生成字节码，并解释执行字节码。&lt;/p&gt;
&lt;p&gt;在 V8 的早期版本中，是通过 AST 直接转换成机器码的。将 AST 直接转换为机器码会存在一些问题: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接转换会带来内存占用过大的问题，因为将抽象语法树全部生成了机器码，而机器码相比字节码占用的内存多了很多;  &lt;/li&gt;
&lt;li&gt;某些 JavaScript 使用场景使用解释器更为合适，解析成字节码，有些代码没必要生成机器码，进而尽可能减少了占用内存过大的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决内存占用问题，就在 V8 引擎中引入了字节码。那什么是字节码呢？为什么引入字节码就能解决内存占用问题呢？&lt;/p&gt;
&lt;span class=&quot;p blue&quot;&gt;字节码就是介于 AST 和机器码之间的一种代码。&lt;/span&gt;需要将其转换成机器码后才能执行，字节码是对机器码的一个抽象描述，相对于机器码而言，它的代码量更小，从而可以减少内存消耗。解释器除了可以快速生成没有优化的字节码外，还可以执行部分字节码。

&lt;h4 id=&quot;生成机器码&quot;&gt;&lt;a href=&quot;#生成机器码&quot; class=&quot;headerlink&quot; title=&quot;生成机器码&quot;&gt;&lt;/a&gt;生成机器码&lt;/h4&gt;&lt;p&gt;生成字节码之后，就进入执行阶段了，实际上，&lt;span class=&quot;p blue&quot;&gt;这一步就是将字节码生成机器码。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一般情况下，如果字节码是第一次执行，那么解释器就会逐条解释执行。在执行字节码过程中，如果发现有热代码（重复执行的代码，运行次数超过某个阈值就被标记为热代码），那么后台的编译器就会把该段热点的字节码编译为高效的机器码，然后当再次执行这段被优化的代码时，只需要执行编译后的机器码即可，这样提升了代码的执行效率。&lt;/p&gt;
&lt;p&gt;字节码配合解释器和编译器的技术就是 即时编译（JIT）。在 V8 中就是指解释器在解释执行字节码的同时，收集代码信息，当它发现某一部分代码变热了之后，编译器便闪亮登场，把热点的字节码转换为机器码，并把转换后的机器码保存起来，以备下次使用。&lt;/p&gt;
&lt;p&gt;因为 V8 引擎是多线程的，编译器的编译线程和生成字节码不会在同一个线程上，这样可以和解释器相互配合着使用，不受另一方的影响。下面是JIT技术的工作机制: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/6330668170580.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解释器在得到 AST 之后，会按需进行解释和执行。也就是说如果某个函数没有被调用，则不会去解释执行它。在这个过程中解释器会将一些重复可优化的操作收集起来生成分析数据，然后将生成的字节码和分析数据传给编译器，编译器会依据分析数据来生成高度优化的机器码。&lt;/p&gt;
&lt;p&gt;优化后的机器码的作用和缓存很类似，当解释器再次遇到相同的内容时，就可以直接执行优化后的机器码。当然优化后的代码有时可能会无法运行（比如函数参数类型改变），那么会再次反优化为字节码交给解释器。&lt;/p&gt;
&lt;p&gt;整个过程如下图所示: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/6330668595a0e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;执行过程优化&quot;&gt;&lt;a href=&quot;#执行过程优化&quot; class=&quot;headerlink&quot; title=&quot;执行过程优化&quot;&gt;&lt;/a&gt;执行过程优化&lt;/h4&gt;&lt;p&gt;如果 JavaScript 代码在执行前都要完全经过解析才能执行，那可能会面临以下问题: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码执行时间变长: 一次性解析所有代码会增加代码的运行时间&lt;/li&gt;
&lt;li&gt;消耗更多内存: 解析完的 AST 以及根据 AST 编译后的字节码都会存放在内存中，会占用更多内存空间&lt;/li&gt;
&lt;li&gt;占用磁盘空间: 编译后的代码会缓存在磁盘上，占用磁盘空间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，V8 引擎使用了&lt;span class=&quot;p blue&quot;&gt;延迟解析&lt;/span&gt;:  在解析过程中，对于不是立即执行的函数，只进行预解析;  只有当函数调用时，才对函数进行全量解析。&lt;/p&gt;
&lt;p&gt;进行预解析时，只验证函数语法是否有效、解析函数声明、确定函数作用域，不生成 AST，而实现预解析的，就是 Pre-Parser 解析器。&lt;/p&gt;
&lt;p&gt;以下面代码为例: &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;996&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sum(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;V8 解析器是从上往下解析代码的，当解析器遇到函数声明 sum 时，发现它不是立即执行，所以会用 Pre-Parser 解析器对其预解析，过程中只会解析函数声明，不会解析函数内部代码，不会为函数内部代码生成 AST。&lt;/p&gt;
&lt;p&gt;之后解释器会把 AST 编译为字节码并执行，解释器会按照自上而下的顺序执行代码，先执行 const a = 666;   和 const c = 996;  ，然后执行函数调用 sum(1, 1) ，这时 Parser 解析器才会继续解析函数内的代码、生成 AST，再交给解释器编译执行。&lt;/p&gt;
&lt;h2 id=&quot;垃圾回收&quot;&gt;&lt;a href=&quot;#垃圾回收&quot; class=&quot;headerlink&quot; title=&quot;垃圾回收&quot;&gt;&lt;/a&gt;垃圾回收&lt;/h2&gt;&lt;h3 id=&quot;JS-内存管理机制&quot;&gt;&lt;a href=&quot;#JS-内存管理机制&quot; class=&quot;headerlink&quot; title=&quot;JS 内存管理机制&quot;&gt;&lt;/a&gt;JS 内存管理机制&lt;/h3&gt;&lt;p&gt;计算机程序语言都运行在对应的代码引擎上，使用内存过程可以分为以下三个步骤: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分配所需要的系统内存空间&lt;/li&gt;
&lt;li&gt;使用分配到的内存进行读或写等操作&lt;/li&gt;
&lt;li&gt;不需要使用内存时，将其空间释放或者归还&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 JavaScript 中，当创建变量时，系统会自动给对象分配对应的内存，来看下面的例子: &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 给数值变量分配栈内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; etf = &lt;span class=&quot;string&quot;&gt;&quot;ARK&quot;&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 给字符串分配栈内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 给对象及其包含的值分配堆内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  age: &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 给数组及其包含的值分配内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;str&quot;&lt;/span&gt;];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 给函数分配内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;JavaScript 中的数据分为两类: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本类型: 这些类型在内存中会占据固定的内存空间，它们的值都保存在栈空间中，直接可以通过值来访问这些&lt;/li&gt;
&lt;li&gt;引用类型: 由于引用类型值大小不固定，栈内存中存放地址指向堆内存中的对象，是通过引用来访问的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;栈内存中的基本类型，可以通过操作系统直接处理;  而堆内存中的引用类型，正是由于可以经常变化，大小不固定，因此需要 JavaScript 的引擎通过垃圾回收机制来处理。所谓的垃圾回收是指: &lt;span class=&quot;p blue&quot;&gt;JavaScript代码运行时，需要分配内存空间来储存变量和值。当变量不在参与运行时，就需要系统收回被占用的内存空间。&lt;/span&gt;Javascript 具有自动垃圾回收机制，会定期对那些不再使用的变量、对象所占用的内存进行释放，原理就是找到不再使用的变量，然后释放掉其占用的内存。&lt;/p&gt;
&lt;p&gt;JavaScript中存在两种变量: 局部变量和全局变量。全局变量的生命周期会持续要页面卸载;  而局部变量声明在函数中，它的生命周期从函数执行开始，直到函数执行结束，在这个过程中，局部变量会在堆或栈中存储它们的值，当函数执行结束后，这些局部变量不再被使用，它们所占有的空间就会被释放。不过，当局部变量被外部函数使用时，其中一种情况就是闭包，在函数执行结束后，函数外部的变量依然指向函数内部的局部变量，此时局部变量依然在被使用，所以不会回收。&lt;/p&gt;
&lt;h3 id=&quot;V8-垃圾回收过程&quot;&gt;&lt;a href=&quot;#V8-垃圾回收过程&quot; class=&quot;headerlink&quot; title=&quot;V8 垃圾回收过程&quot;&gt;&lt;/a&gt;V8 垃圾回收过程&lt;/h3&gt;&lt;p&gt;先来看看 Chrome 浏览器的垃圾回收过程: &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;① 通过 GC Root 标记空间中活动对象和⾮活动对象&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;⽬前 V8 采⽤的 &lt;span class=&quot;p blue&quot;&gt;可访问性&lt;/span&gt; 算法来判断堆中的对象是否是活动对象。这个算法是将⼀些 GC Root 作为初始存活的对象的集合，从 GC Roots 对象出发，遍历 GC Root 中所有对象: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 GC Root 遍历到的对象是&lt;span class=&quot;p blue&quot;&gt;可访问的&lt;/span&gt;，必须保证这些对象应该在内存中保留，可访问的对象称为&lt;span class=&quot;p blue&quot;&gt;活动对象&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;通过 GC Roots 没有遍历到的对象是&lt;span class=&quot;p blue&quot;&gt;不可访问的&lt;/span&gt;，这些不可访问的对象就可能被回收，不可访问的对象称为&lt;span class=&quot;p blue&quot;&gt;⾮活动对象&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;② 回收⾮活动对象所占据的内存&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在所有的标记完成之后，统⼀清理内存中所有被标记为可回收的对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;③ 内存整理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;⼀般来说，频繁回收对象后，内存中就会存在⼤量不连续空间，这些不连续的内存空间称为内存碎⽚。当内存中出现了⼤量的内存碎⽚之后，如果需要分配较⼤的连续内存时，就有可能出现内存不⾜的情况，所以最后⼀步需要整理这些内存碎⽚。这步其实是可选的，因为有的垃圾回收器不会产⽣内存碎⽚。&lt;br&gt;以上就是⼤致的垃圾回收流程。⽬前 V8 使用了两个垃圾回收器: &lt;span class=&quot;p blue&quot;&gt;主垃圾回收器和副垃圾回收器&lt;/span&gt;。下面就来看看 V8 是如何实现垃圾回收的。&lt;br&gt;在 V8 中，&lt;span class=&quot;p blue&quot;&gt;会把堆分为新生代和老生代两个区域，新生代中存放的是生存时间短的对象，老生代中存放生存时间久的对象:&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/633066878cf39.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;新⽣代通常只⽀持 1～8M 的容量，⽽⽼⽣代⽀持的容量就⼤很多。对于这两块区域，V8分别使⽤两个不同的垃圾回收器，以便更⾼效地实施垃圾回收: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;副垃圾回收器: 负责新⽣代的垃圾回收&lt;/li&gt;
&lt;li&gt;主垃圾回收器: 负责⽼⽣代的垃圾回&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;副垃圾回收器（新生代）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;副垃圾回收器主要负责新⽣代的垃圾回收。大多数的对象最开始都会被分配在新生代，该存储空间相对较小，分为两个空间: from 空间（对象区）和 to 空间（空闲区）。&lt;/p&gt;
&lt;p&gt;新加⼊的对象都会存放到对象区域，当对象区域快被写满时，就需要执⾏⼀次垃圾清理操作: 首先要对对象区域中的垃圾做标记，标记完成之后，就进入垃圾清理阶段。副垃圾回收器会把这些存活的对象复制到空闲区域中，同时它还会把这些对象有序地排列起来。这个复制过程就相当于完成了内存整理操作，复制后空闲区域就没有内存碎片了: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/6330668a7d0eb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;完成复制后，对象区域与空闲区域进行角色翻转，也就是原来的对象区域变成空闲区域，原来的空闲区域变成了对象区域，这种算法称之为 Scavenge 算法，这样就完成了垃圾对象的回收操作。同时，这种角色翻转的操作还能让新生代中的这两块区域无限重复使用下去: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/6330668c678ac.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;不过，副垃圾回收器每次执⾏清理操作时，都需要将存活的对象从对象区域复制到空闲区域，复制操作需要时间成本，如果新⽣区空间设置得太⼤了，那么每次清理的时间就会过久，所以&lt;span class=&quot;p blue&quot;&gt;为了执⾏效率，⼀般新⽣区的空间会被设置得⽐较⼩&lt;/span&gt;。也正是因为新⽣区的空间不⼤，所以很容易被存活的对象装满整个区域，副垃圾回收器⼀旦监控对象装满了，便执⾏垃圾回收。同时，副垃圾回收器还会采⽤对象晋升策略，也就是移动那些经过两次垃圾回收依然还存活的对象到⽼⽣代中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主垃圾回收器（老生代）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主垃圾回收器主要负责⽼⽣代中的垃圾回收。除了新⽣代中晋升的对象，⼀些⼤的对象会直接被分配到⽼⽣代⾥。因此，⽼⽣代中的对象有两个特点: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象占⽤空间⼤&lt;/li&gt;
&lt;li&gt;对象存活时间⻓&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于⽼⽣代的对象⽐较⼤，若要在⽼⽣代中使⽤ Scavenge 算法进⾏垃圾回收，复制这些⼤的对象将会花费较多时间，从⽽导致回收执⾏效率不⾼，同时还会浪费空间。所以，主垃圾回收器采⽤标记清除的算法进⾏垃圾回收。&lt;/p&gt;
&lt;p&gt;这种方式分为标记和清除两个阶段: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标记阶段:  从一组根元素开始，递归遍历这组根元素，在这个遍历过程中，能到达的元素称为活动对象，没有到达的元素就可以判断为垃圾数据&lt;/li&gt;
&lt;li&gt;清除阶段:  主垃圾回收器会直接将标记为垃圾的数据清理掉&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这两个阶段如图所示: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/63306694906a2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对垃圾数据进⾏标记，然后清除，这就是标记清除算法，不过对⼀块内存多次执⾏标记清除算法后，会产⽣⼤量不连续的内存碎⽚。⽽碎⽚过多会导致⼤对象⽆法分配到⾜够的连续内存，于是⼜引⼊了另外⼀种算法——标记整理。&lt;/p&gt;
&lt;p&gt;这个算法的标记过程仍然与标记清除算法⾥的是⼀样的，先标记可回收对象，但后续步骤不是直接对可回收对象进⾏清理，⽽是让所有存活的对象都向⼀端移动，然后直接清理掉这⼀端之外的内存: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/633066971a699.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;全停顿 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们知道，JavaScript 是单行线语言，运行在主线程上。一旦执行垃圾回收算法，都需要将正在执行的 JavaScript 脚本暂停下来，待垃圾回收完毕后再恢复脚本执行。这种行为叫做&lt;span class=&quot;p blue&quot;&gt;全停顿&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;主垃圾回收器执行一次完整的垃圾回收流程如下图所示: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/63306699a9c8b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 V8 新生代的垃圾回收中，因其空间较小，且存活对象较少，所以全停顿的影响不大。但老生代中，如果在执行垃圾回收的过程中，占用主线程时间过久，主线程是不能做其他事情的，需要等待执行完垃圾回收操作才能做其他事情，这将就可能会造成页面的卡顿现象。&lt;/p&gt;
&lt;p&gt;为了降低老生代的垃圾回收而造成的卡顿，V8 将标记过程分为一个个的子标记过程，同时让垃圾回收标记和 JavaScript 应用逻辑交替进行，直到标记阶段完成，这个算法称为&lt;span class=&quot;p blue&quot;&gt;增量标记算法&lt;/span&gt;。如下图所示: &lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/25/633066a04f948.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用增量标记算法可以把一个完整的垃圾回收任务拆分为很多小的任务，这些小的任务执行时间比较短，可以穿插在其他的 JavaScript 任务中间执行，这样当执行代码时，就不会让用户因为垃圾回收任务而感受到页面的卡顿了。&lt;/p&gt;
&lt;h3 id=&quot;减少垃圾回收&quot;&gt;&lt;a href=&quot;#减少垃圾回收&quot; class=&quot;headerlink&quot; title=&quot;减少垃圾回收&quot;&gt;&lt;/a&gt;减少垃圾回收&lt;/h3&gt;&lt;p&gt;虽然浏览器可以进行垃圾自动回收，但是当代码比较复杂时，垃圾回收所带来的代价较大，所以应该尽量减少垃圾回收: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对数组进行优化:  在清空一个数组时，最简单的方法就是给其赋值为[ ]，但是与此同时会创建一个新的空对象，可以将数组的长度设置为0，以此来达到清空数组的目的&lt;/li&gt;
&lt;li&gt;对object进行优化:  对象尽量复用，对于不再使用的对象，就将其设置为null，尽快被回收&lt;/li&gt;
&lt;li&gt;对函数进行优化:  在循环中的函数表达式，如果可以复用，尽量放在函数的外面&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://mp.weixin.qq.com/s/OobHbsVbBEM8kiIIts8P_w&quot;&gt;前端充电宝-V8 是如何执行 JavaScript</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>请收下这只可爱的猫咪吧</title>
    <link href="https://fe32.top/articles/hexo1613/"/>
    <id>https://fe32.top/articles/hexo1613/</id>
    <published>2022-09-18T13:16:59.000Z</published>
    <updated>2023-06-27T14:39:00.799Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;对于宽屏设备上，用猫咪滚动条替换原生滚动条，可不可爱，你说了算！&lt;/p&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;基于 Hexo 键入搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;基于 Hexo 键入分享功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1610/&quot;&gt;基于 Hexo 键入在线聊天功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608/&quot;&gt;Hexo + Butterfly 自定义右键菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/09/18/6327204e6e66f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;没什么要求，但必须引入 Jquery。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;制作一个盛放内容的盒子，在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/head.pug&lt;/code&gt;最后一行加入如下代码：&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#myscoll&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
其实随便放在哪里都行，像我放在了&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/right-menu/index.pug&lt;/code&gt;的末尾（如果用了自定义右键功能的话，可以放在这里）。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/js&lt;/code&gt;文件夹下新建一个&lt;code&gt;cat.js&lt;/code&gt;，将以下代码复制到文件中。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.clientWidth &amp;gt; &lt;span class=&quot;number&quot;&gt;992&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getBasicInfo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* 窗口高度 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ViewH = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).height();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* document高度 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; DocH = $(&lt;span class=&quot;string&quot;&gt;&quot;body&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].scrollHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* 滚动的高度 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ScrollTop = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).scrollTop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* 可滚动的高度 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; S_V = DocH - ViewH;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Band_H = ScrollTop / (DocH - ViewH) * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewH: ViewH,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            DocH: DocH,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ScrollTop: ScrollTop,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Band_H: Band_H,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            S_V: S_V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;show&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;basicInfo&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (basicInfo.ScrollTop &amp;gt; &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;.neko&quot;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;display&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;block&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;.neko&quot;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;display&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;none&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;$&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.fn.nekoScroll = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;option&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; defaultSetting = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                top: &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                scroWidth: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                z_index: &lt;span class=&quot;number&quot;&gt;9999&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                zoom: &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                borderRadius: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                right: &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                nekoImg: &lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2022/07/20/62d812db74be9.png&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                hoverMsg: &lt;span class=&quot;string&quot;&gt;&quot;喵喵喵~&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                color: &lt;span class=&quot;string&quot;&gt;&quot;#6f42c1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                during: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                blog_body: &lt;span class=&quot;string&quot;&gt;&quot;body&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; setting = $.extend(defaultSetting, option);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; getThis = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.prop(&lt;span class=&quot;string&quot;&gt;&quot;className&quot;&lt;/span&gt;) !== &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.prop(&lt;span class=&quot;string&quot;&gt;&quot;className&quot;&lt;/span&gt;) : &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.prop(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;) !== &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.prop(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;) : &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.prop(&lt;span class=&quot;string&quot;&gt;&quot;nodeName&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($(&lt;span class=&quot;string&quot;&gt;&quot;.neko&quot;&lt;/span&gt;).length == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.after(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div class=\&quot;neko\&quot; id=&quot;&lt;/span&gt; + setting.nekoname + &lt;span class=&quot;string&quot;&gt;&quot; data-msg=\&quot;&quot;&lt;/span&gt; + setting.hoverMsg + &lt;span class=&quot;string&quot;&gt;&quot;\&quot;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; basicInfo = getBasicInfo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(getThis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .css({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;position&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;fixed&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;width&#39;&lt;/span&gt;: setting.scroWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;: setting.top,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;height&#39;&lt;/span&gt;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;z-index&#39;&lt;/span&gt;: setting.z_index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;background-color&#39;&lt;/span&gt;: setting.bgcolor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&quot;border-radius&quot;&lt;/span&gt;: setting.borderRadius,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;right&#39;&lt;/span&gt;: setting.right,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;background-image&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;url(&#39;&lt;/span&gt; + setting.scImg + &lt;span class=&quot;string&quot;&gt;&#39;)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;background-image&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;border-radius&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;2em&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;background-size&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;contain&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; + setting.nekoname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .css({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;position&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;fixed&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;z-index&#39;&lt;/span&gt;: setting.z_index * &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;right&#39;&lt;/span&gt;: setting.right,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;background-image&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;url(&#39;&lt;/span&gt; + setting.nekoImg + &lt;span class=&quot;string&quot;&gt;&#39;)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            show(getBasicInfo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .scroll(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; basicInfo = getBasicInfo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    show(basicInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(getThis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .css({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;position&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;fixed&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;width&#39;&lt;/span&gt;: setting.scroWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;: setting.top,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;height&#39;&lt;/span&gt;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;z-index&#39;&lt;/span&gt;: setting.z_index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;background-color&#39;&lt;/span&gt;: setting.bgcolor,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&quot;border-radius&quot;&lt;/span&gt;: setting.borderRadius,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;right&#39;&lt;/span&gt;: setting.right,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;background-image&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;url(&#39;&lt;/span&gt; + setting.scImg + &lt;span class=&quot;string&quot;&gt;&#39;)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;background-image&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;border-radius&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;2em&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;background-size&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;contain&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; + setting.nekoname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .css({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;position&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;fixed&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;z-index&#39;&lt;/span&gt;: setting.z_index * &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;right&#39;&lt;/span&gt;: setting.right,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;background-image&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;url(&#39;&lt;/span&gt; + setting.nekoImg + &lt;span class=&quot;string&quot;&gt;&#39;)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (basicInfo.ScrollTop == basicInfo.S_V) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; + setting.nekoname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            .addClass(&lt;span class=&quot;string&quot;&gt;&quot;showMsg&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; + setting.nekoname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            .removeClass(&lt;span class=&quot;string&quot;&gt;&quot;showMsg&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; + setting.nekoname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            .attr(&lt;span class=&quot;string&quot;&gt;&quot;data-msg&quot;&lt;/span&gt;, setting.hoverMsg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                btf.scrollToDest(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; + setting.nekoname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    btf.scrollToDest(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })(jQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//部分自定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&quot;#myscoll&quot;&lt;/span&gt;).nekoScroll({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bgcolor: &lt;span class=&quot;string&quot;&gt;&#39;rgb(0 0 0 / .5)&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//背景颜色，没有绳子背景图片时有效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            borderRadius: &lt;span class=&quot;string&quot;&gt;&#39;2em&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            zoom: &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//自定义（去掉以下注释，并注释掉其他的查看效果）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;        $(&quot;#myscoll&quot;).nekoScroll({&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            nekoname:&#39;neko1&#39;, //nekoname，相当于id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            nekoImg:&#39;img/猫咪.png&#39;, //neko的背景图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            scImg:&quot;img/绳1.png&quot;, //绳子的背景图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            bgcolor:&#39;#1e90ff&#39;, //背景颜色，没有绳子背景图片时有效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            zoom:0.9, //绳子长度的缩放值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            hoverMsg:&#39;你好~喵&#39;, //鼠标浮动到neko上方的对话框信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            right:&#39;100px&#39;, //距离页面右边的距离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            fontFamily:&#39;楷体&#39;, //对话框字体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            fontSize:&#39;14px&#39;, //对话框字体的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            color:&#39;#1e90ff&#39;, //对话框字体颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            scroWidth:&#39;8px&#39;, //绳子的宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            z_index:100, //不用解释了吧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;            during:1200, //从顶部到底部滑动的时长&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;        });&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css&lt;/code&gt;文件夹下新建一个&lt;code&gt;cat.css&lt;/code&gt;，将以下代码复制到文件中。当然你也可以选择不新建 css 文件，复制代码到&lt;code&gt;custom.css&lt;/code&gt;也行，总之有地方引入就行。&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.neko&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;64px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;64px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-image&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2022/07/20/62d812db74be9.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;32px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-repeat&lt;/span&gt;: no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-size&lt;/span&gt;: contain;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;translateX&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;cursor&lt;/span&gt;: pointer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: tzy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#6f42c1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.neko&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-image&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2022/07/20/62d812d95e6f5.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-size&lt;/span&gt;: contain;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;115%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.neko&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.showMsg&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;attr&lt;/span&gt;(data-msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-overflow&lt;/span&gt;: ellipsis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.neko&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;attr&lt;/span&gt;(data-msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-overflow&lt;/span&gt;: ellipsis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.neko&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.fontColor&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#333&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @description: 滚动条样式  跟猫二选一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;992px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar-track&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2em&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar-thumb&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgb&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; / .&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;background-image&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;-webkit-linear-gradient&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;45deg&lt;/span&gt;, rgba(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;25%&lt;/span&gt;, transparent &lt;span class=&quot;number&quot;&gt;25%&lt;/span&gt;, transparent &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;75%&lt;/span&gt;, transparent &lt;span class=&quot;number&quot;&gt;75%&lt;/span&gt;, transparent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2em&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar-corner&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: transparent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中引入&lt;code&gt;cat.js&lt;/code&gt;和&lt;code&gt;cat.css&lt;/code&gt;。&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rel=&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;/css/cat.css&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;bottom:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-pjax&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;/js/cat.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;最后重新编译运行即可看见效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;拓展&quot;&gt;&lt;a href=&quot;#拓展&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Vue3 后台管理系统模板推荐</title>
    <link href="https://fe32.top/articles/xi3mpxmd/"/>
    <id>https://fe32.top/articles/xi3mpxmd/</id>
    <published>2022-08-28T13:55:28.000Z</published>
    <updated>2023-06-27T14:39:00.722Z</updated>
    
    
    <summary type="html">Vue3 在今年2月份已成为新的默认版本，本文收集了一些 Vue3 的后台管理系统模板，分享给在座的仌（打工人乃人上人👣）。</summary>
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="后台管理" scheme="https://fe32.top/tags/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>推荐几个不错的 CSS 工具，持续收录！</title>
    <link href="https://fe32.top/articles/css10002/"/>
    <id>https://fe32.top/articles/css10002/</id>
    <published>2022-08-17T15:32:26.000Z</published>
    <updated>2023-06-27T14:39:00.630Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd1d0654ec2.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;更新记录&quot;&gt;&lt;a href=&quot;#更新记录&quot; class=&quot;headerlink&quot; title=&quot;更新记录&quot;&gt;&lt;/a&gt;更新记录&lt;/h2&gt;&lt;div class=&quot;timeline&quot;&gt;
&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2022-12-14&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;p&gt;添加 &lt;a href=&quot;https://cssbuttongenerator.com/&quot;&gt;CSS Button Generator&lt;/a&gt;、&lt;a href=&quot;https://9elements.github.io/fancy-border-radius/&quot;&gt;花式边界半径&lt;/a&gt;、&lt;a href=&quot;https://loading.io/&quot;&gt;加载动画 LOADING.IO&lt;/a&gt;、&lt;a href=&quot;https://caniuse.com/&quot;&gt;我可以用这个css吗？&lt;/a&gt;、&lt;a href=&quot;https://lhammer.cn/You-need-to-know-css/#/zh-cn/&quot;&gt;You-need-to-know-css&lt;/a&gt;。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;Neumorphism&quot;&gt;&lt;a href=&quot;#Neumorphism&quot; class=&quot;headerlink&quot; title=&quot;Neumorphism&quot;&gt;&lt;/a&gt;Neumorphism&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://neumorphism.io/&quot;&gt;Neumorphism&lt;/a&gt; 是一个很棒的工具，可以根据你的喜好选择颜色、编辑大小、半径、距离等为你的设计生成 UI CSS 代码。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd1d12e6179.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;


&lt;h2 id=&quot;Animista&quot;&gt;&lt;a href=&quot;#Animista&quot; class=&quot;headerlink&quot; title=&quot;Animista&quot;&gt;&lt;/a&gt;Animista&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://animista.net/&quot;&gt;Animista&lt;/a&gt; 是CSS动画的中最佳的工具之一。你只需选择你喜欢的动画类型，并设置一些参数，然后将生成的 CSS 代码用到你的项目中。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd1d1ed778f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd1ef998d9d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;PurgeCSS&quot;&gt;&lt;a href=&quot;#PurgeCSS&quot; class=&quot;headerlink&quot; title=&quot;PurgeCSS&quot;&gt;&lt;/a&gt;PurgeCSS&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://purgecss.com/&quot;&gt;PurgeCSS&lt;/a&gt; 可以删除 CSS 中未使用到的代码，减小 CSS 文件的体积，并提高性能。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd1d3140584.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;


&lt;h2 id=&quot;Shadow-Brumm&quot;&gt;&lt;a href=&quot;#Shadow-Brumm&quot; class=&quot;headerlink&quot; title=&quot;Shadow Brumm&quot;&gt;&lt;/a&gt;Shadow Brumm&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://shadows.brumm.af/&quot;&gt;Shadow Brumm&lt;/a&gt; 是一款快速创建阴影的工具。使用此工具，你只需定义一些阴影选项，就可以创建酷炫且平滑的阴影，并为你生成效果代码。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd1e1314441.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;CSS-Gradient&quot;&gt;&lt;a href=&quot;#CSS-Gradient&quot; class=&quot;headerlink&quot; title=&quot;CSS Gradient&quot;&gt;&lt;/a&gt;CSS Gradient&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cssgradient.io/&quot;&gt;CSS Gradient&lt;/a&gt; 是一款值得推荐的工具。你可以选择不同类型的颜色和选项来创建渐变背景，它自动为你的渐变背景生成 CSS 代码。这是我日常开发中经常用到的工具之一。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd201ac8b0c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd2030b5bb6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;CSS-Grid-Generator&quot;&gt;&lt;a href=&quot;#CSS-Grid-Generator&quot; class=&quot;headerlink&quot; title=&quot;CSS Grid Generator&quot;&gt;&lt;/a&gt;CSS Grid Generator&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cssgrid-generator.netlify.app/&quot;&gt;CSS Grid Generator&lt;/a&gt; 可以创建响应式网格布局，你只需设置列、行和单位。可以同步看到网页的效果，还可以获取该效果的 CSS 代码 甚至 HTML 代码。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd20dade8fe.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd20eb615d6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Get-Waves&quot;&gt;&lt;a href=&quot;#Get-Waves&quot; class=&quot;headerlink&quot; title=&quot;Get Waves&quot;&gt;&lt;/a&gt;Get Waves&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://getwaves.io/&quot;&gt;Get Waves&lt;/a&gt; 可以为你的项目创建 SVG 波形。你只需调好参数，该工具会同步生成 wave 效果，当达到目标效果时，你只需要下载生成的 CSS 代码运用到你的项目中即可。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd21309fe35.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/18/62fd2142197d6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;CSS-Stripes-Generator&quot;&gt;&lt;a href=&quot;#CSS-Stripes-Generator&quot; class=&quot;headerlink&quot; title=&quot;CSS Stripes Generator&quot;&gt;&lt;/a&gt;CSS Stripes Generator&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://stripesgenerator.com/&quot;&gt;CSS Stripes Generator&lt;/a&gt; 不用Flash，不用图像，仅使用 CSS 生成条纹背景。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355274d4555a.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Blob-Maker&quot;&gt;&lt;a href=&quot;#Blob-Maker&quot; class=&quot;headerlink&quot; title=&quot;Blob Maker&quot;&gt;&lt;/a&gt;Blob Maker&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.blobmaker.app/&quot;&gt;Blob Maker&lt;/a&gt; 此工具可帮助你创建不同的不寻常形状，并允许你复制和下载 SVG 文件。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355274e74830.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;CSS-Accordion-Slider-Generator&quot;&gt;&lt;a href=&quot;#CSS-Accordion-Slider-Generator&quot; class=&quot;headerlink&quot; title=&quot;CSS Accordion Slider Generator&quot;&gt;&lt;/a&gt;CSS Accordion Slider Generator&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://accordionslider.com/&quot;&gt;CSS Accordion Slider Generator&lt;/a&gt; 此工具可帮助你创建完全响应的、仅 CSS（无 javascript）的手风琴滑块。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355274dbc1a1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Glassmorphism-CSS-Generator-Hype4-Academy&quot;&gt;&lt;a href=&quot;#Glassmorphism-CSS-Generator-Hype4-Academy&quot; class=&quot;headerlink&quot; title=&quot;Glassmorphism CSS Generator | Hype4 Academy&quot;&gt;&lt;/a&gt;Glassmorphism CSS Generator | Hype4 Academy&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hype4.academy/tools/glassmorphism-generator&quot;&gt;Glassmorphism CSS Generator | Hype4 Academy&lt;/a&gt; 是一种设计风格，由 Hype4.Academy 的 Michal Malewicz 创造，用于连接和组合UI中 “磨砂玻璃” 效果。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/10/23/6355274f45c75.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;CSS-Button-Generator&quot;&gt;&lt;a href=&quot;#CSS-Button-Generator&quot; class=&quot;headerlink&quot; title=&quot;CSS Button Generator&quot;&gt;&lt;/a&gt;CSS Button Generator&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cssbuttongenerator.com/&quot;&gt;CSS Button Generator&lt;/a&gt; 是一个免费的在线工具，可以在没有代码的情况下创建CSS按钮。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/14/6399bb8aa8954.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Fancy-Border-Radius-Generator&quot;&gt;&lt;a href=&quot;#Fancy-Border-Radius-Generator&quot; class=&quot;headerlink&quot; title=&quot;Fancy Border Radius Generator&quot;&gt;&lt;/a&gt;Fancy Border Radius Generator&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://9elements.github.io/fancy-border-radius/&quot;&gt;Fancy Border Radius Generator&lt;/a&gt; 以 CSS3边界半径 构建形状。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/14/6399bb97342cf.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;LOADING-IO&quot;&gt;&lt;a href=&quot;#LOADING-IO&quot; class=&quot;headerlink&quot; title=&quot;LOADING.IO&quot;&gt;&lt;/a&gt;LOADING.IO&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://loading.io/&quot;&gt;LOADING.IO&lt;/a&gt; 使用SVG/CSS/GIF/PNG构建Ajax加载图标、动画文本等！&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/14/6399bbb6971a0.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Can-I-use-？&quot;&gt;&lt;a href=&quot;#Can-I-use-？&quot; class=&quot;headerlink&quot; title=&quot;Can I use _ ？&quot;&gt;&lt;/a&gt;Can I use _ ？&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://caniuse.com/&quot;&gt;an I use _&lt;/a&gt; 提供了最新的浏览器支持表，以支持桌面和移动 web 浏览器上的前端 web 技术。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/14/6399bbc0e14a5.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- ## You-need-to-know-css

[我可以用这个css吗？](https://caniuse.com/) is a visual generator to build organic looking shapes with the help of CSS3 border-radius property.</summary>
        
      
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>实现元素居中的 10 个CSS方法</title>
    <link href="https://fe32.top/articles/css10001/"/>
    <id>https://fe32.top/articles/css10001/</id>
    <published>2022-08-16T14:36:59.000Z</published>
    <updated>2023-06-27T14:39:00.853Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;absolute-margin&quot;&gt;&lt;a href=&quot;#absolute-margin&quot; class=&quot;headerlink&quot; title=&quot;absolute + (-margin)&quot;&gt;&lt;/a&gt;absolute + (-margin)&lt;/h2&gt;&lt;p&gt;如果元素的宽度和高度已知，我们可以使用至少 3 种方法来使元素居中。例如，在下图中，小猫的宽度和高度分别为 “500px” 和 “366px” 。我们应该如何居中？&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/16/62fbb718d9d73.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用 “absolute + (-margin)” 很容易完成， 代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cat&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://images.unsplash.com/photo-1533743983669-94fa5c4338ec?ixlib=rb-1.2.1&amp;amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=1584&amp;amp;q=80&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;800px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;600px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.cat&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;500px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;366px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* half the width */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;250px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* half the height */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;183px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FyLKXLxM%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DyLKXLxM&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FyLKXLxM&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FyLKXLxM-512.jpg%3Fversion%3D1658449813&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;yLKXLxM&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;blockquote&gt;
&lt;p&gt;这种方法简单易懂，兼容性好；缺点是我们需要知道子元素的宽高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;absolute-margin-auto&quot;&gt;&lt;a href=&quot;#absolute-margin-auto&quot; class=&quot;headerlink&quot; title=&quot;absolute + margin auto&quot;&gt;&lt;/a&gt;absolute + margin auto&lt;/h2&gt;&lt;p&gt;我们还可以通过将所有方向的距离设置为 0 ，并将边距设置为自动来使小猫居中。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;800px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;600px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.cat&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;500px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;366px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FRwMgweO%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DRwMgweO&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FRwMgweO&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FRwMgweO-512.jpg%3Fversion%3D1658450114&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;RwMgweO&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;blockquote&gt;
&lt;p&gt;和第一种方法一样，兼容性也挺好，缺点是需要知道子元素的宽高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;absolute-calc&quot;&gt;&lt;a href=&quot;#absolute-calc&quot; class=&quot;headerlink&quot; title=&quot;absolute + calc&quot;&gt;&lt;/a&gt;absolute + calc&lt;/h2&gt;&lt;p&gt;CSS3 带来了 calc 计算属性，它允许我们通过它来居中一个元素，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;800px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;600px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.cat&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;500px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;366px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;183px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;250px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FzYWzYyR%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DzYWzYyR&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FzYWzYyR&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FzYWzYyR-512.jpg%3Fversion%3D1658450486&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;zYWzYyR&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;blockquote&gt;
&lt;p&gt;该方法的兼容性取决于calc的兼容性，缺点是需要知道子元素的宽高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面介绍的三种方法必须提前知道元素的宽高，但元素的宽高不确定怎么办？于是就有了&lt;code&gt;flex&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;flex&quot;&gt;&lt;a href=&quot;#flex&quot; class=&quot;headerlink&quot; title=&quot;flex&quot;&gt;&lt;/a&gt;flex&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/16/62fbba7fa95a2.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;contenteditable&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;hello medium&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;align-items&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;justify-content&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FabYyzvG%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DabYyzvG&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FabYyzvG&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FabYyzvG-512.jpg%3Fversion%3D1658676029&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;ayyzvG&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;可以用很少的代码来居中一个元素，是我最喜欢的使用方式。&lt;/p&gt;
&lt;h2 id=&quot;grid&quot;&gt;&lt;a href=&quot;#grid&quot; class=&quot;headerlink&quot; title=&quot;grid&quot;&gt;&lt;/a&gt;grid&lt;/h2&gt;&lt;p&gt;像&lt;code&gt;flex&lt;/code&gt;一样，&lt;code&gt;grid&lt;/code&gt;也可以非常方便地用于使元素居中。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: grid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;align-self&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;justify-self&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FdymzPMa%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DdymzPMa&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FdymzPMa&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FdymzPMa-512.jpg%3Fversion%3D1658676375&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;dymzPMa&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;absolute-transform&quot;&gt;&lt;a href=&quot;#absolute-transform&quot; class=&quot;headerlink&quot; title=&quot;absolute + transform&quot;&gt;&lt;/a&gt;absolute + transform&lt;/h2&gt;&lt;p&gt;使用变换，我们还可以在事先不知道元素的宽度和高度的情况下使元素居中。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;translate&lt;/span&gt;(-&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FKKovwgW%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DKKovwgW&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FKKovwgW&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FKKovwgW-512.jpg%3Fversion%3D1658676728&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;KKovwgW&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;以上6种方式比较容易理解，在我们的工作中也经常用到，接下来的 4 种方法似乎使用频率较低，但也值得学习。&lt;/p&gt;
&lt;h2 id=&quot;text-align-line-height-vertical-align&quot;&gt;&lt;a href=&quot;#text-align-line-height-vertical-align&quot; class=&quot;headerlink&quot; title=&quot;text-align + line-height + vertical-align&quot;&gt;&lt;/a&gt;text-align + line-height + vertical-align&lt;/h2&gt;&lt;p&gt;首先，我们可以将 span 的 “display” 属性设置为 “inline-block”。然后通过设置容器的&lt;code&gt;text-align&lt;/code&gt;属性为&lt;code&gt;center&lt;/code&gt;，span 元素可以水平居中。结合 &lt;code&gt;line-height&lt;/code&gt;和其他属性使其垂直居中。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: initial;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: left;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FdymzPWL%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DdymzPWL&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FdymzPWL&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FdymzPWL-512.jpg%3Fversion%3D1658677631&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;dymzPWL&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;css-table&quot;&gt;&lt;a href=&quot;#css-table&quot; class=&quot;headerlink&quot; title=&quot;css-table&quot;&gt;&lt;/a&gt;css-table&lt;/h2&gt;&lt;p&gt;CSS新的table属性让我们可以将普通元素变成表格元素的真实效果，通过这个特性，一个元素也可以居中。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: table-cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FdymzPJE%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DdymzPJE&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FdymzPJE&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FdymzPJE-512.jpg%3Fversion%3D1658678536&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;dymzPJE&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;


&lt;h2 id=&quot;writing-mode&quot;&gt;&lt;a href=&quot;#writing-mode&quot; class=&quot;headerlink&quot; title=&quot;writing-mode&quot;&gt;&lt;/a&gt;writing-mode&lt;/h2&gt;&lt;p&gt;过去，我习惯使用&lt;code&gt;writing-mode&lt;/code&gt;将内容的布局方向更改为垂直。&lt;/p&gt;
&lt;p&gt;但令人惊奇的是它还可以使元素居中。不过这种方法有点难懂，代码量会比较多。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content-wrap&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;contenteditable&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;hello medium&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;writing-mode&lt;/span&gt;: vertical-lr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content-wrap&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;writing-mode&lt;/span&gt;: horizontal-tb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: left;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FvYRJErY%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DvYRJErY&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FvYRJErY&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FvYRJErY-512.jpg%3Fversion%3D1658679041&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;虚拟机&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;table（不推荐）&quot;&gt;&lt;a href=&quot;#table（不推荐）&quot; class=&quot;headerlink&quot; title=&quot;table（不推荐）&quot;&gt;&lt;/a&gt;table（不推荐）&lt;/h2&gt;&lt;p&gt;提到它只是作为学习的一个例子，我不建议你在工作中使用它，因为它（在我看来有点）很糟糕。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tbody&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;contenteditable&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;hello medium&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tbody&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: solid &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* Key css */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3c1a9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;iframe src=&quot;https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fembed%2Fpreview%2FyLKoyqv%3Fdefault-tabs%3Dcss%252Cresult%26height%3D600%26host%3Dhttps%253A%252F%252Fcodepen.io%26slug-hash%3DyLKoyqv&amp;amp;display_name=CodePen&amp;amp;url=https%3A%2F%2Fcodepen.io%2Fqianlong%2Fpen%2FyLKoyqv&amp;amp;image=https%3A%2F%2Fshots.codepen.io%2Fqianlong%2Fpen%2FyLKoyqv-512.jpg%3Fversion%3D1658679386&amp;amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;amp;type=text%2Fhtml&amp;amp;schema=codepen&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;600&quot; width=&quot;100%&quot; title=&quot;yLKoyqv&quot; class=&quot;fj aq as ag cf&quot; scrolling=&quot;auto&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note purple no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://javascript.plainenglish.io/10-css-tricks-you-should-know-for-centering-elements-61092d35b659&quot;&gt;10 CSS Tricks You Should Know for Centering</summary>
        
      
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>深入前端架构的前世今生</title>
    <link href="https://fe32.top/articles/fe0814mn/"/>
    <id>https://fe32.top/articles/fe0814mn/</id>
    <published>2022-08-14T10:27:49.000Z</published>
    <updated>2023-06-27T14:39:00.682Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前端架构的前世今生&quot;&gt;&lt;a href=&quot;#前端架构的前世今生&quot; class=&quot;headerlink&quot; title=&quot;前端架构的前世今生&quot;&gt;&lt;/a&gt;前端架构的前世今生&lt;/h2&gt;&lt;h3 id=&quot;架构是如何产生的？&quot;&gt;&lt;a href=&quot;#架构是如何产生的？&quot; class=&quot;headerlink&quot; title=&quot;架构是如何产生的？&quot;&gt;&lt;/a&gt;架构是如何产生的？&lt;/h3&gt;&lt;p&gt;刚开始时，前端是没有架构的。为什么会这么说呢？&lt;/p&gt;
&lt;p&gt;因为 js 在刚开始诞生时，它的目的是为了让用户在 &lt;strong&gt;页面上的交互&lt;/strong&gt; 会更加地流畅，仅仅只是作为一个工具来使用。通常情况下，那个时候的前端代码会内嵌到 &lt;strong&gt;后端的应用&lt;/strong&gt; 中来使用。&lt;/p&gt;
&lt;p&gt;随着时间的推移和前端的发展，在一个网页当中，js 的代码会越来越多，交互也变得越来越复杂。于是有了一些后端的架构，比如说：后端&lt;code&gt;MVC&lt;/code&gt;框架。&lt;/p&gt;
&lt;h3 id=&quot;MVC架构&quot;&gt;&lt;a href=&quot;#MVC架构&quot; class=&quot;headerlink&quot; title=&quot;MVC架构&quot;&gt;&lt;/a&gt;MVC架构&lt;/h3&gt;&lt;p&gt;所谓 MVC 架构，即将前端的渲染体系，从后端的服务体系中拆解出去。后端 MVC 架构具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将视图层、数据层、控制层做分离，后端的服务主要在数据层和控制层&lt;/li&gt;
&lt;li&gt;缺点：重度依赖开发环境，代码混淆严重，复杂度比较高&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;前后端分离架构&quot;&gt;&lt;a href=&quot;#前后端分离架构&quot; class=&quot;headerlink&quot; title=&quot;前后端分离架构&quot;&gt;&lt;/a&gt;前后端分离架构&lt;/h3&gt;&lt;p&gt;所谓前后端分离架构，即将前端代码从后端环境中提炼出来（ ajax 促进了 &lt;strong&gt;前后端分离架构&lt;/strong&gt; 的发展），也就是我们所说的 &lt;strong&gt;多页面架构&lt;/strong&gt; 。下面我们用一张图来了解前后端分离架构的特点：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/15/62f91c0da4bcd.png&quot; alt=&quot;前后端分离架构&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;前后端分离架构&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;即使出现了前后端分离架构，但它还是存在一定的缺点。比如：前端缺乏 &lt;strong&gt;独立部署能力&lt;/strong&gt; ，整体流程依赖后端环境。&lt;/p&gt;
&lt;p&gt;针对存在的这些问题，后来也就有了 Nodejs 。&lt;/p&gt;
&lt;h3 id=&quot;Nodejs&quot;&gt;&lt;a href=&quot;#Nodejs&quot; class=&quot;headerlink&quot; title=&quot;Nodejs&quot;&gt;&lt;/a&gt;Nodejs&lt;/h3&gt;&lt;p&gt;Nodejs 的广泛适应促进了前端技术的飞速发展，因为 Node 的出现，各种 &lt;strong&gt;打包&lt;/strong&gt; 、 &lt;strong&gt;构建工具&lt;/strong&gt; 应运而生。同时，也诞生了 &lt;strong&gt;多元化&lt;/strong&gt; 的前端开发方式，使得前端开发可以 &lt;strong&gt;脱离整体后端环境&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;Nodejs 的出现，使得前端产生了新的架构体系，即 &lt;strong&gt;单页面架构&lt;/strong&gt; 。&lt;/p&gt;
&lt;h3 id=&quot;单页面架构&quot;&gt;&lt;a href=&quot;#单页面架构&quot; class=&quot;headerlink&quot; title=&quot;单页面架构&quot;&gt;&lt;/a&gt;单页面架构&lt;/h3&gt;&lt;p&gt;(1) 现有单页面架构&lt;/p&gt;
&lt;p&gt;市面上流行的单页面架构有以下几种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打包：gulp、rollup、webpack和vite……&lt;/li&gt;
&lt;li&gt;框架：vue/react/angular/……&lt;/li&gt;
&lt;li&gt;ui库：antd/iview/elementui/mintui……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(2) 单页面架构的优势&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;切换页面无刷新浏览器，用户体验号&lt;/li&gt;
&lt;li&gt;组件化开发方式，极大提升了代码复用率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(3) 单页面架构的劣势&lt;/p&gt;
&lt;p&gt;单页面架构有一定的优势，但同时也存在一定的不足。具体如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单页面架构所有的内容都是由 js 来渲染的，因此会不利于 SEO ，也不利于跨端搜索，因为它只有一个简单的 html 文件。&lt;/li&gt;
&lt;li&gt;且由于所有的渲染都是由 js 来控制的，因此首次渲染会出现较长时间的白屏。但比较好的一点是，这两个存在的问题都可以利用其他技术手段来解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说到这里，细心的同学可能会发现一个问题，所有的前端内容都还只停留在 &lt;strong&gt;浏览器阶段&lt;/strong&gt; ，只是跟用户在做一些简单的交互。那有没有可能有一种情况，我们的 js 也可以写一些服务端的逻辑呢？比如说：连接数据库、做一些增删改查的操作或者一些运维的工作。基于这样的背景，大前端时代到来了。&lt;/p&gt;
&lt;h3 id=&quot;大前端时代&quot;&gt;&lt;a href=&quot;#大前端时代&quot; class=&quot;headerlink&quot; title=&quot;大前端时代&quot;&gt;&lt;/a&gt;大前端时代&lt;/h3&gt;&lt;p&gt;大前端时代的到来，为开发者们带来了一些服务端的框架。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;后端框架：express、koa&lt;/li&gt;
&lt;li&gt;包管理工具：npm、yarn&lt;/li&gt;
&lt;li&gt;node版本管理：nvm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综上，大前端时代给我们提供了一定的便利，但同时也带来了一定的弊端。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有的代码基本都可以通过应用拆分来实现细颗粒度，但是呢，这样细颗粒度的拆分也会导致一些维护上的困难，即过于灵活的实现也导致了前端应用拆分过多，维护困难。&lt;/li&gt;
&lt;li&gt;往往一个功能或需求会跨两三个项目来进行开发，这样会增加很大的开发负担。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于以上弊端的存在，现如今衍生出许多新型的架构，比如微前端等。&lt;/p&gt;
&lt;h3 id=&quot;微前端架构&quot;&gt;&lt;a href=&quot;#微前端架构&quot; class=&quot;headerlink&quot; title=&quot;微前端架构&quot;&gt;&lt;/a&gt;微前端架构&lt;/h3&gt;&lt;p&gt;微前端等新型架构有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跟技术栈无关，可以使用&lt;code&gt;vue&lt;/code&gt;、&lt;code&gt;react&lt;/code&gt;、&lt;code&gt;angular&lt;/code&gt;、&lt;code&gt;html&lt;/code&gt;原生等技术栈；&lt;/li&gt;
&lt;li&gt;主框架不限制所接入应用的技术栈，微应用具备完全自主权；&lt;/li&gt;
&lt;li&gt;可以进行独立开发和独立部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微前端架构也是一样的。它具有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增量升级 - 不论是上线、发布还是开发，都可以使用增量的方式来升级；&lt;/li&gt;
&lt;li&gt;微前端是一种非常好的实施渐进式重构的手段和策略；&lt;/li&gt;
&lt;li&gt;所谓渐进式重构，即不断地对既有代码进行抽象、分离和组合。有时候在我们的大型应用里，我们需要把一部分页面通过重构的方式来进行重写或优化，以让代码后期可复用、无副作用和逻辑更单一，而这所使用的方式就是渐进式重构；&lt;/li&gt;
&lt;li&gt;微应用仓库独立，前后端可独立开发，主框架自动完成同步更新；&lt;/li&gt;
&lt;li&gt;微前端的每一个子应用，都是可以独立运行的；&lt;/li&gt;
&lt;li&gt;每个微应用之间的状态是隔离的，运行时状态不共享。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微前端架构劣势如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接入难度高 - 微前端的整体理念跟我们以往的开发方式还略有不同，初步理解时会稍有困难，因此会有较长一段时间的接受程度。&lt;/li&gt;
&lt;li&gt;应用场景 - 在移动端较少、而在 PC 端 和 后台管理端 应用较多。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;软件设计原则与分层&quot;&gt;&lt;a href=&quot;#软件设计原则与分层&quot; class=&quot;headerlink&quot; title=&quot;软件设计原则与分层&quot;&gt;&lt;/a&gt;软件设计原则与分层&lt;/h2&gt;&lt;h3 id=&quot;软件设计原则&quot;&gt;&lt;a href=&quot;#软件设计原则&quot; class=&quot;headerlink&quot; title=&quot;软件设计原则&quot;&gt;&lt;/a&gt;软件设计原则&lt;/h3&gt;&lt;p&gt;（1）单一职责原则&lt;/p&gt;
&lt;p&gt;概念： 永远不应该有多于一个原因来改变某个类。&lt;/p&gt;
&lt;p&gt;理解： 对于一个类而言，应该仅有一个引起它变化的原因。&lt;/p&gt;
&lt;p&gt;应用： 如果一个类拥有了两种职责，那就可以将这个类分为两个类。&lt;/p&gt;
&lt;p&gt;相信看上面的概念可能很多小伙伴会觉得很枯燥，接下来我们用一个例子来进行阐述。具体如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比如说我们现在在做 &lt;strong&gt;登录页面&lt;/strong&gt; ，这个页面会有 &lt;strong&gt;两个验证功能&lt;/strong&gt; 。第一个是验证用户的用户名，第二个是验证用户的密码。那假设说我们把这两个功能放在同一个方法里，这不仅仅会不利于查找错误的原因，而且在一个方法里面，我们会写很多的逻辑判断来验证我们当前所验证的字段是用户名还是密码。&lt;/li&gt;
&lt;li&gt;这样做，不仅仅会加重我们开发的负担，而且在我们后期的开发过程中，维护起来也是比较困难的。因此在这个时候，我们就可以将验证用户名和验证密码这两个功能，拆分成两个方法去进行实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）开放封闭原则&lt;/p&gt;
&lt;p&gt;概念： 软件实体扩展应该是开放的，但对于修改应该是封闭的。&lt;/p&gt;
&lt;p&gt;理解： 在我们整体的开发过程中，封装的类或者方法，应该是便于扩展而不便于修改的。也就是说：“可以去扩展某个类或者某个方法，但是尽量不要去对它进行修改”。&lt;/p&gt;
&lt;p&gt;应用：当需求有改动，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。&lt;/p&gt;
&lt;p&gt;同样我们用一个例子来阐述开放封闭原则，具体如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在上面验证用户名和验证密码功能的基础上，我们继续添加一个核对图片验证码的功能。在输入了用户名和密码之后，需要让用户再输入验证码，只有验证码输入正确后，才可以进行正常登录。&lt;/li&gt;
&lt;li&gt;那这个时候可能有的小伙伴会想去修改验证密码这个函数的功能，那么我们不仅仅要付出大量的开发时间，还有多出很多的测试内容要去测试。同时，上线了之后，我们也不能保证是否会对验证密码这个功能造成影响。所以这样做，后期的维护成本是相当大的。&lt;/li&gt;
&lt;li&gt;因此，我们应该先去封装一个新的函数，来验证图片验证码的功能。这样处理，即使是线上环境出了问题，我们也可以更好地追溯到出现问题的源头。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（3）里氏替换原则&lt;/p&gt;
&lt;p&gt;概念： 父类在使用的过程中，一定是能够被子类替换的。&lt;/p&gt;
&lt;p&gt;理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么也就是说，我们在使用父类方法的时候，如果说将父类的引用化为子类的引用，那么对于整体的程序设计来说，是没有任何影响的。里氏替换可能在我们适应面向对象的时候，会不断的注意到。而对于现在大部分在使用函数式编程时，对里氏替换原则的关注度，可能就没有那么高了。&lt;/li&gt;
&lt;li&gt;对于架构设计而言，里氏替换原则是一个比较重要的原则，我们需要对一些整体的程序做一些可替换的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（4）最少知识原则&lt;/p&gt;
&lt;p&gt;概念： 只与你最直接的对象交流（即与你直接关联的对象）。&lt;/p&gt;
&lt;p&gt;理解： 低耦合，高内聚。&lt;/p&gt;
&lt;p&gt;应用： 做系统设计时，尽量减少依赖关系。&lt;/p&gt;
&lt;p&gt;（5）接口隔离原则&lt;/p&gt;
&lt;p&gt;概念： 一个类与另一个类之间的依赖性，应该依赖于尽可能小的接口。&lt;/p&gt;
&lt;p&gt;理解： 不要对外暴露没有实际意义的接口，用户不应该依赖它不需要的接口。&lt;/p&gt;
&lt;p&gt;应用： 当需要对外暴露接口时，如果是非必要对外提供，尽量删除。&lt;/p&gt;
&lt;p&gt;（6）依赖导致原则&lt;/p&gt;
&lt;p&gt;概念：高层模块不应该依赖于低层模块，他们应该依赖于抽象。抽象不应该依赖于细节，而细节应该依赖于抽象。&lt;/p&gt;
&lt;p&gt;理解：应该面向接口编程，不应该面向实现类编程。&lt;/p&gt;
&lt;p&gt;注意点：并不是说，所有的类都要有一个对应的接口，而是说，如果有接口，那就尽量使用接口来编程。&lt;/p&gt;
&lt;p&gt;（7） 总结&lt;/p&gt;
&lt;p&gt;将以上六大原则的英文首字母拼在一起就是&lt;code&gt;SOLID&lt;/code&gt;（稳定的），所以也称之为&lt;code&gt;SOLID&lt;/code&gt;原则。&lt;/p&gt;
&lt;p&gt;只有满足了这六大原则之后，才能设计出稳定的软件架构！&lt;/p&gt;
&lt;h3 id=&quot;补充设计原则&quot;&gt;&lt;a href=&quot;#补充设计原则&quot; class=&quot;headerlink&quot; title=&quot;补充设计原则&quot;&gt;&lt;/a&gt;补充设计原则&lt;/h3&gt;&lt;h4 id=&quot;组合-聚合复用原则&quot;&gt;&lt;a href=&quot;#组合-聚合复用原则&quot; class=&quot;headerlink&quot; title=&quot;组合/聚合复用原则&quot;&gt;&lt;/a&gt;组合/聚合复用原则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;当要扩展类的功能时，优先考虑使用组合，而不是继承。&lt;/li&gt;
&lt;li&gt;该原则在 23 种经典设计模式中频繁使用。&lt;/li&gt;
&lt;li&gt;如：代理模式、装饰模式、适配器模式等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;无依赖原则&quot;&gt;&lt;a href=&quot;#无依赖原则&quot; class=&quot;headerlink&quot; title=&quot;无依赖原则&quot;&gt;&lt;/a&gt;无依赖原则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;当&lt;code&gt;A&lt;/code&gt;模块依赖于&lt;code&gt;B&lt;/code&gt;模块，&lt;code&gt;B&lt;/code&gt;模块依赖于&lt;code&gt;C&lt;/code&gt;模块，&lt;code&gt;C&lt;/code&gt;模块依赖于&lt;code&gt;A&lt;/code&gt;模块，此时将出现循环依赖。&lt;/li&gt;
&lt;li&gt;在设计中避免该问题，可通过引入 “中介者模式” 解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;共同封装原则&quot;&gt;&lt;a href=&quot;#共同封装原则&quot; class=&quot;headerlink&quot; title=&quot;共同封装原则&quot;&gt;&lt;/a&gt;共同封装原则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;应该将易变的类放在同一个包里，将变化隔离出来。&lt;/li&gt;
&lt;li&gt;该原则是 “开放-封闭原则” 的延伸。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;共同重用原则&quot;&gt;&lt;a href=&quot;#共同重用原则&quot; class=&quot;headerlink&quot; title=&quot;共同重用原则&quot;&gt;&lt;/a&gt;共同重用原则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;如果我们重用了某个包中的一个类，那么这个包又还需要依赖于它的一个父类。&lt;/li&gt;
&lt;li&gt;这样就相当于重用了包中的所有类，因此我们要尽可能减少包的大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;好莱坞原则&quot;&gt;&lt;a href=&quot;#好莱坞原则&quot; class=&quot;headerlink&quot; title=&quot;好莱坞原则&quot;&gt;&lt;/a&gt;好莱坞原则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;秉承&lt;code&gt;Don&#39;t call me, I‘ll call you.&lt;/code&gt;的原则；&lt;/li&gt;
&lt;li&gt;控制反转（或称为“依赖注入”）；&lt;/li&gt;
&lt;li&gt;不需要主动创建对象，而是由容器帮我们来创建并管理这些对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;其他设计原则&quot;&gt;&lt;a href=&quot;#其他设计原则&quot; class=&quot;headerlink&quot; title=&quot;其他设计原则&quot;&gt;&lt;/a&gt;其他设计原则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;不要重复你自己 —— 不要让重复的代码到处都是，要让它们足够的重用，所以要尽可能地封装。&lt;/li&gt;
&lt;li&gt;保持它简单与傻瓜 —— 保持系统界面简洁，功能实用，操作方便。&lt;/li&gt;
&lt;li&gt;高内聚与低耦合 —— 模块内部需要做到内聚度高，模块之间需要做到耦合度低。&lt;/li&gt;
&lt;li&gt;关注点分离 —— ①将一个复杂的问题分离为多个简单的问题，然后逐个解决。②难点：如何进行分离。&lt;/li&gt;
&lt;li&gt;你不需要它 —— ①不要一开始就把问题设计的非常复杂，不要陷入“过渡设计”的深渊；②让系统足够简单，而又不失去扩展性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;软件分层设计&quot;&gt;&lt;a href=&quot;#软件分层设计&quot; class=&quot;headerlink&quot; title=&quot;软件分层设计&quot;&gt;&lt;/a&gt;软件分层设计&lt;/h2&gt;&lt;p&gt;软件的设计分层可以分为4个部分，分别是： &lt;strong&gt;系统级架构&lt;/strong&gt; 、&lt;strong&gt;应用级架构&lt;/strong&gt; 、&lt;strong&gt;代码级架构和&lt;/strong&gt; 和 &lt;strong&gt;模块级别架构&lt;/strong&gt; 。具体如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/15/62f91c113335a.png&quot; alt=&quot;软件设计分层&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;软件设计分层&lt;/span&gt;&lt;/div&gt;

&lt;h3 id=&quot;系统级架构&quot;&gt;&lt;a href=&quot;#系统级架构&quot; class=&quot;headerlink&quot; title=&quot;系统级架构&quot;&gt;&lt;/a&gt;系统级架构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;应用在整个系统内，如与后台服务如何通信，与第三方系统如何集成。&lt;/li&gt;
&lt;li&gt;设计前端首要条件：了解前端系统与其他系统之间的关系。其中关系包括：业务关系和协同机制。&lt;/li&gt;
&lt;li&gt;设计后端首要条件：只需要规定与后台数据传递的机制。&lt;/li&gt;
&lt;li&gt;包括：api 设计规则，访问授权的一个开放标准（OAuth）跳转 token 的验证，数据传递 cookie 等。&lt;/li&gt;
&lt;li&gt;前端与后端的关系考虑的主要因素是：前后端分离的架构设计。&lt;/li&gt;
&lt;li&gt;前后端分离架构其实是如何实施技术决策，包括用户鉴权、API接口管理和设计、API文档管理、Mock的使用、BFF（服务于前端的后端，nodejs），以及是否需要服务端渲染等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;微前端&quot;&gt;&lt;a href=&quot;#微前端&quot; class=&quot;headerlink&quot; title=&quot;微前端&quot;&gt;&lt;/a&gt;微前端&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在一个系统内微前端是应用间的架构方案。&lt;/li&gt;
&lt;li&gt;在多个应用之间，微前端则是一种系统间等架构方案。&lt;/li&gt;
&lt;li&gt;微前端是将多个前端应用以某种形式结合在一起进行应用。&lt;/li&gt;
&lt;li&gt;旨在解决单体应用在一个相对长的时间跨度下，由于参与的人员、团队的增多、变迁，从一个普通应用演变成一个巨石应用（FrontEnd Monolith）后，随之而来的是应用不可维护的问题。&lt;/li&gt;
&lt;li&gt;单实例：即同一时刻，只有一个子应用被展示，子应用具备一个完整的应用生命周期。&lt;/li&gt;
&lt;li&gt;多实例：通常基于 url 的变化来做子应用的切换，值得注意的是，同一时刻可展示多个子应用。&lt;/li&gt;
&lt;li&gt;通常使用 Web Components 方案来做子应用封装，子应用更像是一个业务组件而不是应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;应用级架构&quot;&gt;&lt;a href=&quot;#应用级架构&quot; class=&quot;headerlink&quot; title=&quot;应用级架构&quot;&gt;&lt;/a&gt;应用级架构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;应用级架构可以看作是系统级别架构的细化。&lt;/li&gt;
&lt;li&gt;单个应用与其他外部应用的关系，微服务架构下多个应用的协作、数据交换等。&lt;/li&gt;
&lt;li&gt;应用级架构举例：脚手架、模式库和设计系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;模块级架构&quot;&gt;&lt;a href=&quot;#模块级架构&quot; class=&quot;headerlink&quot; title=&quot;模块级架构&quot;&gt;&lt;/a&gt;模块级架构&lt;/h3&gt;&lt;p&gt;这部分内容是我们开始业务编码之前进行设计，我们称之为迭代。&lt;/p&gt;
&lt;h3 id=&quot;代码级架构&quot;&gt;&lt;a href=&quot;#代码级架构&quot; class=&quot;headerlink&quot; title=&quot;代码级架构&quot;&gt;&lt;/a&gt;代码级架构&lt;/h3&gt;&lt;p&gt;主要谈论：规范与原则。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上面我们谈到软件的 4 种设计分层，同时对于这 4 种设计分层来说，它的难度是 &lt;strong&gt;逐级递减&lt;/strong&gt; 的。&lt;br&gt;在开发中，要注意 &lt;strong&gt;可维护性&lt;/strong&gt; 和 &lt;strong&gt;可扩展性&lt;/strong&gt;。&lt;br&gt;简单的代码可维护性高；越是写得抽象的代码越难维护。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;如何保证架构的质量&quot;&gt;&lt;a href=&quot;#如何保证架构的质量&quot; class=&quot;headerlink&quot; title=&quot;如何保证架构的质量&quot;&gt;&lt;/a&gt;如何保证架构的质量&lt;/h2&gt;&lt;h3 id=&quot;系统的稳定性和健壮性&quot;&gt;&lt;a href=&quot;#系统的稳定性和健壮性&quot; class=&quot;headerlink&quot; title=&quot;系统的稳定性和健壮性&quot;&gt;&lt;/a&gt;系统的稳定性和健壮性&lt;/h3&gt;&lt;h4 id=&quot;稳定性&quot;&gt;&lt;a href=&quot;#稳定性&quot; class=&quot;headerlink&quot; title=&quot;稳定性&quot;&gt;&lt;/a&gt;稳定性&lt;/h4&gt;&lt;p&gt;定义：当一个实际的系统处于一个平衡的状态时，如果受到外来作用的影响时，系统经过一个过渡过程仍然能够回到原来的平衡状态，我们称这个系统就是稳定的，否则称系统不稳定。&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;架构设计的基石&lt;/li&gt;
&lt;li&gt;可以更好地实现自我修复&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;健壮性&quot;&gt;&lt;a href=&quot;#健壮性&quot; class=&quot;headerlink&quot; title=&quot;健壮性&quot;&gt;&lt;/a&gt;健壮性&lt;/h4&gt;&lt;p&gt;定义：计算机软件在输入错误、磁盘故障、网络过载或有意攻击情况下，能否不死机、不崩溃，就是该软件健壮性的具体表现。&lt;/p&gt;
&lt;p&gt;解释：一个系统容错能力强，运行不易被干扰，安全性好。&lt;/p&gt;
&lt;p&gt;度量标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个软件可以从错误的输入中推断出正确合理的输入；&lt;/li&gt;
&lt;li&gt;一个软件可以正确的运行在不同环境下；&lt;/li&gt;
&lt;li&gt;一个软件能够检测到自己的内部设计或者编码错误，并得到正确的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;健壮性和稳定性是特定软件自身的要求；&lt;/li&gt;
&lt;li&gt;健壮性和稳定性是软件处理的一部分；&lt;/li&gt;
&lt;li&gt;软件架构的健壮性和稳定性是该软件规划时所确定的目标；&lt;/li&gt;
&lt;li&gt;若软件的实现未能达到原定的目标，则该软件的健壮性和稳定性不够或不好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;架构质量的衡量&quot;&gt;&lt;a href=&quot;#架构质量的衡量&quot; class=&quot;headerlink&quot; title=&quot;架构质量的衡量&quot;&gt;&lt;/a&gt;架构质量的衡量&lt;/h3&gt;&lt;p&gt;对于日常开发过程中的软件架构来说，总会有好的架构和不好的架构设计。那对于架构质量来说，有以下几点衡量指标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解难度&lt;/li&gt;
&lt;li&gt;崩溃率和错误率的指标&lt;/li&gt;
&lt;li&gt;接入依赖的成本&lt;/li&gt;
&lt;li&gt;开发效率&lt;/li&gt;
&lt;li&gt;错误上报和信息收集等功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;架构尹始&quot;&gt;&lt;a href=&quot;#架构尹始&quot; class=&quot;headerlink&quot; title=&quot;架构尹始&quot;&gt;&lt;/a&gt;架构尹始&lt;/h2&gt;&lt;h3 id=&quot;架构前期准备&quot;&gt;&lt;a href=&quot;#架构前期准备&quot; class=&quot;headerlink&quot; title=&quot;架构前期准备&quot;&gt;&lt;/a&gt;架构前期准备&lt;/h3&gt;&lt;p&gt;都说正确的选择是良好架构的开端，也就是说，如果前期我们把所有需要准备的内容准备好，那么在做架构设计时，也将会让架构设计更加的得心应手。下面我们就来谈论几点架构前期需要准备的内容。&lt;/p&gt;
&lt;h4 id=&quot;架构师分类&quot;&gt;&lt;a href=&quot;#架构师分类&quot; class=&quot;headerlink&quot; title=&quot;架构师分类&quot;&gt;&lt;/a&gt;架构师分类&lt;/h4&gt;&lt;p&gt;系统架构师👇：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从系统的维度出发，负责整体系统的架构设计；&lt;/li&gt;
&lt;li&gt;主要是基础服务和各系统间协调，着眼全局；&lt;/li&gt;
&lt;li&gt;比如关注负载、可靠性、伸缩、扩展、整体项目切分、缓存应用等方面的基础架构设计。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应用架构师👇：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从应用程序的维度出发，负责某个应用的技术架构，主要偏业务系统。&lt;/li&gt;
&lt;li&gt;关注和理解业务，梳理模型、设计模式、接口和数据交互等方面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;业务架构师👇：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从业务流程的维度出发，对某一个行业、业务的领域做相应的分析，获取领域模型，最终获得系统的模型。&lt;/li&gt;
&lt;li&gt;也可以称为是领域专家、行业专家、产品咨询师和资深顾问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;技术前期贮备&quot;&gt;&lt;a href=&quot;#技术前期贮备&quot; class=&quot;headerlink&quot; title=&quot;技术前期贮备&quot;&gt;&lt;/a&gt;技术前期贮备&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;技术选型： 社区氛围、发展规模、未来发展趋势、与当前团队的契合度、执行成本、维护和迁移成本、执行效率等内容的调研和报告。想&lt;/li&gt;
&lt;li&gt;充分调研每一项技术可能带来的利与弊。&lt;/li&gt;
&lt;li&gt;最大程度上预测架构设计中的缺陷，以防重大问题的发生。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;技术优化&quot;&gt;&lt;a href=&quot;#技术优化&quot; class=&quot;headerlink&quot; title=&quot;技术优化&quot;&gt;&lt;/a&gt;技术优化&lt;/h4&gt;&lt;p&gt;在架构发展过程中，可能会存在一些有悖于当前架构设计的实现，造成了架构发展阻塞，所以需要进行架构优化，使得架构设计的适应性更高。&lt;/p&gt;
&lt;h4 id=&quot;架构优化&quot;&gt;&lt;a href=&quot;#架构优化&quot; class=&quot;headerlink&quot; title=&quot;架构优化&quot;&gt;&lt;/a&gt;架构优化&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;架构不是一蹴而就的，即不是一成不变的。在业务发展的过程中，架构也在不断地演进。&lt;/li&gt;
&lt;li&gt;因此要对架构设计进行实时调优，使架构优化成为常态化。&lt;/li&gt;
&lt;li&gt;通过不断的调整架构实现，改进初始架构中设计的不足来补足短板。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;技术填补&quot;&gt;&lt;a href=&quot;#技术填补&quot; class=&quot;headerlink&quot; title=&quot;技术填补&quot;&gt;&lt;/a&gt;技术填补&lt;/h3&gt;&lt;h4 id=&quot;编码方案问题&quot;&gt;&lt;a href=&quot;#编码方案问题&quot; class=&quot;headerlink&quot; title=&quot;编码方案问题&quot;&gt;&lt;/a&gt;编码方案问题&lt;/h4&gt;&lt;p&gt;在开发中，有时候会因为开发时间紧急的原因，让我们写的代码有些粗糙。如果每次都不让自己去追求完美，而是一味的妥协现有不好用的编码方案。久而久之，很容易使得整个软件架构零散成一地，像是东拼西凑的，没有任何支撑点可言。常见问题的存在形式有以下几大方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发过程中因为时间紧迫导致的实现不合理 —— 比如：查找10000以内的质数，利用循环或筛选法等方式来进行实现。&lt;/li&gt;
&lt;li&gt;暂时没有想到更好的实现方式而妥协的版本 —— 刚开始使用 if……else 实现，慢慢地演变成责任链的模式。&lt;/li&gt;
&lt;li&gt;架构设计前期没有考虑到的细节 —— ①交互细节→ props 传递参数（交互冗余，流程较长）；②使用全局状态管理实现参数传递。&lt;/li&gt;
&lt;li&gt;不合理的交互设计，导致技术实现复杂。&lt;/li&gt;
&lt;li&gt;旧功能文档缺失，无正确拓展、修改和兼容旧功能，导致上线后问题剧增。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;技术填补会引发的后果&quot;&gt;&lt;a href=&quot;#技术填补会引发的后果&quot; class=&quot;headerlink&quot; title=&quot;技术填补会引发的后果&quot;&gt;&lt;/a&gt;技术填补会引发的后果&lt;/h4&gt;&lt;p&gt;在上面中我们举例了各种软件编码过程中修修补补的方案，那这样不断的技术填补后，会导致什么样的后果么？具体表现有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修复变重构 —— 小的技术债务不做偿还，最后会演变成一场大规模的重构工作，导致产出不高；&lt;/li&gt;
&lt;li&gt;影响开发速度 —— 技术债务的存在导致整体开发需要减容的点过多，影响开发效率。极大影响上线速度，导致整体项目迭代缓慢，失去核心竞争力；&lt;/li&gt;
&lt;li&gt;开发死循环 —— 容易陷入维护旧功能→开发新功能→兼容旧功能→维护旧功能→开发新功能……这样的恶性循环。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;技术填补解决方案&quot;&gt;&lt;a href=&quot;#技术填补解决方案&quot; class=&quot;headerlink&quot; title=&quot;技术填补解决方案&quot;&gt;&lt;/a&gt;技术填补解决方案&lt;/h4&gt;&lt;p&gt;上面说到了技术填补会引发的后果，那后果产生了，自然也就需要有对应的解决方案来弥补。&lt;/p&gt;
&lt;p&gt;具体解决方案有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优秀的架构设计是基础 —— ①必须能够有效处理当前需求中可预见的情况，而对于未知的、可能出现的特殊情况，一般很小的改动就能解决问题；②根据当前的业务，进行合理的项目拆分，尽量地进行代码解耦，减少高耦合度的情况发生；③必须有日志模块，操作日志，错误日志，业务日志等等。&lt;br&gt;良好的技术培训和传帮带能力 —— ①让每一位开发者可以从更深一层次理解自己所需要实现的功能；②从最开始的代码规范、到熟悉业务、最后再到编写文档。（传帮带）&lt;/li&gt;
&lt;li&gt;充分的技术方案可避免一部分技术债务的产生 —— 技术方案是充分理解需求之后所能产出的对需求理想的实现方式，必要性不言而喻。&lt;/li&gt;
&lt;li&gt;不同工程师之间可以相互review —— CodeReview 是非常重要的，同时也是对自身的一个提高。&lt;/li&gt;
&lt;li&gt;提升对修复技术债务重要性的认知 —— 工程师如果能预见一个债务可能导致的问题，自然愿意花时间去处理。&lt;/li&gt;
&lt;li&gt;善于发现和定期处理一些技术债务 —— 勇于发现系统中的技术债务，让自己为系统负责。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结来说就是：&lt;/p&gt;
&lt;p&gt;等产品上线后，开发就没有那么紧张了，这个时候就可以找个时间来处理下遗留下来的技术债务，在解决技术债务中不断去突破自己的上限，更好地提高自己的技术能力和软件架构设计的能力。&lt;/p&gt;
&lt;h3 id=&quot;奔溃预防&quot;&gt;&lt;a href=&quot;#奔溃预防&quot; class=&quot;headerlink&quot; title=&quot;奔溃预防&quot;&gt;&lt;/a&gt;奔溃预防&lt;/h3&gt;&lt;p&gt;架构奔溃是严重的架构设计事故，也是我们需要预防的关键所在。在软件奔溃的时候，首先要分析原因：①系统奔溃的产生；②日志记录，如：操作日志，错误日志，业务日志等。&lt;/p&gt;
&lt;p&gt;分析完成原因之后，接下来要讲的是，如何预防架构奔溃。主要有以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户行为抓取→争取在最新时间获取到用户操作链条&lt;/li&gt;
&lt;li&gt;解决存量问题→技术债务&lt;/li&gt;
&lt;li&gt;遏制新增→减少新增问题的概率&lt;/li&gt;
&lt;li&gt;对脏数据进行兜底和校验&lt;/li&gt;
&lt;li&gt;单元测试&lt;/li&gt;
&lt;li&gt;奔溃预警&lt;/li&gt;
&lt;li&gt;自动化测试&lt;/li&gt;
&lt;li&gt;更广的灰度触达&lt;/li&gt;
&lt;li&gt;性能优化体系&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;系统重构&quot;&gt;&lt;a href=&quot;#系统重构&quot; class=&quot;headerlink&quot; title=&quot;系统重构&quot;&gt;&lt;/a&gt;系统重构&lt;/h3&gt;&lt;p&gt;架构并不是永恒不变的，架构也是具有生命周期的，也会经历初生、发展、巅峰、衰弱、消亡的过程。那下面就来了解软件重构的相关内容。&lt;/p&gt;
&lt;h4 id=&quot;基础概念&quot;&gt;&lt;a href=&quot;#基础概念&quot; class=&quot;headerlink&quot; title=&quot;基础概念&quot;&gt;&lt;/a&gt;基础概念&lt;/h4&gt;&lt;p&gt;什么是重构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对软件内部结构的一种调整。&lt;/li&gt;
&lt;li&gt;目的是在不改变可观察行为的前提下，提高其可理解性，降低其修改成本。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。&lt;br&gt;重构理念：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运用大量微小且保持软件行为的步骤，一步步达成大规模的修改。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;早期和晚期的系统&quot;&gt;&lt;a href=&quot;#早期和晚期的系统&quot; class=&quot;headerlink&quot; title=&quot;早期和晚期的系统&quot;&gt;&lt;/a&gt;早期和晚期的系统&lt;/h4&gt;&lt;p&gt;早期系统特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发速度快&lt;/li&gt;
&lt;li&gt;代码复杂度低&lt;/li&gt;
&lt;li&gt;代码规范都保持完好&lt;/li&gt;
&lt;li&gt;严格注重开发规范，不会允许危及架构设计的代码产生&lt;/li&gt;
&lt;li&gt;以上因素导致添加功能难度低，成本低&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;晚期系统特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具备所有早期系统的劣势&lt;/li&gt;
&lt;li&gt;代码复杂度高&lt;/li&gt;
&lt;li&gt;代码规范不完善&lt;/li&gt;
&lt;li&gt;很多需求或功能会出现为了愉悦架构设计的情况&lt;/li&gt;
&lt;li&gt;添加新功能兼顾较多，涉及较多模块，牵一发而动全身&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;什么时候需要重构&quot;&gt;&lt;a href=&quot;#什么时候需要重构&quot; class=&quot;headerlink&quot; title=&quot;什么时候需要重构&quot;&gt;&lt;/a&gt;什么时候需要重构&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;当发现现有系统体系已经不能满足当前迭代速度的时候，就需要进行重构工作。&lt;/li&gt;
&lt;li&gt;对【坏味道】的代码通过一些重构手段进行微重构。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;重构流程&quot;&gt;&lt;a href=&quot;#重构流程&quot; class=&quot;headerlink&quot; title=&quot;重构流程&quot;&gt;&lt;/a&gt;重构流程&lt;/h4&gt;&lt;p&gt;重构一般具有以下流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确定问题点，确定重构功能和范围；&lt;/li&gt;
&lt;li&gt;根据旧架构中已有的设计，梳理重构后软件应有的逻辑走向；&lt;/li&gt;
&lt;li&gt;确保重构后的软件具有一定的稳定性和性能上的优化；&lt;/li&gt;
&lt;li&gt;解决此前在需求过程中存在的冲突问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="前端工程架构" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="前端工程架构" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Butterfly 一些常见问题</title>
    <link href="https://fe32.top/articles/hexo1612/"/>
    <id>https://fe32.top/articles/hexo1612/</id>
    <published>2022-08-07T14:54:07.000Z</published>
    <updated>2023-06-27T14:39:00.787Z</updated>
    
    
    <summary type="html">Hexo + Butterfly 博客搭建中遇到的一些常见问题！</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>推荐 10 套个人觉得还不错的网页模板</title>
    <link href="https://fe32.top/articles/hweb0804/"/>
    <id>https://fe32.top/articles/hweb0804/</id>
    <published>2022-08-04T13:02:47.000Z</published>
    <updated>2023-06-27T14:39:00.641Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这里推荐 10 套 从风格，配色，响应式等几方面个人觉得还不错的网页模板，假以时日用来做企业站，还是某种品牌的官网也好，觉得可以借鉴某种效果或者风格的朋友可以看看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Demo-01&quot;&gt;&lt;a href=&quot;#Demo-01&quot; class=&quot;headerlink&quot; title=&quot;Demo-01&quot;&gt;&lt;/a&gt;Demo-01&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe968df42c.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe96b0868a.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe96ce9155.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe96f4df67.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe976b7f9d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe976e0f0e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe9779c676.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe978c7165.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe97b6115b.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe97ee0e96.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe9807c7bd.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebe9839486e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-02（推荐）&quot;&gt;&lt;a href=&quot;#Demo-02（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Demo-02（推荐）&quot;&gt;&lt;/a&gt;Demo-02（推荐）&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea7a7ae1e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea7a3610e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea7cb0025.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea7e56159.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea801e35c.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea833702b.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea84ae4f4.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea861fbbf.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea8b4196d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea8f69ac7.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea91bb88f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea957a9be.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea97e4d60.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebea996aa48.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-03&quot;&gt;&lt;a href=&quot;#Demo-03&quot; class=&quot;headerlink&quot; title=&quot;Demo-03&quot;&gt;&lt;/a&gt;Demo-03&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb72e69b0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb764b334.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb7758225.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb7892291.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb9489fda.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb98c66fa.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb9a10700.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeb9fbd1ca.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeba4f225d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeba74aa38.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebeba897146.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ebebad8b508.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-04（推荐）&quot;&gt;&lt;a href=&quot;#Demo-04（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Demo-04（推荐）&quot;&gt;&lt;/a&gt;Demo-04（推荐）&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed378d5caf8.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3799cdf1d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed379b7cca2.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed379da3bb5.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37a05e69d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37a257ce8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37aa32f31.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37ae05bbf.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37b5550d7.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37b715240.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37bdf3cd1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37bf057c3.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37c25aa71.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed37c540de9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-05&quot;&gt;&lt;a href=&quot;#Demo-05&quot; class=&quot;headerlink&quot; title=&quot;Demo-05&quot;&gt;&lt;/a&gt;Demo-05&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed389c40644.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed389f70b33.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed38a32b1cc.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed38a633a6d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed38a6e40f4.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed38a933e28.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-06&quot;&gt;&lt;a href=&quot;#Demo-06&quot; class=&quot;headerlink&quot; title=&quot;Demo-06&quot;&gt;&lt;/a&gt;Demo-06&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3993e1bc0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed399502a14.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3997814f9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed399cb7d73.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed399eae922.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed39a11fc11.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed39a40fdf8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-07（推荐）&quot;&gt;&lt;a href=&quot;#Demo-07（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Demo-07（推荐）&quot;&gt;&lt;/a&gt;Demo-07（推荐）&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3ba1be602.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3ba5d3157.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3ba8b7cbc.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3baa744b9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3bafd9085.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3bb5009ae.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3bb7de601.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3bbb1fd61.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-08&quot;&gt;&lt;a href=&quot;#Demo-08&quot; class=&quot;headerlink&quot; title=&quot;Demo-08&quot;&gt;&lt;/a&gt;Demo-08&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3cb201c8a.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3cb53a257.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3cb882da0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3cbbe6cb1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3ce071a68.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3ce59a122.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3ce527864.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3ce9f40c5.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3cf165889.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3cf1512d7.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-09（推荐）&quot;&gt;&lt;a href=&quot;#Demo-09（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Demo-09（推荐）&quot;&gt;&lt;/a&gt;Demo-09（推荐）&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3d4459d86.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3d549aae1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3d5bba018.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3d5d871f7.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3d5ec964e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3d60e4e7c.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3d65b4bcd.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Demo-10（推荐）&quot;&gt;&lt;a href=&quot;#Demo-10（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Demo-10（推荐）&quot;&gt;&lt;/a&gt;Demo-10（推荐）&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e254a7e3.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e250644d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e2788777.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e2d0c66b.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e2c85ce6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e2f7ed7e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e344ea76.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e36a6af8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e3924847.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/05/62ed3e38af1f5.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;仓库地址&quot;&gt;&lt;a href=&quot;#仓库地址&quot; class=&quot;headerlink&quot; title=&quot;仓库地址&quot;&gt;&lt;/a&gt;仓库地址&lt;/h2&gt;&lt;a class=&quot;ghcard&quot; rel=&quot;external nofollow noopener noreferrer&quot; href=&quot;https://github.com/tzy13755126023/ten-html-temp&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=tzy13755126023&amp;amp;repo=ten-html-temp&amp;amp;theme=onedark&amp;amp;show_owner=true&quot;&gt;&lt;/a&gt;

&lt;!-- &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/09/3a2053f3f8799.jpg&quot; style=&quot;width:500px;&quot;/&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;正在火力书写中…</summary>
        
      
    
    
    
    <category term="推荐分享" scheme="https://fe32.top/categories/%E6%8E%A8%E8%8D%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="HTML" scheme="https://fe32.top/tags/HTML/"/>
    
    <category term="网页模板" scheme="https://fe32.top/tags/%E7%BD%91%E9%A1%B5%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>20 多个好用的 Vue 组件库</title>
    <link href="https://fe32.top/articles/vu0724se/"/>
    <id>https://fe32.top/articles/vu0724se/</id>
    <published>2022-07-24T14:45:25.000Z</published>
    <updated>2023-06-27T14:39:00.842Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1453e80459.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在本文中，将分享一些常见的 vue.js 组件。&lt;/p&gt;
&lt;h2 id=&quot;Tables-Data-Grids&quot;&gt;&lt;a href=&quot;#Tables-Data-Grids&quot; class=&quot;headerlink&quot; title=&quot;Tables / Data Grids&quot;&gt;&lt;/a&gt;Tables / Data Grids&lt;/h2&gt;&lt;h3 id=&quot;Vue-Tables-2&quot;&gt;&lt;a href=&quot;#Vue-Tables-2&quot; class=&quot;headerlink&quot; title=&quot;Vue Tables-2&quot;&gt;&lt;/a&gt;Vue Tables-2&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/matfish2/vue-tables-2&quot;&gt;https://github.com/matfish2/vue-tables-2&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e145477d311.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue Tables 2 旨在为开发者提供一个功能齐全的工具集，以便用 Vue 创建漂亮而实用的数据表格。数百个商业软件应用正在使用它。此外，Vue Tables 2 正在不断成长、改进，同时也在获得新的功能。&lt;/p&gt;
&lt;p&gt;特点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可选行及粘性头部&lt;/li&gt;
&lt;li&gt;虚拟分页&lt;/li&gt;
&lt;li&gt;下载客户组件数据的 CSV&lt;/li&gt;
&lt;li&gt;有数据层支持的多级分组&lt;/li&gt;
&lt;li&gt;Tailwind 主题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Handsontable&quot;&gt;&lt;a href=&quot;#Handsontable&quot; class=&quot;headerlink&quot; title=&quot;Handsontable&quot;&gt;&lt;/a&gt;Handsontable&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/handsontable/handsontable/tree/master/wrappers/vue&quot;&gt;https://github.com/handsontable/handsontable/tree/master/wrappers/vue&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1454aadda6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Handsontable 是一款页面端的表格交互插件，可以通过它加载显示表格内容，能够支持合并项、统计、行列拖动等。&lt;/p&gt;
&lt;p&gt;支持对加载后的表格页面的处理：添加/删除行/列，合并单元格等操作。&lt;/p&gt;
&lt;p&gt;此外，它还适用于 React、Angular 和 Vue。Handsontable 是一个 JavaScript 组件，它将数据网格功能与电子表格的用户体验相结合。此外，它还提供数据绑定、数据验证、过滤、排序和 CRUD 操作。&lt;/p&gt;
&lt;p&gt;特点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多列排序&lt;/li&gt;
&lt;li&gt;非连续选择&lt;/li&gt;
&lt;li&gt;过滤数据和验证数据&lt;/li&gt;
&lt;li&gt;导出文件&lt;/li&gt;
&lt;li&gt;有条件的格式化&lt;/li&gt;
&lt;li&gt;合并单元格&lt;/li&gt;
&lt;li&gt;隐藏行/列&lt;/li&gt;
&lt;li&gt;上下文菜单和注释&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Ag-Grid-Vue&quot;&gt;&lt;a href=&quot;#Ag-Grid-Vue&quot; class=&quot;headerlink&quot; title=&quot;Ag Grid Vue&quot;&gt;&lt;/a&gt;Ag Grid Vue&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/ag-grid/ag-grid&quot;&gt;https://github.com/ag-grid/ag-grid&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1454e2d6d5.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ag-Grid 是一个基于 Vue.js 的数据表格组件。其中，“ag” 表示 “agnostic”。内部 ag-Grid 引擎是在 TypeScript 中实现的，零依赖关系。&lt;/p&gt;
&lt;p&gt;ag-Grid 通过包装器组件支持 Vue，你可以在应用程序中，就像其他任何 Vue 组件一样使用 ag-Grid。它支持通过属性绑定传递配置，通过事件绑定来处理事件。你甚至可以使用 Vue 组件来自定义网格 UI 和单元格内容/行为。&lt;/p&gt;
&lt;h3 id=&quot;Vue-Easytable&quot;&gt;&lt;a href=&quot;#Vue-Easytable&quot; class=&quot;headerlink&quot; title=&quot;Vue Easytable&quot;&gt;&lt;/a&gt;Vue Easytable&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/huangshuwei/vue-easytable&quot;&gt;https://github.com/huangshuwei/vue-easytable&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1461d86dac.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;vue-easytable 是我遇到过的最强大的 Vue 表格组件之一。&lt;/p&gt;
&lt;p&gt;表格组件具有许多内置功能，比如说，单元格省略号、固定/灵活的列大小调整、自定义过滤等等。它有几个特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;国际化&lt;/li&gt;
&lt;li&gt;主题定制&lt;/li&gt;
&lt;li&gt;内置主题&lt;/li&gt;
&lt;li&gt;虚拟滚动&lt;/li&gt;
&lt;li&gt;列固定&lt;/li&gt;
&lt;li&gt;表头固定&lt;/li&gt;
&lt;li&gt;表头分组&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Vue-Good-Table&quot;&gt;&lt;a href=&quot;#Vue-Good-Table&quot; class=&quot;headerlink&quot; title=&quot;Vue Good Table&quot;&gt;&lt;/a&gt;Vue Good Table&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/xaksis/vue-good-table&quot;&gt;https://github.com/xaksis/vue-good-table&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1462095a19.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue-Good-Table 是一个基于 Vue.js 的数据表组件，简单、干净，具有排序、列过滤、分页等更多基本功能。它有几个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表搜索和排序&lt;/li&gt;
&lt;li&gt;列过滤和分页&lt;/li&gt;
&lt;li&gt;复选框表格&lt;/li&gt;
&lt;li&gt;行分组&lt;/li&gt;
&lt;li&gt;行样式&lt;/li&gt;
&lt;li&gt;行多选&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Notification&quot;&gt;&lt;a href=&quot;#Notification&quot; class=&quot;headerlink&quot; title=&quot;Notification&quot;&gt;&lt;/a&gt;Notification&lt;/h2&gt;&lt;h3 id=&quot;Vue-Toastification&quot;&gt;&lt;a href=&quot;#Vue-Toastification&quot; class=&quot;headerlink&quot; title=&quot;Vue Toastification&quot;&gt;&lt;/a&gt;Vue Toastification&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/Maronato/vue-toastification&quot;&gt;https://github.com/Maronato/vue-toastification&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e14622f27b6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;它提供轻巧、简单和漂亮的吐司提示。它有内置的 Nuxt 支持。而且，它还支持新的 Composition API 和 Vue 3。我们还可以使用 JSX 来开发自定义组件，提供更加灵活的功能。另外，通用注册允许它在任何应用程序内使用，甚至是 React。它有几点特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全用 Typescript 编写，支持所有类型&lt;/li&gt;
&lt;li&gt;支持 RTL&lt;/li&gt;
&lt;li&gt;定制一切&lt;/li&gt;
&lt;li&gt;滑动关闭&lt;/li&gt;
&lt;li&gt;使用 onClose、onClick 和 onMounted 钩子创建自定义体验&lt;/li&gt;
&lt;li&gt;以编程方式删除和更新吐司&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Vue-Toasted&quot;&gt;&lt;a href=&quot;#Vue-Toasted&quot; class=&quot;headerlink&quot; title=&quot;Vue Toasted&quot;&gt;&lt;/a&gt;Vue Toasted&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/shakee93/vue-toasted&quot;&gt;https://github.com/shakee93/vue-toasted&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1462478234.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue Toasted 是 Vue 最好的 toast (提示)插件之一。它被Vue，Laravel，NuxtJS 等许多组织所信任，它响应性强，兼容性好，使用方便，吸引人，有丰富的功能、图标、动作等。&lt;/p&gt;
&lt;h3 id=&quot;Vue-Notifications&quot;&gt;&lt;a href=&quot;#Vue-Notifications&quot; class=&quot;headerlink&quot; title=&quot;Vue Notifications&quot;&gt;&lt;/a&gt;Vue Notifications&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/se-panfilov/vue-notifications&quot;&gt;https://github.com/se-panfilov/vue-notifications&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e14629da79e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue Notifications 是一个与库无关的通知组件，非阻塞。&lt;/p&gt;
&lt;p&gt;VueNotiments 将您的应用程序与通知 UI 库连接起来。支持 miniToastr、VueToasted、VueEasyToast、toastr、iziToast、Noty、swal。&lt;/p&gt;
&lt;h3 id=&quot;Vue-Awesome-Notifications&quot;&gt;&lt;a href=&quot;#Vue-Awesome-Notifications&quot; class=&quot;headerlink&quot; title=&quot;Vue Awesome Notifications&quot;&gt;&lt;/a&gt;Vue Awesome Notifications&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://f3oall.github.io/awesome-notifications/&quot;&gt;https://f3oall.github.io/awesome-notifications/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1462e4cf76.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Awesome Notifications 是一个轻量级的，完全可自定义的 JavaScrip Vue Awesome Notifications，它是 Awesome Notifications 库的 Vue.js 版本。&lt;/p&gt;
&lt;h2 id=&quot;Loader&quot;&gt;&lt;a href=&quot;#Loader&quot; class=&quot;headerlink&quot; title=&quot;Loader&quot;&gt;&lt;/a&gt;Loader&lt;/h2&gt;&lt;h3 id=&quot;Vue-Wait&quot;&gt;&lt;a href=&quot;#Vue-Wait&quot; class=&quot;headerlink&quot; title=&quot;Vue Wait&quot;&gt;&lt;/a&gt;Vue Wait&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/f/vue-wait&quot;&gt;https://github.com/f/vue-wait&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1462e83087.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue Wait 这是一个用于 VUE、Vuex 和 Nuxt 应用的复杂装载器和进度管理组件。&lt;/p&gt;
&lt;p&gt;Vue Wait 帮助管理页面上的多个加载状态，状态之间没有任何冲突。基于一个非常简单的想法：通过管理具有多个加载状态的数组(或者 Vuex 存储)，让内置加载程序组件侦听注册的加载程序，并立即进入加载状态。&lt;/p&gt;
&lt;h3 id=&quot;Vue-Content-Loader&quot;&gt;&lt;a href=&quot;#Vue-Content-Loader&quot; class=&quot;headerlink&quot; title=&quot;Vue Content Loader&quot;&gt;&lt;/a&gt;Vue Content Loader&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/egoist/vue-content-loader&quot;&gt;https://github.com/egoist/vue-content-loader&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e146ea0019d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue Content Loader 是一个基于 Vue.js 的 SVG 占位符加载，可自定义的 SVG 组件，用于创建占位符加载，例如 Facebook 加载卡。Vue Content Loader 是 react-content-loader 的 Vue 实现。&lt;/p&gt;
&lt;h3 id=&quot;Epic-Spinners&quot;&gt;&lt;a href=&quot;#Epic-Spinners&quot; class=&quot;headerlink&quot; title=&quot;Epic Spinners&quot;&gt;&lt;/a&gt;Epic Spinners&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://epic-spinners.epicmax.co/&quot;&gt;https://epic-spinners.epicmax.co/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e146ebd5733.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;EpicSpinners 是一组易于使用的纯 css 打造的网页 Loading 效果，并且同时整合了 Vue 组件可以方便的在 Vue 项目中进行使用，由于是纯 css 打造，你可以在任意网页项目中自行整合并使用！&lt;/p&gt;
&lt;h3 id=&quot;Vue-Radial-Progress&quot;&gt;&lt;a href=&quot;#Vue-Radial-Progress&quot; class=&quot;headerlink&quot; title=&quot;Vue Radial Progress&quot;&gt;&lt;/a&gt;Vue Radial Progress&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/wyzant-dev/vue-radial-progress&quot;&gt;https://github.com/wyzant-dev/vue-radial-progress&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1476deb2c2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue Radial Progress 这是一个径向进度条效果的加载器组件，使用 svg 和 javascript 绘制带有渐变径向进度条效果的加载器，可以用作加载、进度提示。&lt;/p&gt;
&lt;h2 id=&quot;ICONS&quot;&gt;&lt;a href=&quot;#ICONS&quot; class=&quot;headerlink&quot; title=&quot;ICONS&quot;&gt;&lt;/a&gt;ICONS&lt;/h2&gt;&lt;h3 id=&quot;Vue-Feather-Icons&quot;&gt;&lt;a href=&quot;#Vue-Feather-Icons&quot; class=&quot;headerlink&quot; title=&quot;Vue Feather Icons&quot;&gt;&lt;/a&gt;Vue Feather Icons&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/egoist/vue-feather-icons&quot;&gt;https://github.com/egoist/vue-feather-icons&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1479c50e36.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Feather 是一套面向设计师和开发者的开源图标库，是一个简单漂亮的开源图标库。每个图标都设计在一个24×24的网格上，强调简单，一致性和易读性。很多大厂出品的前端框架都内置了这款可以免费商用的图标。它的特点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一枚图标都是按照统一标准进行设计，具有完美像素对齐；&lt;/li&gt;
&lt;li&gt;设计风格一致，完胜那些拼凑混搭的图标库；&lt;/li&gt;
&lt;li&gt;覆盖多种开发场景的支持，对开发者非常友好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Vue-Awesome&quot;&gt;&lt;a href=&quot;#Vue-Awesome&quot; class=&quot;headerlink&quot; title=&quot;Vue Awesome&quot;&gt;&lt;/a&gt;Vue Awesome&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/Justineo/vue-awesome&quot;&gt;https://github.com/Justineo/vue-awesome&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e1479ec5062.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Font Awesome是一套流行的图标字体库，我们在实际开发的过程中会经常遇到需要使用图标的场景，对于一些常用的图标，不用设计师，我们可以直接在Font Awesome中找到并且使用。个人感觉Font Awesome的图标还是很齐全的，绝大多数的图标它都包含了，而且支持各种框架。&lt;/p&gt;
&lt;h2 id=&quot;Charts&quot;&gt;&lt;a href=&quot;#Charts&quot; class=&quot;headerlink&quot; title=&quot;Charts&quot;&gt;&lt;/a&gt;Charts&lt;/h2&gt;&lt;h3 id=&quot;Vue-Apexcharts&quot;&gt;&lt;a href=&quot;#Vue-Apexcharts&quot; class=&quot;headerlink&quot; title=&quot;Vue Apexcharts&quot;&gt;&lt;/a&gt;Vue Apexcharts&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/apexcharts/vue-apexcharts&quot;&gt;https://github.com/apexcharts/vue-apexcharts&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e147d0d81e5.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Apexcharts 是一个现代的 JavaScript 图表库/可通过简单的 API 构建交互式图表和可视化。Vue Apexcharts 是 ApexCharts 的 Vue.js 组件。&lt;/p&gt;
&lt;h3 id=&quot;Vue-Echarts&quot;&gt;&lt;a href=&quot;#Vue-Echarts&quot; class=&quot;headerlink&quot; title=&quot;Vue Echarts&quot;&gt;&lt;/a&gt;Vue Echarts&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/Justineo/vue-echarts&quot;&gt;https://github.com/Justineo/vue-echarts&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e147d277d5d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;vue-echarts 是基于 echarts 封装实现的一个组件库，直接按照正常的组件引用方式，安装引用即可，具体的安装和引用读者可以直接阅读 vue-echarts 技术文档。&lt;/p&gt;
&lt;h3 id=&quot;Vue-Chartjs&quot;&gt;&lt;a href=&quot;#Vue-Chartjs&quot; class=&quot;headerlink&quot; title=&quot;Vue Chartjs&quot;&gt;&lt;/a&gt;Vue Chartjs&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/apertureless/vue-chartjs&quot;&gt;https://github.com/apertureless/vue-chartjs&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e147fcc7e6e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;vue-chartjs 是一个 Vue 对于 Chart.js 的封装，让用户可以在Vue中轻松使用Chart.js，很简单的创建可复用的图表组件，非常适合需要简单的图表并尽可能快地运行的人。vue-chartjs抽象了基本逻辑，同时也暴露了Chart.js对象，让用户获得最大的灵活性。&lt;/p&gt;
&lt;h3 id=&quot;V-Charts&quot;&gt;&lt;a href=&quot;#V-Charts&quot; class=&quot;headerlink&quot; title=&quot;V-Charts&quot;&gt;&lt;/a&gt;V-Charts&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/ElemeFE/v-charts&quot;&gt;https://github.com/ElemeFE/v-charts&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e147ff76e55.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;V-Charts 是基于 Vue2.0 和 Echarts 封装的图标组件，只需要统一提供一种对前后端都友好的数据格式设置简单的配置项，就可以生成常见的图表。&lt;/p&gt;
&lt;h2 id=&quot;时间&quot;&gt;&lt;a href=&quot;#时间&quot; class=&quot;headerlink&quot; title=&quot;时间&quot;&gt;&lt;/a&gt;时间&lt;/h2&gt;&lt;h3 id=&quot;Vue-Timer-Hook&quot;&gt;&lt;a href=&quot;#Vue-Timer-Hook&quot; class=&quot;headerlink&quot; title=&quot;Vue Timer Hook&quot;&gt;&lt;/a&gt;Vue Timer Hook&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/riderx/vue-timer-hook&quot;&gt;https://github.com/riderx/vue-timer-hook&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e14802ce107.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue3 计时器模块的灵感来自 react-timer-hook。此外，它是一个自定义的钩子，用来处理 vue 3 组件中的定时器、秒表和时间逻辑/状态。&lt;/p&gt;
&lt;h3 id=&quot;Vue-Horizontal-Timeline&quot;&gt;&lt;a href=&quot;#Vue-Horizontal-Timeline&quot; class=&quot;headerlink&quot; title=&quot;Vue Horizontal Timeline&quot;&gt;&lt;/a&gt;Vue Horizontal Timeline&lt;/h3&gt;&lt;p&gt;地址：&lt;a href=&quot;https://github.com/guastallaigor/vue-horizontal-timeline&quot;&gt;https://github.com/guastallaigor/vue-horizontal-timeline&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/27/62e14809a0929.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue Horizontal Timeline 是一个用 Vue.js 制作的简单的水平时间线组件。&lt;/p&gt;
&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://medium.com/js-dojo/20-useful-vue-js-components-2022-3bf9fbe5b556&quot;&gt;20+ Useful Vue JS Components</summary>
        
      
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 键入评论功能</title>
    <link href="https://fe32.top/articles/hexo1611/"/>
    <id>https://fe32.top/articles/hexo1611/</id>
    <published>2022-07-24T14:24:28.000Z</published>
    <updated>2023-06-27T14:39:00.790Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;注意：本站的评论系统已从 &lt;a href=&quot;https://valine.js.org/&quot;&gt;Valine&lt;/a&gt; 更换成 &lt;a href=&quot;https://twikoo.js.org/&quot;&gt;Twikoo&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;br&gt;&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，路径为【BlogRoot/_config.yml】。&lt;br&gt;&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，路径为【BlogRoot/_config.butterfly.yml】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;若你的主题版本大于 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.0.0&quot;&gt;v4.0.0&lt;/a&gt;，应该留意到，与 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 版本相比，各评论的配置项已经变的更为精简，具体请参考你所使用主题版本的配置项，只需要将目标信息，填入评论的配置项就行，这里主要推荐使用 Twikoo。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;基于 Hexo 键入搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;基于 Hexo 键入分享功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1610/&quot;&gt;基于 Hexo 键入在线聊天功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608/&quot;&gt;Hexo + Butterfly 自定义右键菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1613/&quot;&gt;请收下这只可爱的猫咪吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;通用配置（一定要配置）&quot;&gt;&lt;a href=&quot;#通用配置（一定要配置）&quot; class=&quot;headerlink&quot; title=&quot;通用配置（一定要配置）&quot;&gt;&lt;/a&gt;通用配置（一定要配置）&lt;/h2&gt;&lt;p&gt;从3.0.0开始，开启评论需要在&lt;code&gt;comments-use&lt;/code&gt;中填写你需要的评论，这里参照你主题版本的格式写。&lt;/p&gt;
&lt;p&gt;支持双评论显示，只需要配置两个评论（第一个为默认显示）&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;comments:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Up to two comments system, the first will be shown as default&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;use:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# - Disqus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# - Valine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Twikoo&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 这里按照你主题版本的格式写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;text:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Display the comment name next to the button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# lazyload: The comment system will be load when comment element enters the browser&#39;s viewport.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# If you set it to true, the comment count will be invalid&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;lazyload:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;count:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Display comment count in post&#39;s top_img&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_post_count:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Display comment count in Home Page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;参数&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;use&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;使用的评论（请注意，最多支持两个，如果不需要请留空） &lt;br&gt;注意：双评论不能是 Disqus 和 Disqusjs 一起，由于其共用同一个 ID，会出错&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;text&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否显示评论服务商的名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;lazyload&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否为评论开启lazyload，开启后，只有滚动到评论位置时才会加载评论所需要的资源（开启 lazyload 后，评论数将不显示）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;count&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否在文章顶部显示评论数&lt;br&gt; livere、Giscus 和 utterances 不支持评论数显示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;card_post_count&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否在首页文章卡片显示评论数&lt;br&gt;gitalk、livere 、Giscus 和 utterances 不支持评论数显示&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;Twikoo（推荐）&quot;&gt;&lt;a href=&quot;#Twikoo（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Twikoo（推荐）&quot;&gt;&lt;/a&gt;Twikoo（推荐）&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Twikoo 是一个简洁、安全、免费的静态网站评论系统，基于腾讯云开发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;效果预览&quot;&gt;&lt;a href=&quot;#效果预览&quot; class=&quot;headerlink&quot; title=&quot;效果预览&quot;&gt;&lt;/a&gt;效果预览&lt;/h3&gt;&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba463b6ff.jpg&quot; alt=&quot;效果01.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba4c8d1b4.jpg&quot; alt=&quot;效果02.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba511d535.jpg&quot; alt=&quot;效果03.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba52ab759.jpg&quot; alt=&quot;效果04.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba541c6ff.jpg&quot; alt=&quot;效果-m-01.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba56df910.jpg&quot; alt=&quot;效果-m-02.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba5a3748a.jpg&quot; alt=&quot;msg-01.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba5e2c564.jpg&quot; alt=&quot;msg-02.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba62459e2.jpg&quot; alt=&quot;msg-03.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;

&lt;h3 id=&quot;特色&quot;&gt;&lt;a href=&quot;#特色&quot; class=&quot;headerlink&quot; title=&quot;特色&quot;&gt;&lt;/a&gt;特色&lt;/h3&gt;&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;简单&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;易用&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;安全&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--4&quot;&gt;即时&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--5&quot;&gt;个性&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--6&quot;&gt;便捷管理&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--7&quot;&gt;缺点&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;ul&gt;
&lt;li&gt;免费搭建（使用云开发作为评论后台，每个用户均长期享受1个免费的标准型基础版1资源套餐）&lt;/li&gt;
&lt;li&gt;简单部署（支持一键部署、手动部署、命令行部署）&lt;/li&gt;
&lt;/ul&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;ul&gt;
&lt;li&gt;支持回复、点赞&lt;/li&gt;
&lt;li&gt;无需额外适配，支持搭配浅色主题与深色主题使用&lt;/li&gt;
&lt;li&gt;支持 API 调用，批量获取文章评论数、最新评论&lt;/li&gt;
&lt;li&gt;访客在昵称栏输入 QQ 号，会自动补全 QQ 昵称和 QQ 邮箱&lt;/li&gt;
&lt;li&gt;访客填写数字 QQ 邮箱，会使用 QQ 头像作为评论头像&lt;/li&gt;
&lt;li&gt;支持评论框粘贴图片（可禁用）&lt;/li&gt;
&lt;li&gt;支持插入图片（可禁用）&lt;/li&gt;
&lt;li&gt;支持去不图床、云开发图床&lt;/li&gt;
&lt;li&gt;支持插入表情（可禁用）&lt;/li&gt;
&lt;li&gt;支持 Ctrl + Enter 快捷回复&lt;/li&gt;
&lt;li&gt;评论框内容实时保存草稿，刷新不会丢失&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twikoo.js.org/faq.html#%E5%A6%82%E4%BD%95%E5%90%AF%E7%94%A8-katex-%E6%94%AF%E6%8C%81&quot;&gt;支持 Katex 公式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;支持按语言的代码高亮&lt;/li&gt;
&lt;/ul&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;ul&gt;
&lt;li&gt;隐私信息安全（通过云函数控制敏感字段（邮箱、IP、环境配置等）不会泄露）&lt;/li&gt;
&lt;li&gt;支持 Akismet 垃圾评论检测（需自行注册 &lt;a href=&quot;https://akismet.com/&quot;&gt;akismet.com&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;支持腾讯云内容安全垃圾评论检测（需自行注册 &lt;a href=&quot;https://console.cloud.tencent.com/cms/text/overview&quot;&gt;腾讯云内容安全&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;支持人工审核模式&lt;/li&gt;
&lt;li&gt;防 XSS 注入&lt;/li&gt;
&lt;li&gt;支持限制每个 IP 每 10 分钟最多发表多少条评论&lt;/li&gt;
&lt;/ul&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--4&quot;&gt;&lt;ul&gt;
&lt;li&gt;支持邮件提醒（访客和博主）&lt;/li&gt;
&lt;li&gt;支持微信提醒（仅针对博主，基于 &lt;a href=&quot;https://sc.ftqq.com/3.version&quot;&gt;Server酱&lt;/a&gt;，需自行注册）&lt;/li&gt;
&lt;li&gt;支持 QQ 提醒（仅针对博主，基于 &lt;a href=&quot;https://qmsg.zendee.cn/&quot;&gt;Qmsg酱&lt;/a&gt;，需自行注册）&lt;/li&gt;
&lt;li&gt;支持 QQ 提醒（针对博主QQ或者群，基于 &lt;a href=&quot;https://docs.go-cqhttp.org/&quot;&gt;go-cqhttp&lt;/a&gt;，需自己有服务器）&lt;/li&gt;
&lt;/ul&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--5&quot;&gt;&lt;ul&gt;
&lt;li&gt;支持自定义评论框背景图片&lt;/li&gt;
&lt;li&gt;支持自定义“博主”标识文字&lt;/li&gt;
&lt;li&gt;支持自定义通知邮件模板&lt;/li&gt;
&lt;li&gt;支持自定义评论框提示信息（placeholder）&lt;/li&gt;
&lt;li&gt;支持自定义表情列表（兼容 &lt;a href=&quot;https://cdn.jsdelivr.net/npm/owo@1.0.2/demo/OwO.json&quot;&gt;OwO 的数据格式&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;支持自定义【昵称】【邮箱】【网址】必填 / 选填&lt;/li&gt;
&lt;li&gt;支持自定义代码高亮主题&lt;/li&gt;
&lt;/ul&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--6&quot;&gt;&lt;ul&gt;
&lt;li&gt;内嵌式管理面板，通过密码登录，可方便地查看评论、隐藏评论、删除评论、修改配置&lt;/li&gt;
&lt;li&gt;支持隐藏管理入口，通过输入暗号显示&lt;/li&gt;
&lt;li&gt;支持从 Valine、Artalk、Disqus 导入评论&lt;/li&gt;
&lt;/ul&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--7&quot;&gt;&lt;ul&gt;
&lt;li&gt;国外请求较慢&lt;/li&gt;
&lt;li&gt;部署需要实名认证&lt;/li&gt;
&lt;li&gt;不支持 IE&lt;/li&gt;
&lt;/ul&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;本站是用 &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel&lt;/a&gt; +  &lt;a href=&quot;https://www.mongodb.com/&quot;&gt;MongoDB&lt;/a&gt; 方案搭建 Twikoo 评论系统。&lt;br&gt;其他几种部署方式这里不做讲解，详情请参考：&lt;a href=&quot;https://twikoo.js.org/&quot;&gt;Twikoo 文档&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Vercel-部署&quot;&gt;&lt;a href=&quot;#Vercel-部署&quot; class=&quot;headerlink&quot; title=&quot;Vercel 部署&quot;&gt;&lt;/a&gt;Vercel 部署&lt;/h3&gt;&lt;h4 id=&quot;视频教程&quot;&gt;&lt;a href=&quot;#视频教程&quot; class=&quot;headerlink&quot; title=&quot;视频教程&quot;&gt;&lt;/a&gt;视频教程&lt;/h4&gt;&lt;div class=&quot;bilibili&quot;&gt;
    &lt;iframe src=&quot;//player.bilibili.com/player.html?aid=4750943&amp;amp;bvid=BV1Fh411e7ZH&amp;amp;cid=306443610&amp;amp;page=1&amp;amp;danmaku=0&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;
&lt;/div&gt;

&lt;h4 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;申请 &lt;a href=&quot;https://www.mongodb.com/cloud/atlas/register&quot;&gt;MongoDB&lt;/a&gt; 账号&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d6e7ce957.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d6efb8738.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
填好图上所需内容，点击【Create your Atlas account】。&lt;/li&gt;
&lt;li&gt;创建免费 MongoDB 数据库，区域推荐选择 【AWS / N. Virginia (us-east-1)】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d7f1986b9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d7fac54ff.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d7fe363b6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;创建数据库用户（请记住这里的 password，后面步骤需要使用到），按步骤设置允许所有 IP（0.0.0.0/0）地址的连接（&lt;a href=&quot;https://vercel.com/support/articles/how-to-allowlist-deployment-ip-address&quot;&gt;为什么？&lt;/a&gt;），填完信息后，点击【Finish and Close】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d7ff47352.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d804d52c2.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 Clusters 页面点击 【Connect】，选择【Connect your appliction】，记录数据库连接字符串，请将连接字符串中的&lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt;修改为第三步中数据库密码，留着备用（将在第7步中用到）。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d807f00b7.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d80cbc69f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e4d8121898f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;申请 &lt;a href=&quot;https://vercel.com/signup&quot;&gt;Vercel&lt;/a&gt; 账号，可以选择 Github 账号来同步&lt;/li&gt;
&lt;li&gt;点击 &lt;a href=&quot;https://vercel.com/import/project?template=https://github.com/imaegoo/twikoo/tree/main/src/server/vercel-min&quot;&gt;此链接&lt;/a&gt; 将 Twikoo 一键部署到 Vercel &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e514b5559ac.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
点击 Create，等待 Deploy完成，可看到如下效果：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e514b90c6fb.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;进入【Settings】-&amp;gt;【Environment Variables】，添加环境变量【MONGODB_URI】，值为第 4 步的数据库连接字符串&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e514800dc82.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;进入【Deployments】，然后在任意一项后面点击更多（三个点），然后点击【Redeploy】，最后点击下面的【Redeploy】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e5148248164.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e5168a4d321.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;进入【Overview】，点击【Domains】下方的链接，如果环境配置正确，可以看到 “Twikoo 云函数运行正常” 的提示&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e516ba54ee8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
Vercel Domains（包含 https:// 前缀，例如 &lt;a href=&quot;https://xxx.vercel.app/&quot;&gt;https://xxx.vercel.app&lt;/a&gt;）即为您的环境 id&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/30/62e516dbde75f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在主题中写入 Twikoo 配置项。&lt;br&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中修改以下内容，将你的环境id填入对应位置&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Twikoo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://github.com/imaegoo/twikoo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;twikoo:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;envId:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://xxxxxx.vercel.app/&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;region:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;visitor:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;参数&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;envId&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;环境id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;region&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;环境地域，默认为 ap-shanghai，如果您的环境地域不是上海，需传此参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;visitor&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否显示文章閲读数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;option&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;可选配置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;开启 visitor 后，文章页的访问人数将改为 Twikoo 提供，而不是 不蒜子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到效果，点击评论区输入框下方的齿轮状按钮，设置你的管理密码，具体配置信息这里不做讲解，按照注解进行配置即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;menhera-表情样式优化&quot;&gt;&lt;a href=&quot;#menhera-表情样式优化&quot; class=&quot;headerlink&quot; title=&quot;menhera 表情样式优化&quot;&gt;&lt;/a&gt;menhera 表情样式优化&lt;/h3&gt;&lt;p&gt;因为 twikoo 的默认宽度是 3em ， 对于 menhera-chan 等其他长宽较大的表情根本无法看清，所以将它pc端评论后的表情加载设置成300px，设屏宽小于768px的，让它继承继承父元素的 100%宽 - 30px ，30px是为了与右侧有一段细微间隔，下图可以看到手机端的时候，表情和盒子最右侧是有一定距离的。&lt;/p&gt;
&lt;p&gt;对于设屏宽小于768px，选择 menhera-chan 表情时，宽度太小，看不清图片，所以这里将宽度调整为设备宽的 50% 宽 - 10px。其他表情保持不变，只对 menhera-chan 表情做出改善。&lt;/p&gt;
&lt;p&gt;若你的自定义表情中有其他跟 menhera-chan表情 类似的需求，可照着下面的 css 去改写，增加对应的类或者属性即可。&lt;/p&gt;
&lt;p&gt;将以下代码复制到&lt;code&gt;custom.css&lt;/code&gt;即可。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Twikoo 评论样式 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.tk-input&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.el-textarea__inner&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;min-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;120px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#twikoo&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-body&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#twikoo&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-body&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-items&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(1)&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#twikoo&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-body&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-items&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(4)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;360px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#twikoo&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-items&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[title|=menhera]&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.tk-comment&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.tk-owo-emotion&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt*=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.tk-comment&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemoji&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt|=menhera]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.tk-comment&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.tk-owo-emotion&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt*=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: block &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;768px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.tk-comment&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemoji&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt|=menhera]&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.tk-comment&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.tk-owo-emotion&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt*=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;) &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;) &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.OwO&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-body&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-items-image&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.OwO-item&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[title*=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;box-sizing&lt;/span&gt;: border-box;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;修改前的效果：&lt;/p&gt;
&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/21/6301dd68dce0b.jpg&quot; alt=&quot;pc端 menher表情渲染效果.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/21/6301dd683ed04.jpg&quot; alt=&quot;pc端 选择menher表情.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/21/6301dd698b0a2.jpg&quot; alt=&quot;手机端 menher表情渲染效果.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/21/6301de6804542.jpg&quot; alt=&quot;手机端 选择menher表情.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;

&lt;p&gt;修改后的效果：&lt;/p&gt;
&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/21/6301e0b6cca39.jpg&quot; alt=&quot;pc端 menher表情渲染效果.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba52ab759.jpg&quot; alt=&quot;pc端 选择menher表情.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/29/62e2ba56df910.jpg&quot; alt=&quot;手机端 menher表情渲染效果.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/21/6301dd6843f4e.jpg&quot; alt=&quot;手机端 选择menher表情.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;

&lt;h3 id=&quot;部署时遇到的常见错误&quot;&gt;&lt;a href=&quot;#部署时遇到的常见错误&quot; class=&quot;headerlink&quot; title=&quot;部署时遇到的常见错误&quot;&gt;&lt;/a&gt;部署时遇到的常见错误&lt;/h3&gt;&lt;p&gt;请参考 &lt;a href=&quot;https://fe32.top/articles/hexo1612&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt; 一文中关于【Twikoo】部分提及的内容。&lt;/p&gt;
&lt;h2 id=&quot;Disqus&quot;&gt;&lt;a href=&quot;#Disqus&quot; class=&quot;headerlink&quot; title=&quot;Disqus&quot;&gt;&lt;/a&gt;Disqus&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;前往 &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus官网&lt;/a&gt; 注册账号&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e61fb8a5141.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;登入后点击首页的【GET STARTED】，选择【I want to install Disqus on my site】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e61fba9a17c.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入下图中所需信息：Websit Name，Category，Language，点击【Create Site】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e61fbd21052.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;参数&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Websit Name&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;short name，且是唯一，像我是设置的 tzy1997-blog，short name 在配置评论时需要用到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Category&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;类别，自行选择&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Language&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;语言，自行选择&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;【Select Plan】选择 Basic&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e61fbfc3b95.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;接下来在【Configure Disqus】输入一些配置信息&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e61fc20599c.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在【Setup Mederration】选择一个模式就好，最后点击【Complete Setup】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e61fc411d22.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中修改以下内容，将你在第3步输入的【Websit Name】填入到 shortname&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# disqus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://disqus.com/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;disqus:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;shortname:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;tzy1997-blog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到如下效果：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e61fc6da84d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Disqusjs&quot;&gt;&lt;a href=&quot;#Disqusjs&quot; class=&quot;headerlink&quot; title=&quot;Disqusjs&quot;&gt;&lt;/a&gt;Disqusjs&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;与Disqus一样，但由于Disqus在中国大陆无法访问， 使用Disqusjs可以在无法访问Disqus时显示评论。具体可参考&lt;a href=&quot;https://github.com/SukkaW/DisqusJS&quot;&gt;Disqusjs&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;配置 Disqus Application，在 &lt;a href=&quot;https://disqus.com/api/applications/&quot;&gt;Disqus API Application&lt;/a&gt; 处注册一个 Application。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e640c320306.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e640c4f3174.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;点击进入新创建的 Application，获取你的 API Key（公钥）。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e640c53bedf.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 Application 的 Settings 页面设置你使用 DisqusJS 时的域名。Disqus API 会检查 API 请求的 Referrer 和 Origin。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e640c547760.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中配置以下内容：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Alternative Disqus - Render comments with Disqus API&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# DisqusJS 評論系統，可以實現在網路審查地區載入 Disqus 評論列表，兼容原版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://github.com/SukkaW/DisqusJS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;disqusjs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;shortname:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;siteName:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;apikey:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;api:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://disqus.skk.moe/disqus/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;nocomment:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# display when a blog post or an article has no comment attached&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;admin:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;adminLabel:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
各参数解释如下：&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;参数&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;shortname&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;你的 Disqus Forum 的 shortname，你可以在 &lt;a href=&quot;https://disqus.com/admin/settings/general/&quot;&gt;Disqus Admin - Settings - General - Shortname&lt;/a&gt; 获取你的 shortname&lt;br&gt;  必须，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;siteName&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;你站点的名称，将会显示在「评论基础模式」的 header 中；该配置应该和 &lt;a href=&quot;https://disqus.com/admin/settings/general/&quot;&gt;Disqus Admin - Settings - General - Website Name&lt;/a&gt; 一致 &lt;br&gt; 非必须，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;apikey&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;DisqusJS 向 API 发起请求时使用的 API Key，你应该在配置 Disqus Application 时获取了 API Key。&lt;br&gt; DisqusJS 支持填入一个 包含多个 API Key 的数组，每次请求时会随机使用其中一个；如果你只填入一个 API Key，可以填入 string 或 Array。&lt;br&gt; 必填，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;api&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;DisqusJS 请求的 API Endpoint，通常情况下你应该配置一个 Disqus API 的反代并填入反代的地址。你也可以直接使用 DISQUS 官方 API 的 Endpoint &lt;code&gt;https://disqus.com/api/&lt;/code&gt;，或是使用我搭建的 Disqus API 反代 Endpoint &lt;code&gt;https://disqus.skk.moe/disqus/&lt;/code&gt;。如有必要可以阅读关于搭建反代的 &lt;a href=&quot;https://github.com/SukkaW/DisqusJS#%E8%B0%83%E8%AF%95%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8--%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3&quot;&gt;相关内容&lt;/a&gt;&lt;br&gt; 建议，默认值为 &lt;a href=&quot;https://disqus.skk.moe/disqus/&quot;&gt;https://disqus.skk.moe/disqus/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;nocomment&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;没有评论时的提示语（对应 Disqus Admin - Settings - Community - Comment Count Link - Zero comments）&lt;br&gt;非必须，默认值为 这里冷冷清清的，一条评论都没有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;admin&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;你的站点的 Disqus Moderator 的用户名（也就是你的用户名）。你可以在 &lt;a href=&quot;https://disqus.com/home/settings/account/&quot;&gt;Disqus - Settings - Account - Username&lt;/a&gt; 获取你的 Username &lt;br&gt; 非必须，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;adminLabel&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;你想显示在 Disqus Moderator Badge 中的文字。该配置应和 &lt;a href=&quot;https://disqus.com/admin/settings/community/&quot;&gt;Disqus Admin - Settings - Community - Moderator Badge Text&lt;/a&gt; 相同&lt;br&gt; 非必须，无默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到如下效果：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e640c73cc13.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Livere&quot;&gt;&lt;a href=&quot;#Livere&quot; class=&quot;headerlink&quot; title=&quot;Livere&quot;&gt;&lt;/a&gt;Livere&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;前往 &lt;a href=&quot;https://livere.com/&quot;&gt;来必力官网&lt;/a&gt; 注册账号。&lt;/li&gt;
&lt;li&gt;进入管理页面。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e65f8ee30f8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;选择默认的免费 City 版，点击【现在安装】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e660384879d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入基本的信息，点击【申请获取代码】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e6608c87737.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;获取【data-uid】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e6921de7f93.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中配置以下内容：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# livere (來必力)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://www.livere.com/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;livere:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;uid:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;这里填你的uid&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到如下效果：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e6928a4e7a8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;可以在管理界面查看 数据分析，进行评论管理，评论提醒等。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/31/62e6931b9b9e3.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Gitalk&quot;&gt;&lt;a href=&quot;#Gitalk&quot; class=&quot;headerlink&quot; title=&quot;Gitalk&quot;&gt;&lt;/a&gt;Gitalk&lt;/h2&gt;&lt;p&gt;Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。特性如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 GitHub 登录&lt;/li&gt;
&lt;li&gt;支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]&lt;/li&gt;
&lt;li&gt;支持个人或组织&lt;/li&gt;
&lt;li&gt;无干扰模式（设置 distractionFreeMode 为 true 开启）&lt;/li&gt;
&lt;li&gt;快捷键提交评论 （cmd|ctrl + enter）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先，您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论。&lt;/p&gt;
&lt;p&gt;然后需要点击右上角头像【Settings】-&amp;gt;【Developer settings】-&amp;gt;【OAuth Apps】-&amp;gt;【New OAuth App】 创建【GitHub Application】进行基本配置 ，找不到地方直接 &lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;点击这里申请&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/03/62ea878812026.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;【Homepage URL】填写博客的仓库地址，例如我的填写&lt;code&gt;https://tzy13755126023.github.io&lt;/code&gt;。&lt;br&gt;【Authorization callback URL】填写当前使用的域名，例如我的填写&lt;code&gt;https://fe32.top&lt;/code&gt;，没有域名，跟【Homepage URL】保持一致即可。&lt;/p&gt;
&lt;p&gt;然后可看到目标client_id， 继续点击【Generate a new client secret】即可得到目标【client_secret】。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/03/62ea878812026.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;大致的基本信息如下图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/03/62ea878a8e6fe.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中配置以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# gitalk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://github.com/gitalk/gitalk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;gitalk:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;client_id:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GitHub Application Client ID&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;client_secret:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GitHub Application Client Secret&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;repo:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GitHub repo&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;owner:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GitHub repo owner&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;admin:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GitHub repo owner and collaborators, only these guys can initialize github issues&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;language:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;en&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# en, zh-CN, zh-TW, es-ES, fr, ru&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;perPage:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Pagination size, with maximum 100.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;distractionFreeMode:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Facebook-like distraction free mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;pagerDirection:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Comment sorting direction, available values are last and first.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;createIssueManually:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Gitalk will create a corresponding github issue for your every single page automatically&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ea9fe2957cd.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;详情可参考 &lt;a href=&quot;https://github.com/gitalk/gitalk/blob/master/readme-cn.md&quot;&gt;Gitalk Readme&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Valine&quot;&gt;&lt;a href=&quot;#Valine&quot; class=&quot;headerlink&quot; title=&quot;Valine&quot;&gt;&lt;/a&gt;Valine&lt;/h2&gt;&lt;p&gt;Valine 诞生于2017年8月7日，是一款基于LeanCloud的快速、简洁且高效的无后端评论系统。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于 Valine 的国际版共享域名将于 2022 年 8 月 1 日起不再向中国大陆的最终用户提供服务，国际版共享域名仅服务于海外用户。本站已弃用 Valine ，改为 Twikoo。如果你更喜欢 Valine 的风格，你可以使用它的国区版。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;参考教程&quot;&gt;&lt;a href=&quot;#参考教程&quot; class=&quot;headerlink&quot; title=&quot;参考教程&quot;&gt;&lt;/a&gt;参考教程&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://valine.js.org/&quot;&gt;Valine 文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.zhaojun.im/hexo-valine-admin/&quot;&gt;Hexo 优化 — Valine 扩展之邮件通知&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.hclonely.com/posts/409d3090/&quot;&gt;Valine 添加验证码、博主标签及评论微信、QQ 通知&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/08/26/84d3e2911b8ec.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/08/26/24353a0e2da4f.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/987c04fdd05f6.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/396f32b981353.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/72321b1f63e2c.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/564b64b674298.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;详情可参考 &lt;a href=&quot;https://fe32.top/articles/hexo1606&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;，其中有提到过 Valine。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Waline&quot;&gt;&lt;a href=&quot;#Waline&quot; class=&quot;headerlink&quot; title=&quot;Waline&quot;&gt;&lt;/a&gt;Waline&lt;/h2&gt;&lt;p&gt;Waline 是一款从 Valine 衍生的带后端评论系统。可以将 Waline 等价成 With backend Valine。&lt;/p&gt;
&lt;p&gt;具体配置可参考 &lt;a href=&quot;https://waline.js.org/&quot;&gt;waline 文档&lt;/a&gt;，这里也不做详细讲解。&lt;/p&gt;
&lt;p&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中配置以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# waline - A simple comment system with backend support fork from Valine&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://waline.js.org/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;waline:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;serverURL:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Waline server address url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;avatar:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;monsterid&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;emojiCDN:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# emoji CDN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;bg:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# waline background&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;visitor:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;开启 pageview 后，文章页的访问人数将改为 Waline 提供，而不是 不蒜子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Utterances&quot;&gt;&lt;a href=&quot;#Utterances&quot; class=&quot;headerlink&quot; title=&quot;Utterances&quot;&gt;&lt;/a&gt;Utterances&lt;/h2&gt;&lt;p&gt;与 Gitalk 一样，基于 GitHub issues 的评论工具。相对于 Gitalk，其相对需要权限较少。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;详细配置可参考 &lt;a href=&quot;https://utteranc.es/&quot;&gt;Utterances&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中配置以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# utterances&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://utteranc.es/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;utterances:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;repo:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Issue Mapping: pathname/url/title/og:title&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;issue_term:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;pathname&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Theme: github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;light_theme:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;github-light&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;dark_theme:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;photon-dark&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/08/04/62ea9fe0e51b4.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Giscus&quot;&gt;&lt;a href=&quot;#Giscus&quot; class=&quot;headerlink&quot; title=&quot;Giscus&quot;&gt;&lt;/a&gt;Giscus&lt;/h2&gt;&lt;p&gt;一个基于 GitHub Discussions 的评论，详细配置请参考 &lt;a href=&quot;https://giscus.app/zh-TW&quot;&gt;Giscus 文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中配置以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Giscus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://giscus.app/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;giscus:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;repo:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;repo_id:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;category_id:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;theme:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;light:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;light&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;dark:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;dark&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot;</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 键入在线聊天功能</title>
    <link href="https://fe32.top/articles/hexo1610/"/>
    <id>https://fe32.top/articles/hexo1610/</id>
    <published>2022-07-17T05:44:49.000Z</published>
    <updated>2023-06-27T14:39:00.796Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;br&gt;&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，路径为【BlogRoot/_config.yml】。&lt;br&gt;&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，路径为【BlogRoot/_config.butterfly.yml】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;基于 Hexo 键入搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;基于 Hexo 键入分享功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608/&quot;&gt;Hexo + Butterfly 自定义右键菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1613/&quot;&gt;请收下这只可爱的猫咪吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;本站效果&quot;&gt;&lt;a href=&quot;#本站效果&quot; class=&quot;headerlink&quot; title=&quot;本站效果&quot;&gt;&lt;/a&gt;本站效果&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3b90696c98.webp&quot; alt=&quot;本站用的是crisp，效果仅做参考&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;本站用的是crisp，效果仅做参考&lt;/span&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;从3.0开始，Butterfly主题内置了多种在线聊天工具。你可以选择开启一种，方便你与访客的交流。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;通用设置&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;crisp（本站所用）&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;chatra&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--4&quot;&gt;tidio&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--5&quot;&gt;Gitter&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--6&quot;&gt;daovoice&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;p&gt;关于这些在线聊天的工具，主题提供了一个按钮可以打开/关闭聊天窗口，这个聊天按钮将会出现在右下角里。你只需要把&lt;code&gt;chat_btn&lt;/code&gt;打开就行。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;chat_btn&lt;/code&gt;设置成&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Chat Button [recommend]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# It will create a button in the bottom right corner of website, and hide the origin button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;chat_btn:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3befac1c5c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为了不影响访客的体验，主题提供一个&lt;code&gt;chat_hide_show&lt;/code&gt;配置，设为&lt;code&gt;true&lt;/code&gt;后，使用工具提供的按钮时，只有向上滚动才会显示聊天按钮，向下滚动时会隐藏按钮。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;chat_hide_show&lt;/code&gt;设置成&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;chat_hide_show:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;如果使用工具自带的聊天按钮，按钮位置可能会遮挡右下角图标，请配置&lt;code&gt;rightside-bottom&lt;/code&gt;调正右下角图标位置。&lt;/p&gt;
&lt;/blockquote&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;p&gt;打开&lt;a href=&quot;https://crisp.chat/zh/&quot;&gt;crisp官网&lt;/a&gt;并注册账号。找到 【设置】-&amp;gt;【网站设置】-&amp;gt;【设置说明】，找到你的网站ID。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3d2c60ed5d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;crisp&lt;/code&gt;设置成&lt;code&gt;true&lt;/code&gt;。并将你的网站ID填入&lt;code&gt;website_id&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# crisp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://crisp.chat/en/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;crisp:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;website_id:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;xxxxxxxx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/6296cf740e171.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里我发了一条内容为【你好，收到了吗？】的信息，可在PC和手机上接收消息（这里放手机效果图，毕竟电脑随身携带的可能性比较小），效果如下：&lt;/p&gt;
&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/6296cf7fedc0d.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/6296cf75896a4.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/6296d0089ff3e.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;p&gt;打开 &lt;a href=&quot;https://chatra.com/&quot;&gt;chatra官网&lt;/a&gt; 并注册账号，这里填入邮箱就好，将会收到邮件让你去初始化密码。登进去之后，找到【Settings】-&amp;gt;【Preferences】-&amp;gt; 【Public key】。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3d88d07c85.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;chatra&lt;/code&gt;设置成&lt;code&gt;true&lt;/code&gt;。并在&lt;code&gt;id&lt;/code&gt;位置填入你的&lt;code&gt;Public key&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# chatra&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://chatra.io/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;chatra:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Public&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;chatra&lt;/code&gt;的样式你可以&lt;code&gt;Chat Widget&lt;/code&gt;自行配置。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3d9048e417.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在站点中呈现的效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3db4ada345.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在网页和APP中都能收到信息，效果如下：&lt;/p&gt;
&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3dbc151517.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3dbc7c5836.webp&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--4&quot;&gt;&lt;p&gt;打开 &lt;a href=&quot;https://www.tidio.com/panel/register&quot;&gt;tidio&lt;/a&gt; 并注册账号。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d4163566e6f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;登入账号后，你可以在【Settings】-&amp;gt;【Developer】中找到【Public key】。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d417553a7a3.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;tidio&lt;/code&gt;设置成&lt;code&gt;true&lt;/code&gt;。并在&lt;code&gt;public_key&lt;/code&gt;位置填入你从&lt;code&gt;tidio&lt;/code&gt;中获得的&lt;code&gt;Public key&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# tidio&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://www.tidio.com/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;tidio:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;public_key:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Public&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;tidio&lt;/code&gt;的样式你可以找到【Settings】-&amp;gt;【Appearance】里面自行配置。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d417de40f92.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在站点中呈现的效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d41870f2749.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--5&quot;&gt;&lt;p&gt;打开 &lt;a href=&quot;https://gitter.im/&quot;&gt;Gitter官网&lt;/a&gt; 并注册账号，可以直接用 Github 账号登录。然后创建一个&lt;code&gt;community&lt;/code&gt;或者&lt;code&gt;room&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/18/62d4380bb4372.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我这里创建的是&lt;code&gt;community&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/18/62d4384de8d7f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;复制名称，将名称填入主题配置文件中。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/18/62d438933f8d3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;gitter&lt;/code&gt;设置成&lt;code&gt;true&lt;/code&gt;。并在&lt;code&gt;room&lt;/code&gt;处填入复制过来的名称。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# gitter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://gitter.im/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;gitter:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;room:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;tzy1997-blog/community&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在站点中呈现的效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/18/62d43b02e26ef.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--6&quot;&gt;&lt;p&gt;打开 &lt;a href=&quot;http://daovoice.io/&quot;&gt;daovoice&lt;/a&gt; 并注册账号。你可以在【应用设置】-&amp;gt;【安装到网站】中找到【app id】。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d4235430223.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;daovoice&lt;/code&gt;设置成&lt;code&gt;true&lt;/code&gt;。并将&lt;code&gt;app_id&lt;/code&gt;填入对应的位置即可。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# daovoice&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# http://daovoice.io/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;daovoice:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;app_id:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;4139c9af&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里我们发了一条内容为【你好~，我是Hello world!】的消息，在站点中呈现的效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d423c7410ce.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们顺便看下站点发来的消息以及发给站点的消息，效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d424994bec4.jpg&quot; alt=&quot;控制台收到站点发来的消息&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;控制台收到站点发来的消息&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d424a96265f.jpg&quot; alt=&quot;站点收到控制台发来的消息&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;站点收到控制台发来的消息&lt;/span&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 键入分享功能</title>
    <link href="https://fe32.top/articles/hexo1609/"/>
    <id>https://fe32.top/articles/hexo1609/</id>
    <published>2022-07-16T10:17:37.000Z</published>
    <updated>2023-06-27T14:39:00.783Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;br&gt;&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，路径为【BlogRoot/_config.yml】。&lt;br&gt;&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，路径为【BlogRoot/_config.butterfly.yml】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;基于 Hexo 键入搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1610/&quot;&gt;基于 Hexo 键入在线聊天功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608/&quot;&gt;Hexo + Butterfly 自定义右键菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1613/&quot;&gt;请收下这只可爱的猫咪吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：主题集成了三种分享功能，分别是&lt;code&gt;AddThis&lt;/code&gt;、&lt;code&gt;Sharejs&lt;/code&gt;、&lt;code&gt;Addtoany&lt;/code&gt;，只能从其中选择一个分享服务商。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;AddThis&quot;&gt;&lt;a href=&quot;#AddThis&quot; class=&quot;headerlink&quot; title=&quot;AddThis&quot;&gt;&lt;/a&gt;AddThis&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;前往&lt;a href=&quot;https://www.addthis.com/register?next=/dashboard#tool-config&quot;&gt;AddThis 官网&lt;/a&gt;注册账号，输入下图中信息即可。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d29950440cf.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;配置 WEBSITE TOOLS。&lt;br&gt;首先首先选择&lt;code&gt;Share Buttons&lt;/code&gt;。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d5fa93073.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
其次选择分享模型：Floating、Inline、Expanding、Image Sharing、Popup、Banner、Slider。每种模型的效果如下：&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;Floating&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;Inline&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;Expanding&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--4&quot;&gt;Image Sharing&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--5&quot;&gt;Popup&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--6&quot;&gt;Banner&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--7&quot;&gt;Slider&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d66f924b9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d678e6c24.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d69d83596.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--4&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d6f4f3cf2.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--5&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d6fea0e95.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--6&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d705bc64d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--7&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2d70d5fd0f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
点击【Continue】然后对不同的模型做一些定制化的设置。例如，选择分享平台的个数、设置按钮的大小，颜色，设置图标的颜色、模型出现的位置等。这里只对 Floating 做出举例，具体效果请看下图：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2db19750b1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
最后点击 【Activate Tool】 按钮即可。&lt;/li&gt;
&lt;li&gt;找到【Get The Code】-&amp;gt; 【Just Copy】，可以看到你的 &lt;code&gt;pub-id&lt;/code&gt;。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2dd5b41f96.jpg&quot; alt=&quot;图中的马赛克，即为你的pub-id&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;图中的马赛克，即为你的pub-id&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;addThis:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# or false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;pubid:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;你的pub-id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到效果。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2e07671db3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2df7808999.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Sharejs&quot;&gt;&lt;a href=&quot;#Sharejs&quot; class=&quot;headerlink&quot; title=&quot;Sharejs&quot;&gt;&lt;/a&gt;Sharejs&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果你不了解 &lt;a href=&quot;https://github.com/overtrue/share.js/&quot;&gt;sharejs&lt;/a&gt; ，可以看看它的文档。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;sharejs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;sites:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;facebook,twitter,wechat,weibo,qq&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#想要显示的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d2e2b0471eb.jpg&quot; alt=&quot;效果图&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;效果图&lt;/span&gt;&lt;/div&gt;

&lt;h2 id=&quot;Addtoany&quot;&gt;&lt;a href=&quot;#Addtoany&quot; class=&quot;headerlink&quot; title=&quot;Addtoany&quot;&gt;&lt;/a&gt;Addtoany&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果你不了解 &lt;a href=&quot;https://www.addtoany.com/&quot;&gt;Addtoany&lt;/a&gt; ，可以看看它的文档。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;addtoany:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;item:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3994e5611c.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot;</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Butterfly 自定义右键菜单</title>
    <link href="https://fe32.top/articles/hexo1608/"/>
    <id>https://fe32.top/articles/hexo1608/</id>
    <published>2022-07-13T15:37:41.000Z</published>
    <updated>2023-06-27T14:39:00.786Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;br&gt;&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，路径为【BlogRoot/_config.yml】。&lt;br&gt;&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，路径为【BlogRoot/_config.butterfly.yml】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;基于 Hexo 键入搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;基于 Hexo 键入分享功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1610/&quot;&gt;基于 Hexo 键入在线聊天功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1613/&quot;&gt;请收下这只可爱的猫咪吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/14/62d02b9a980bc.jpg&quot; alt=&quot;本站右键效果&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;本站右键效果&lt;/span&gt;&lt;/div&gt;

&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes&lt;/code&gt;文件夹下新建一个&lt;code&gt;right-menu&lt;/code&gt;的文件夹，在此文件夹下新建一个&lt;code&gt;index.pug&lt;/code&gt;文件。&lt;br&gt;具体位置如下图：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/14/62d02eefa3483.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
将以下代码复制到文件中。&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#rightMenu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .rightMenu-group.rightMenu-small&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-backward&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-arrow-left&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-arrow-right&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-refresh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-arrow-rotate-right&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-home&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-house&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .rightMenu-group.rightMenu-line.rightMenuOther&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link(href=&#39;/archives/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-archive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;文章归档&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link(href=&#39;/categories/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-folder-open&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;文章分类&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link(href=&#39;/tags/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;文章标签&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .rightMenu-group.rightMenu-line.rightMenuNormal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link#menu-radompage(href=&#39;/random/index.html&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-shoe-prints&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;随便逛逛&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-translate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-earth-asia&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;繁简切换&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-darkmode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-moon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;切换模式&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#rightmenu-mask&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/layout.pug&lt;/code&gt;中引入上一步中创建的&lt;code&gt;index.pug&lt;/code&gt;文件。&lt;br&gt;具体位置如下图：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/14/62d02f04293e9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/js&lt;/code&gt;文件夹下新建一个&lt;code&gt;rightMenu.js&lt;/code&gt;，将以下代码复制到文件中。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rm = {};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm.showRightMenu = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;isTrue, x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; $rightMenu = $(&lt;span class=&quot;string&quot;&gt;&#39;#rightMenu&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $rightMenu.css(&lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;, x + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;, y + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isTrue) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopMaskScroll()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $rightMenu.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $rightMenu.hide();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; rmWidth = $(&lt;span class=&quot;string&quot;&gt;&#39;#rightMenu&#39;&lt;/span&gt;).width();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; rmHeight = $(&lt;span class=&quot;string&quot;&gt;&#39;#rightMenu&#39;&lt;/span&gt;).height();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm.reloadrmSize = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rmWidth = $(&lt;span class=&quot;string&quot;&gt;&quot;#rightMenu&quot;&lt;/span&gt;).width();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rmHeight = $(&lt;span class=&quot;string&quot;&gt;&quot;#rightMenu&quot;&lt;/span&gt;).height()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.oncontextmenu = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.clientWidth &amp;gt; &lt;span class=&quot;number&quot;&gt;768&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; pageX = event.clientX + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; pageY = event.clientY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; $rightMenuNormal = $(&lt;span class=&quot;string&quot;&gt;&quot;.rightMenuNormal&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; $rightMenuOther = $(&lt;span class=&quot;string&quot;&gt;&quot;.rightMenuOther&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; $rightMenuReadmode = $(&lt;span class=&quot;string&quot;&gt;&quot;#menu-readmode&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $rightMenuNormal.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $rightMenuOther.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rm.reloadrmSize();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageX + rmWidth &amp;gt; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerWidth) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pageX -= rmWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageY + rmHeight &amp;gt; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pageY -= rmHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rm.showRightMenu(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, pageY, pageX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&#39;#rightmenu-mask&#39;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;display: flex&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeRightMenu&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rm.showRightMenu(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;#rightmenu-mask&#39;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;display: none&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stopMaskScroll&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;rightmenu-mask&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; xscroll = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;rightmenu-mask&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xscroll.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;mousewheel&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            removeRightMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;rightMenu&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; xscroll = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;rightMenu&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xscroll.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;mousewheel&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            removeRightMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@name&lt;/span&gt;:  切換模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;switchDarkMode&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeRightMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; nowMode = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;data-theme&#39;&lt;/span&gt;) === &lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;light&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nowMode === &lt;span class=&quot;string&quot;&gt;&#39;light&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        activateDarkMode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveToLocal.set(&lt;span class=&quot;string&quot;&gt;&#39;theme&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GLOBAL_CONFIG.Snackbar !== &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt; &amp;amp;&amp;amp; btf.snackbarShow(GLOBAL_CONFIG.Snackbar.day_to_night);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        activateLightMode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveToLocal.set(&lt;span class=&quot;string&quot;&gt;&#39;theme&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;light&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GLOBAL_CONFIG.Snackbar !== &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt; &amp;amp;&amp;amp; btf.snackbarShow(GLOBAL_CONFIG.Snackbar.night_to_day);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; utterancesTheme === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt; &amp;amp;&amp;amp; utterancesTheme();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; FB === &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.loadFBComment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.DISQUS &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;disqus_thread&#39;&lt;/span&gt;).children.length &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.disqusReset(), &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* eslint-disable no-undef */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;DOMContentLoaded&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    translateInitialization();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;pjax:complete&#39;&lt;/span&gt;, translateInitialization);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; translate = GLOBAL_CONFIG.translate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; snackbarData = GLOBAL_CONFIG.Snackbar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; defaultEncoding = translate.defaultEncoding; &lt;span class=&quot;comment&quot;&gt;/* 網站默認語言，1: 繁體中文, 2: 簡體中文 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; translateDelay = translate.translateDelay; &lt;span class=&quot;comment&quot;&gt;/* 延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; msgToTraditionalChinese = translate.msgToTraditionalChinese; &lt;span class=&quot;comment&quot;&gt;/* 此處可以更改為你想要顯示的文字 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; msgToSimplifiedChinese = translate.msgToSimplifiedChinese; &lt;span class=&quot;comment&quot;&gt;/* 同上，但兩處均不建議更改 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; currentEncoding = defaultEncoding;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; targetEncodingCookie = &lt;span class=&quot;string&quot;&gt;&#39;translate-chn-cht&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; targetEncoding =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    saveToLocal.get(targetEncodingCookie) === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ? defaultEncoding&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        : &lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;(saveToLocal.get(&lt;span class=&quot;string&quot;&gt;&#39;translate-chn-cht&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; translateButtonObject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isSnackbar = GLOBAL_CONFIG.Snackbar !== &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;translateText&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;txt&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (txt === &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; || txt == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentEncoding === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; targetEncoding === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Simplized(txt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentEncoding === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &amp;amp;&amp;amp; targetEncoding === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Traditionalized(txt) } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; txt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;translateBody&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fobj&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; objs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; fobj === &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;) objs = fobj.childNodes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; objs = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.childNodes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; objs.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; obj = objs.item(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;||BR|HR|&#39;&lt;/span&gt;.indexOf(&lt;span class=&quot;string&quot;&gt;&#39;|&#39;&lt;/span&gt; + obj.tagName + &lt;span class=&quot;string&quot;&gt;&#39;|&#39;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj === translateButtonObject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ) { &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj.title !== &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &amp;amp;&amp;amp; obj.title != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) { obj.title = translateText(obj.title) };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj.alt !== &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &amp;amp;&amp;amp; obj.alt != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) obj.alt = translateText(obj.alt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj.placeholder !== &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &amp;amp;&amp;amp; obj.placeholder != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) obj.placeholder = translateText(obj.placeholder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj.tagName === &lt;span class=&quot;string&quot;&gt;&#39;INPUT&#39;&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj.value !== &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj.type !== &lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            obj.type !== &lt;span class=&quot;string&quot;&gt;&#39;hidden&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ) { obj.value = translateText(obj.value) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj.nodeType === &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) obj.data = translateText(obj.data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; translateBody(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;translatePage&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (targetEncoding === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        currentEncoding = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetEncoding = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveToLocal.set(targetEncodingCookie, targetEncoding, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        translateBody();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isSnackbar) btf.snackbarShow(snackbarData.cht_to_chs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (targetEncoding === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        currentEncoding = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetEncoding = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saveToLocal.set(targetEncodingCookie, targetEncoding, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        translateBody();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isSnackbar) btf.snackbarShow(snackbarData.chs_to_cht);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JTPYStr&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FTPYStr&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Traditionalized&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;cc&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ss = JTPYStr();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; tt = FTPYStr();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; cc.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cc.charCodeAt(i) &amp;gt; &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; &amp;amp;&amp;amp; ss.indexOf(cc.charAt(i)) !== -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) { str += tt.charAt(ss.indexOf(cc.charAt(i))) } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; str += cc.charAt(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Simplized&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;cc&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ss = JTPYStr();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; tt = FTPYStr();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; cc.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cc.charCodeAt(i) &amp;gt; &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; &amp;amp;&amp;amp; tt.indexOf(cc.charAt(i)) !== -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) { str += ss.charAt(tt.indexOf(cc.charAt(i))) } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; str += cc.charAt(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;translateInitialization&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    translateButtonObject = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;menu-translate&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (translateButtonObject) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentEncoding !== targetEncoding) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(translateBody, translateDelay);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        translateButtonObject.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, translatePage, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#menu-backward&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.history.back(); });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#menu-forward&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.history.forward(); });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#menu-refresh&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.reload(); });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#menu-darkmode&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ switchDarkMode() });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#menu-home&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.href = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.origin; });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 简体繁体切换 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#menu-translate&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeRightMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    translateInitialization();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.menu-link&quot;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeRightMenu()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#rightmenu-mask&quot;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ removeRightMenu() });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#rightmenu-mask&quot;&lt;/span&gt;).contextmenu(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeRightMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css&lt;/code&gt;文件夹下新建一个&lt;code&gt;rightMenu.css&lt;/code&gt;，将以下代码复制到文件中。&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; .&lt;span class=&quot;number&quot;&gt;25rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: fit-content;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;238&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, .&lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-backdrop-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;backdrop-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#363636&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;12px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;99994&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#e3e8f7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;user-select&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, .&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#363636&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;35rem&lt;/span&gt; .&lt;span class=&quot;number&quot;&gt;3rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transition&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;3s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-line&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; dashed &lt;span class=&quot;number&quot;&gt;#4259ef23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.rightMenu-small&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;justify-content&lt;/span&gt;: space-between&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transition&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;3s&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;cursor&lt;/span&gt;: pointer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-line&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;25rem&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;25rem&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.rightMenu-line&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#6f42c1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:active&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;(.&lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.5rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.5rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; .&lt;span class=&quot;number&quot;&gt;25rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-line&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; .&lt;span class=&quot;number&quot;&gt;25rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightMenu&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.5rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.rightMenu-small&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.rightMenu-item&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#rightmenu-mask&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100vw&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100vh&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;99993&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中引入&lt;code&gt;Jquery&lt;/code&gt;、&lt;code&gt;rightMenu.js&lt;/code&gt;和&lt;code&gt;rightMenu.css&lt;/code&gt;。&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rel=&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;/css/rightMenu.css&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;bottom:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-pjax&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;/js/rightMenu.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;最后重新编译运行即可看见效果。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/15/62d03ec1d3ed6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是，如果点击繁简切换，切换模式，出现了错误，请检查下主题的这两个功能是否开启。在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中搜索&lt;code&gt;translate&lt;/code&gt;和&lt;code&gt;darkmode&lt;/code&gt;，将&lt;code&gt;enable&lt;/code&gt;设置为&lt;code&gt;true&lt;/code&gt;，在重新编译运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;扩展&quot;&gt;&lt;a href=&quot;#扩展&quot; class=&quot;headerlink&quot; title=&quot;扩展&quot;&gt;&lt;/a&gt;扩展&lt;/h2&gt;&lt;p&gt;这个章节将讲述如何去扩展右键的功能。通过上面的步骤，我们已经实现了下图中的功能。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/15/62d03ec1d3ed6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果想在自定义右键上新增一个&lt;code&gt;打印页面&lt;/code&gt;的功能。该如何去实现呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增加DOM。（为了描述的更清晰，将沿用上面提到过的代码，&lt;code&gt;+&lt;/code&gt;表示在此基础上新增的代码。）&lt;br&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/right-menu/index.pug&lt;/code&gt;中新加如下代码：&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#rightMenu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .rightMenu-group.rightMenu-small&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-backward&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-arrow-left&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-forward&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-arrow-right&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-refresh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-arrow-rotate-right&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-home&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-house&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .rightMenu-group.rightMenu-line.rightMenuOther&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link(href=&#39;/archives/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-archive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;文章归档&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link(href=&#39;/categories/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-folder-open&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;文章分类&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link(href=&#39;/tags/&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;文章标签&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .rightMenu-group.rightMenu-line.rightMenuNormal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a.rightMenu-item.menu-link#menu-radompage(href=&#39;/random/index.html&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-shoe-prints&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;随便逛逛&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-translate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-earth-asia&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;繁简切换&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .rightMenu-item#menu-darkmode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.fa-solid.fa-moon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            span=&#39;切换模式&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+       .rightMenu-item#menu-print&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+           i.fa-solid.fa-print.fa-fw&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+           span=&#39;打印页面&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#rightmenu-mask&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
有兴趣的同学可以按下&lt;kbd&gt;F12&lt;/kbd&gt; 打开控制台，找到&lt;code&gt;Elements&lt;/code&gt;，并找到&lt;code&gt;#rightMenu&lt;/code&gt;的盒子，你会发现新增的pug语法最终会被编译成：&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;rightMenu-item&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;menu-print&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fa-solid fa-print fa-fw&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;打印頁面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/15/62d0472b9c38b.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
记住这个&lt;code&gt;id&lt;/code&gt;为&lt;code&gt;menu-print&lt;/code&gt;的属性，下面将会用到。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/js/rightMenu.js&lt;/code&gt;中写入实现方法。&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&#39;#menu-translate&#39;).on(&#39;click&#39;, function () {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeRightMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    translateInitialization();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&quot;.menu-link&quot;).on(&quot;click&quot;, function () {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeRightMenu()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+   $(&quot;#menu-print&quot;).on(&quot;click&quot;, function () {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+       removeRightMenu();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+       window.print();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+   });&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&quot;#rightmenu-mask&quot;).on(&quot;click&quot;, function () { removeRightMenu() });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&quot;#rightmenu-mask&quot;).contextmenu(function () {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeRightMenu();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
不难发现，新增的代码实际上是在&lt;code&gt;id&lt;/code&gt;为&lt;code&gt;menu-print&lt;/code&gt;的盒子上绑了一个点击事件，后面的方法则是触发点击事件后要执行的过程。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在这里执行你想实现的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// removeRightMenu();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// window.print();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;此时点击鼠标右键，会出现新加的一项功能&lt;code&gt;打印页面&lt;/code&gt;。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/15/62d03ec280ddd.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;到此，你学废了吗？遇到问题的话请在评论区留言。&lt;/p&gt;
&lt;h2 id=&quot;推荐阅读-1&quot;&gt;&lt;a href=&quot;#推荐阅读-1&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;参考方向&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;教程原贴&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;ZHHEO&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.zhheo.com/p/5e931b65.html&quot;&gt;Butterfly 魔改：自定义右键菜单&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;LYX&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 键入搜索功能</title>
    <link href="https://fe32.top/articles/hexo1607/"/>
    <id>https://fe32.top/articles/hexo1607/</id>
    <published>2022-07-10T10:06:16.000Z</published>
    <updated>2023-06-27T14:39:00.784Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;br&gt;&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，路径为【BlogRoot/_config.yml】。&lt;br&gt;&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，路径为【BlogRoot/_config.butterfly.yml】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;基于 Hexo 键入分享功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1610/&quot;&gt;基于 Hexo 键入在线聊天功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608/&quot;&gt;Hexo + Butterfly 自定义右键菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1613/&quot;&gt;请收下这只可爱的猫咪吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Local-search&quot;&gt;&lt;a href=&quot;#Local-search&quot; class=&quot;headerlink&quot; title=&quot;Local search&quot;&gt;&lt;/a&gt;Local search&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/11/62cc415c9c150.jpg&quot; alt=&quot;效果图&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;效果图&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装依赖。&lt;br&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;npm install hexo-generator-search --save&lt;/code&gt;。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-search --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;注入配置。&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，添加如下代码：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;search:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;search.xml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;field:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;content:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;主题中开启搜索。&lt;br&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中修改以下内容：&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;local_search:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;deletion&quot;&gt;-  enable: false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;addition&quot;&gt;+  enable: true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到效果。&lt;br&gt;前往博客根目录，打开cmd命令窗口依次执行如下命令：&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo cl &amp;amp;&amp;amp; hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s -p 8000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
详情可参考 &lt;a href=&quot;https://github.com/wzpan/hexo-generator-search&quot;&gt;hexo-generator-search&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Algolia（推荐）&quot;&gt;&lt;a href=&quot;#Algolia（推荐）&quot; class=&quot;headerlink&quot; title=&quot;Algolia（推荐）&quot;&gt;&lt;/a&gt;Algolia（推荐）&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/11/62cc4784318c3.jpg&quot; alt=&quot;效果图&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;效果图&lt;/span&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;关于 Algolia 搜索功能，这里有两种插件，一个是 &lt;a href=&quot;https://github.com/thom4parisot/hexo-algolia&quot;&gt;hexo-algolia&lt;/a&gt; ，一个是 &lt;a href=&quot;https://github.com/LouisBarranqueiro/hexo-algoliasearch&quot;&gt;hexo-algoliasearch&lt;/a&gt;。第一种亲测只能对匹配文章title，不能匹配文章内容查询到结果，所以推荐第二种。下面分别对这两种插件做不同的说明。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;获取-Algolia-账号&quot;&gt;&lt;a href=&quot;#获取-Algolia-账号&quot; class=&quot;headerlink&quot; title=&quot;获取 Algolia 账号&quot;&gt;&lt;/a&gt;获取 Algolia 账号&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;注册 Algolia。&lt;br&gt;进入&lt;a href=&quot;https://www.algolia.com/&quot;&gt;官网地址&lt;/a&gt; 注册，也可以直接用&lt;code&gt;Github&lt;/code&gt;授权登录。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/12/62cd8ab928023.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;新建 Index。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/12/62cd8abcf39d0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;创建拥有一定权限的&lt;code&gt;api key&lt;/code&gt;（如果选择第二种插件，可忽略这一步）。&lt;br&gt;进入【Settings &amp;gt; API Keys】。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/12/62cd8ac08634e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
进入【All API Keys &amp;gt; API Keys】，点击【New API Key】。在ACL里面增加删除和新增Object的权限（按理说只用这两个权限就行，下图中我多加了几个），然后填上 indices 栏目中的 index name ，选刚才你创建的那个index，其余默认就行。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/12/62cd8ac422090.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/12/62cd8ac713689.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
点击【Create】，这样就得到了一个 api key。注意一下，这个key将会在下面的步骤中用到。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/13/62cec7a818fd8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;安装依赖-amp-amp-写入配置&quot;&gt;&lt;a href=&quot;#安装依赖-amp-amp-写入配置&quot; class=&quot;headerlink&quot; title=&quot;安装依赖 &amp;amp;&amp;amp; 写入配置&quot;&gt;&lt;/a&gt;安装依赖 &amp;amp;&amp;amp; 写入配置&lt;/h3&gt;&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;hexo-algoliasearch（推荐）&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;hexo-algolia&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;ol&gt;
&lt;li&gt;安装 Algolia 依赖。&lt;br&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;npm install hexo-algoliasearch --save&lt;/code&gt;。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-algoliasearch --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;注入配置。&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，添加如下代码：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;algolia:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;appId:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;your applicationID&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;apiKey:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;your Search-Only API Key&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;adminApiKey:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;your Admin API Key&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;chunkSize:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;indexName:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;your indexName&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;fields:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;content:strip:truncate,0,500&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;excerpt:strip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;gallery&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;permalink&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;photos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;slug&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/13/62cece7b31f5f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
【applicationID】填入图中位置的 &lt;span class=&quot;p blue&quot;&gt;Applicaiton ID&lt;/span&gt;，【apiKey】填入图中位置的 &lt;span class=&quot;p blue&quot;&gt;Search-Only API Key&lt;/span&gt;，【Admin API Key】填入图中位置的 &lt;span class=&quot;p blue&quot;&gt;Admin API Key&lt;/span&gt;，【indexName】填入前面创建的索引名称。&lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;hexo algolia&lt;/code&gt;。&lt;br&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;hexo algolia&lt;/code&gt;。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo algolia&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/16/62d2846f76321.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
到如下信息，证明成功了，可以去 Algolia 网站上查看，索引已经上传成功了。
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INFO  128 files generated &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 2.33 s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Clearing index on Algolia...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Index cleared.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Indexing posts on Algolia...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  65 posts indexed.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;主题中写入 Alogolia 配置项。&lt;br&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中修改以下内容：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;algolia_search:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;hits:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;per_page:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;input_placeholder:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Search&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;hits_empty:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;我们没有找到任何搜索结果: ${query}&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;hits_stats:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;找到${hits}条结果（用时${time} ms）&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到效果。&lt;br&gt;前往博客根目录，打开cmd命令窗口依次执行如下命令：&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo cl &amp;amp;&amp;amp; hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s -p 8000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;ol&gt;
&lt;li&gt;安装 Algolia 依赖。&lt;br&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;npm install hexo-algolia --save&lt;/code&gt;。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-algolia --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;注入配置。&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，添加如下代码：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;algolia:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;applicationID:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;your applicationID&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;apiKey:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;your Search-Only API Key&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;indexName:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;your indexName&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/13/62cece7b31f5f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
【applicationID】填入图中位置的 &lt;span class=&quot;p blue&quot;&gt;Applicaiton ID&lt;/span&gt;，【apiKey】填入图中位置的 &lt;span class=&quot;p blue&quot;&gt;Search-Only API Key&lt;/span&gt;，
【indexName】填入前面创建的索引名称。&lt;/li&gt;
&lt;li&gt;上传数据到 Algolia。&lt;br&gt;前往博客根目录，打开&lt;code&gt;Git&lt;/code&gt;，依次执行如下命令：&lt;br&gt;【your apiKey】替换为刚才自己创建拥有权限的&lt;code&gt;api key&lt;/code&gt;。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; HEXO_ALGOLIA_INDEXING_KEY=your apiKey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo algolia&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/13/62ced0f13aac0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
到如下信息，证明成功了，可以去 Algolia 网站上查看，索引已经上传成功了。
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INFO  [hexo-algolia] Testing HEXO_ALGOLIA_INDEXING_KEY permissions.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Start processing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  [hexo-algolia] 7 records to index (post, page).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  [hexo-algolia] Indexing chunk 1 of 1 (7 records)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  [hexo-algolia] Indexing &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;主题中写入 Alogolia 配置项。&lt;br&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中修改以下内容：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;algolia_search:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;hits:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;per_page:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;input_placeholder:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Search&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;hits_empty:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;我们没有找到任何搜索结果: ${query}&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;hits_stats:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;找到${hits}条结果（用时${time} ms）&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重新编译运行，即可看到效果。&lt;br&gt;前往博客根目录，打开cmd命令窗口依次执行如下命令：&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo cl &amp;amp;&amp;amp; hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo s -p 8000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十七）：详解 ES6 Modules</title>
    <link href="https://fe32.top/articles/jsnb9544/"/>
    <id>https://fe32.top/articles/jsnb9544/</id>
    <published>2022-07-01T15:38:20.000Z</published>
    <updated>2023-06-27T14:39:00.751Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;历史上，JavaScript 一直没有模块（module）体系，无法将一个大程序拆分成互相依赖的小文件，再用简单的方法拼装起来。其他语言都有这项功能，比如 Ruby 的&lt;code&gt;require&lt;/code&gt;、Python 的&lt;code&gt;import&lt;/code&gt;，甚至就连 CSS 都有&lt;code&gt;@import&lt;/code&gt;，但是 JavaScript 任何这方面的支持都没有，这对开发大型的、复杂的项目形成了巨大障碍。&lt;/p&gt;
&lt;p&gt;在 ES6 之前，社区制定了一些模块加载方案，最主要的有 CommonJS 和 AMD 两种。前者用于服务器，后者用于浏览器。ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD 规范，成为浏览器和服务器通用的模块解决方案。&lt;/p&gt;
&lt;p&gt;ES6 模块的设计思想是尽量的静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS 和 AMD 模块，都只能在运行时确定这些东西。比如，CommonJS 模块就是对象，输入时必须查找对象属性。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// CommonJS模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; { stat, exists, readfile } = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;fs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; _fs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;fs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; stat = _fs.stat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; exists = _fs.exists;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; readfile = _fs.readfile;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的实质是整体加载&lt;code&gt;fs&lt;/code&gt;模块（即加载&lt;code&gt;fs&lt;/code&gt;的所有方法），生成一个对象（&lt;code&gt;_fs&lt;/code&gt;），然后再从这个对象上面读取 3 个方法。这种加载称为“运行时加载”，因为只有运行时才能得到这个对象，导致完全没办法在编译时做“静态优化”。&lt;/p&gt;
&lt;p&gt;ES6 模块不是对象，而是通过&lt;code&gt;export&lt;/code&gt;命令显式指定输出的代码，再通过&lt;code&gt;import&lt;/code&gt;命令输入。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { stat, exists, readFile } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;fs&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的实质是从&lt;code&gt;fs&lt;/code&gt;模块加载 3 个方法，其他方法不加载。这种加载称为“编译时加载”或者静态加载，即 ES6 可以在编译时就完成模块加载，效率要比 CommonJS 模块的加载方式高。当然，这也导致了没法引用 ES6 模块本身，因为它不是对象。&lt;/p&gt;
&lt;p&gt;由于 ES6 模块是编译时加载，使得静态分析成为可能。有了它，就能进一步拓宽 JavaScript 的语法，比如引入宏（macro）和类型检验（type system）这些只能靠静态分析实现的功能。&lt;/p&gt;
&lt;p&gt;除了静态加载带来的各种好处，ES6 模块还有以下好处。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不再需要&lt;code&gt;UMD&lt;/code&gt;模块格式了，将来服务器和浏览器都会支持 ES6 模块格式。目前，通过各种工具库，其实已经做到了这一点。&lt;/li&gt;
&lt;li&gt;将来浏览器的新 API 就能用模块格式提供，不再必须做成全局变量或者&lt;code&gt;navigator&lt;/code&gt;对象的属性。&lt;/li&gt;
&lt;li&gt;不再需要对象作为命名空间（比如&lt;code&gt;Math&lt;/code&gt;对象），未来这些功能可以通过模块提供。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;严格模式&quot;&gt;&lt;a href=&quot;#严格模式&quot; class=&quot;headerlink&quot; title=&quot;严格模式&quot;&gt;&lt;/a&gt;严格模式&lt;/h2&gt;&lt;p&gt;ES6 的模块自动采用严格模式，不管你有没有在模块头部加上&lt;code&gt;&quot;use strict&quot;;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;严格模式主要有以下限制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;变量必须声明后再使用&lt;/li&gt;
&lt;li&gt;函数的参数不能有同名属性，否则报错&lt;/li&gt;
&lt;li&gt;不能使用&lt;code&gt;with&lt;/code&gt;语句&lt;/li&gt;
&lt;li&gt;不能对只读属性赋值，否则报错&lt;/li&gt;
&lt;li&gt;不能使用前缀 0 表示八进制数，否则报错&lt;/li&gt;
&lt;li&gt;不能删除不可删除的属性，否则报错&lt;/li&gt;
&lt;li&gt;不能删除变量&lt;code&gt;delete prop&lt;/code&gt;，会报错，只能删除属性&lt;code&gt;delete global[prop]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;eval不会在它的外层作用域引入变量&lt;/li&gt;
&lt;li&gt;eval和arguments不能被重新赋值&lt;/li&gt;
&lt;li&gt;arguments不会自动反映函数参数的变化&lt;/li&gt;
&lt;li&gt;不能使用&lt;code&gt;arguments.callee&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不能使用&lt;code&gt;arguments.caller&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;禁止&lt;code&gt;this&lt;/code&gt;指向全局对象&lt;/li&gt;
&lt;li&gt;不能使用&lt;code&gt;fn.caller&lt;/code&gt;和&lt;code&gt;fn.arguments&lt;/code&gt;获取函数调用的堆栈&lt;/li&gt;
&lt;li&gt;增加了保留字（比如&lt;code&gt;protected&lt;/code&gt;、&lt;code&gt;static&lt;/code&gt;和&lt;code&gt;interface&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面这些限制，模块都必须遵守。由于严格模式是 ES5 引入的，不属于 ES6，所以请参阅相关 ES5 书籍，本书不再详细介绍了。&lt;/p&gt;
&lt;p&gt;其中，尤其需要注意&lt;code&gt;this&lt;/code&gt;的限制。ES6 模块之中，顶层的&lt;code&gt;this&lt;/code&gt;指向&lt;code&gt;undefined&lt;/code&gt;，即不应该在顶层代码使用&lt;code&gt;this&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;export-命令&quot;&gt;&lt;a href=&quot;#export-命令&quot; class=&quot;headerlink&quot; title=&quot;export 命令&quot;&gt;&lt;/a&gt;export 命令&lt;/h2&gt;&lt;p&gt;模块功能主要由两个命令构成：&lt;code&gt;export&lt;/code&gt;和&lt;code&gt;import&lt;/code&gt;。&lt;code&gt;expor&lt;/code&gt;t命令用于规定模块的对外接口，&lt;code&gt;import&lt;/code&gt;命令用于输入其他模块提供的功能。&lt;/p&gt;
&lt;p&gt;一个模块就是一个独立的文件。该文件内部的所有变量，外部无法获取。如果你希望外部能够读取模块内部的某个变量，就必须使用&lt;code&gt;export&lt;/code&gt;关键字输出该变量。下面是一个 JS 文件，里面使用&lt;code&gt;export&lt;/code&gt;命令输出变量。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// profile.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; firstName = &lt;span class=&quot;string&quot;&gt;&#39;Michael&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lastName = &lt;span class=&quot;string&quot;&gt;&#39;Jackson&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; year = &lt;span class=&quot;number&quot;&gt;1958&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码是&lt;code&gt;profile.js&lt;/code&gt;文件，保存了用户信息。ES6 将其视为一个模块，里面用&lt;code&gt;export&lt;/code&gt;命令对外部输出了三个变量。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export&lt;/code&gt;的写法，除了像上面这样，还有另外一种。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// profile.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; firstName = &lt;span class=&quot;string&quot;&gt;&#39;Michael&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lastName = &lt;span class=&quot;string&quot;&gt;&#39;Jackson&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; year = &lt;span class=&quot;number&quot;&gt;1958&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { firstName, lastName, year };&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码在&lt;code&gt;export&lt;/code&gt;命令后面，使用大括号指定所要输出的一组变量。它与前一种写法（直接放置在&lt;code&gt;var&lt;/code&gt;语句前）是等价的，但是应该优先考虑使用这种写法。因为这样就可以在脚本尾部，一眼看清楚输出了哪些变量。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export&lt;/code&gt;命令除了输出变量，还可以输出函数或类（class）。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;multiply&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x, y&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x * y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码对外输出一个函数&lt;code&gt;multiply&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;通常情况下，&lt;code&gt;export&lt;/code&gt;输出的变量就是本来的名字，但是可以使用&lt;code&gt;as&lt;/code&gt;关键字重命名。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;v1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ ... }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;v2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ ... }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v1 &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; streamV1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v2 &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; streamV2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  v2 &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; streamLatestVersion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码使用&lt;code&gt;as&lt;/code&gt;关键字，重命名了函数&lt;code&gt;v1&lt;/code&gt;和&lt;code&gt;v2&lt;/code&gt;的对外接口。重命名后，&lt;code&gt;v2&lt;/code&gt;可以用不同的名字输出两次。&lt;/p&gt;
&lt;p&gt;需要特别注意的是，&lt;code&gt;export&lt;/code&gt;命令规定的是对外的接口，必须与模块内部的变量建立一一对应关系。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; m;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面两种写法都会报错，因为没有提供对外的接口。第一种写法直接输出 1，第二种写法通过变量&lt;code&gt;m&lt;/code&gt;，还是直接输出 1。&lt;code&gt;1&lt;/code&gt;只是一个值，不是接口。正确的写法是下面这样。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {m};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法三&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {n &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; m};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面三种写法都是正确的，规定了对外的接口&lt;code&gt;m&lt;/code&gt;。其他脚本可以通过这个接口，取到值&lt;code&gt;1&lt;/code&gt;。它们的实质是，在接口名与模块内部变量之间，建立了一一对应的关系。&lt;/p&gt;
&lt;p&gt;同样的，&lt;code&gt;function&lt;/code&gt;和&lt;code&gt;class&lt;/code&gt;的输出，也必须遵守这样的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 正确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 正确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {f};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;另外，&lt;code&gt;export&lt;/code&gt;语句输出的接口，与其对应的值是动态绑定关系，即通过该接口，可以取到模块内部实时的值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;baz&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码输出变量&lt;code&gt;foo&lt;/code&gt;，值为&lt;code&gt;bar&lt;/code&gt;，500 毫秒之后变成&lt;code&gt;baz&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这一点与 CommonJS 规范完全不同。CommonJS 模块输出的是值的缓存，不存在动态更新，详见下文《Module 的加载实现》一节。&lt;/p&gt;
&lt;p&gt;最后，&lt;code&gt;export&lt;/code&gt;命令可以出现在模块的任何位置，只要处于模块顶层就可以。如果处于块级作用域内，就会报错，下一节的&lt;code&gt;import&lt;/code&gt;命令也是如此。这是因为处于条件代码块之中，就没法做静态优化了，违背了 ES6 模块的设计初衷。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// SyntaxError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;export&lt;/code&gt;语句放在函数之中，结果报错。&lt;/p&gt;
&lt;h2 id=&quot;import-命令&quot;&gt;&lt;a href=&quot;#import-命令&quot; class=&quot;headerlink&quot; title=&quot;import 命令&quot;&gt;&lt;/a&gt;import 命令&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;export&lt;/code&gt;命令定义了模块的对外接口以后，其他 JS 文件就可以通过&lt;code&gt;import&lt;/code&gt;命令加载这个模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { firstName, lastName, year } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./profile.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;element&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  element.textContent = firstName + &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; + lastName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的&lt;code&gt;import&lt;/code&gt;命令，用于加载&lt;code&gt;profile.js&lt;/code&gt;文件，并从中输入变量。&lt;code&gt;import&lt;/code&gt;命令接受一对大括号，里面指定要从其他模块导入的变量名。大括号里面的变量名，必须与被导入模块（&lt;code&gt;profile.js&lt;/code&gt;）对外接口的名称相同。&lt;/p&gt;
&lt;p&gt;如果想为输入的变量重新取一个名字，&lt;code&gt;import&lt;/code&gt;命令要使用&lt;code&gt;as&lt;/code&gt;关键字，将输入的变量重命名。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { lastName &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; surname } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./profile.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;import&lt;/code&gt;命令输入的变量都是只读的，因为它的本质是输入接口。也就是说，不允许在加载模块的脚本里面，改写接口。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {a} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./xxx.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = {}; &lt;span class=&quot;comment&quot;&gt;// Syntax Error : &#39;a&#39; is read-only;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，脚本加载了变量&lt;code&gt;a&lt;/code&gt;，对其重新赋值就会报错，因为&lt;code&gt;a&lt;/code&gt;是一个只读的接口。但是，如果&lt;code&gt;a&lt;/code&gt;是一个对象，改写&lt;code&gt;a&lt;/code&gt;的属性是允许的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {a} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./xxx.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.foo = &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 合法操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;a&lt;/code&gt;的属性可以成功改写，并且其他模块也可以读到改写后的值。不过，这种写法很难查错，建议凡是输入的变量，都当作完全只读，不要轻易改变它的属性。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;import&lt;/code&gt;后面的&lt;code&gt;from&lt;/code&gt;指定模块文件的位置，可以是相对路径，也可以是绝对路径。如果不带有路径，只是一个模块名，那么必须有配置文件，告诉 JavaScript 引擎该模块的位置。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { myMethod } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;util&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;util&lt;/code&gt;是模块文件名，由于不带有路径，必须通过配置，告诉引擎怎么取到这个模块。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，&lt;code&gt;import&lt;/code&gt;命令具有提升效果，会提升到整个模块的头部，首先执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { foo } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的代码不会报错，因为&lt;code&gt;import&lt;/code&gt;的执行早于&lt;code&gt;foo&lt;/code&gt;的调用。这种行为的本质是，&lt;code&gt;import&lt;/code&gt;命令是编译阶段执行的，在代码运行之前。&lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;import&lt;/code&gt;是静态执行，所以不能使用表达式和变量，这些只有在运行时才能得到结果的语法结构。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;oo&#39;&lt;/span&gt; } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { foo } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { foo } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;module1&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { foo } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;module2&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面三种写法都会报错，因为它们用到了表达式、变量和&lt;code&gt;if&lt;/code&gt;结构。在静态分析阶段，这些语法都是没法得到值的。&lt;/p&gt;
&lt;p&gt;最后，&lt;code&gt;import&lt;/code&gt;语句会执行所加载的模块，因此可以有下面的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lodash&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码仅仅执行&lt;code&gt;lodash&lt;/code&gt;模块，但是不输入任何值。&lt;/p&gt;
&lt;p&gt;如果多次重复执行同一句&lt;code&gt;import&lt;/code&gt;语句，那么只会执行一次，而不会执行多次。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lodash&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lodash&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码加载了两次&lt;code&gt;lodash&lt;/code&gt;，但是只会执行一次。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { foo } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { bar } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { foo, bar } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，虽然&lt;code&gt;foo&lt;/code&gt;和&lt;code&gt;bar&lt;/code&gt;在两个语句中加载，但是它们对应的是同一个&lt;code&gt;my_module&lt;/code&gt;模块。也就是说，&lt;code&gt;import&lt;/code&gt;语句是 Singleton 模式。&lt;/p&gt;
&lt;p&gt;目前阶段，通过 Babel 转码，CommonJS 模块的&lt;code&gt;requir&lt;/code&gt;e命令和 ES6 模块的&lt;code&gt;import&lt;/code&gt;命令，可以写在同一个模块里面，但是最好不要这样做。因为&lt;code&gt;import&lt;/code&gt;在静态解析阶段执行，所以它是一个模块之中最早执行的。下面的代码可能不会得到预期结果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;core-js/modules/es6.symbol&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;core-js/modules/es6.promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;React&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;模块的整体加载&quot;&gt;&lt;a href=&quot;#模块的整体加载&quot; class=&quot;headerlink&quot; title=&quot;模块的整体加载&quot;&gt;&lt;/a&gt;模块的整体加载&lt;/h2&gt;&lt;p&gt;除了指定加载某个输出值，还可以使用整体加载，即用星号（&lt;code&gt;*&lt;/code&gt;）指定一个对象，所有输出值都加载在这个对象上面。&lt;/p&gt;
&lt;p&gt;下面是一个&lt;code&gt;circle.js&lt;/code&gt;文件，它输出两个方法&lt;code&gt;area&lt;/code&gt;和&lt;code&gt;circumference&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// circle.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;area&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;radius&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI * radius * radius;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;circumference&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;radius&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI * radius;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;现在，加载这个模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { area, circumference } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./circle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;圆面积：&#39;&lt;/span&gt; + area(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;圆周长：&#39;&lt;/span&gt; + circumference(&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面写法是逐一指定要加载的方法，整体加载的写法如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; circle &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./circle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;圆面积：&#39;&lt;/span&gt; + circle.area(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;圆周长：&#39;&lt;/span&gt; + circle.circumference(&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意，模块整体加载所在的那个对象（上例是&lt;code&gt;circle&lt;/code&gt;），应该是可以静态分析的，所以不允许运行时改变。下面的写法都是不允许的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; circle &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./circle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 下面两行都是不允许的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;circle.foo = &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;circle.area = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;export-default-命令&quot;&gt;&lt;a href=&quot;#export-default-命令&quot; class=&quot;headerlink&quot; title=&quot;export default 命令&quot;&gt;&lt;/a&gt;export default 命令&lt;/h2&gt;&lt;p&gt;从前面的例子可以看出，使用&lt;code&gt;import&lt;/code&gt;命令的时候，用户需要知道所要加载的变量名或函数名，否则无法加载。但是，用户肯定希望快速上手，未必愿意阅读文档，去了解模块有哪些属性和方法。&lt;/p&gt;
&lt;p&gt;为了给用户提供方便，让他们不用阅读文档就能加载模块，就要用到&lt;code&gt;export default&lt;/code&gt;命令，为模块指定默认输出。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// export-default.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码是一个模块文件&lt;code&gt;export-default.js&lt;/code&gt;，它的默认输出是一个函数。&lt;/p&gt;
&lt;p&gt;其他模块加载该模块时，&lt;code&gt;import&lt;/code&gt;命令可以为该匿名函数指定任意名字。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// import-default.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; customName &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./export-default&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;customName(); &lt;span class=&quot;comment&quot;&gt;// &#39;foo&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的&lt;code&gt;import&lt;/code&gt;命令，可以用任意名称指向&lt;code&gt;export-default.js&lt;/code&gt;输出的方法，这时就不需要知道原模块输出的函数名。需要注意的是，这时&lt;code&gt;import&lt;/code&gt;命令后面，不使用大括号。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export default&lt;/code&gt;命令用在非匿名函数前，也是可以的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// export-default.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 或者写成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; foo;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;foo&lt;/code&gt;函数的函数名&lt;code&gt;foo&lt;/code&gt;，在模块外部是无效的。加载的时候，视同匿名函数加载。&lt;/p&gt;
&lt;p&gt;下面比较一下默认输出和正常输出。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第一组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;crc32&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; crc32 &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;crc32&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第二组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;crc32&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {crc32} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;crc32&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的两组写法，第一组是使用&lt;code&gt;export default&lt;/code&gt;时，对应的&lt;code&gt;import&lt;/code&gt;语句不需要使用大括号；第二组是不使用&lt;code&gt;export default&lt;/code&gt;时，对应的&lt;code&gt;import&lt;/code&gt;语句需要使用大括号。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export default&lt;/code&gt;命令用于指定模块的默认输出。显然，一个模块只能有一个默认输出，因此&lt;code&gt;export default&lt;/code&gt;命令只能使用一次。所以，&lt;code&gt;import&lt;/code&gt;命令后面才不用加大括号，因为只可能唯一对应&lt;code&gt;export default&lt;/code&gt;命令。&lt;/p&gt;
&lt;p&gt;本质上，&lt;code&gt;export default&lt;/code&gt;就是输出一个叫做&lt;code&gt;default&lt;/code&gt;的变量或方法，然后系统允许你为它取任意名字。所以，下面的写法是有效的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// modules.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x, y&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x * y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {add &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// export default add;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// app.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; foo } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;modules&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// import foo from &#39;modules&#39;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;正是因为&lt;code&gt;export default&lt;/code&gt;命令其实只是输出一个叫做&lt;code&gt;default&lt;/code&gt;的变量，所以它后面不能跟变量声明语句。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 正确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 正确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;export default a&lt;/code&gt;的含义是将变量&lt;code&gt;a&lt;/code&gt;的值赋给变量&lt;code&gt;default&lt;/code&gt;。所以，最后一种写法会报错。&lt;/p&gt;
&lt;p&gt;同样地，因为&lt;code&gt;export default&lt;/code&gt;命令的本质是将后面的值，赋给&lt;code&gt;default&lt;/code&gt;变量，所以可以直接将一个值写在&lt;code&gt;export default&lt;/code&gt;之后。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 正确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，后一句报错是因为没有指定对外的接口，而前一句指定对外接口为default。&lt;/p&gt;
&lt;p&gt;有了&lt;code&gt;export default&lt;/code&gt;命令，输入模块时就非常直观了，以输入 lodash 模块为例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; _ &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lodash&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果想在一条&lt;code&gt;import&lt;/code&gt;语句中，同时输入默认方法和其他接口，可以写成下面这样。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; _, { each, forEach } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lodash&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;对应上面代码的&lt;code&gt;export&lt;/code&gt;语句如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ···&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;each&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj, iterator, context&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ···&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { each &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; forEach };&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的最后一行的意思是，暴露出&lt;code&gt;forEach&lt;/code&gt;接口，默认指向&lt;code&gt;each&lt;/code&gt;接口，即&lt;code&gt;forEach&lt;/code&gt;和&lt;code&gt;each&lt;/code&gt;指向同一个方法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export default&lt;/code&gt;也可以用来输出类。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// MyClass.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;/span&gt;{ ... }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; MyClass &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;MyClass&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; o = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyClass();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;export-与-import-的复合写法&quot;&gt;&lt;a href=&quot;#export-与-import-的复合写法&quot; class=&quot;headerlink&quot; title=&quot;export 与 import 的复合写法&quot;&gt;&lt;/a&gt;export 与 import 的复合写法&lt;/h2&gt;&lt;p&gt;如果在一个模块之中，先输入后输出同一个模块，&lt;code&gt;import&lt;/code&gt;语句可以与&lt;code&gt;export&lt;/code&gt;语句写在一起。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { foo, bar } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 可以简单理解为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { foo, bar } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { foo, bar };&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;export&lt;/code&gt;和&lt;code&gt;import&lt;/code&gt;语句可以结合在一起，写成一行。但需要注意的是，写成一行以后，&lt;code&gt;foo&lt;/code&gt;和&lt;code&gt;bar&lt;/code&gt;实际上并没有被导入当前模块，只是相当于对外转发了这两个接口，导致当前模块不能直接使用&lt;code&gt;foo&lt;/code&gt;和&lt;code&gt;bar&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;模块的接口改名和整体输出，也可以采用这种写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 接口改名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { foo &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; myFoo } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 整体输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;my_module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;默认接口的写法如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;具名接口改为默认接口的写法如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { es6 &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./someModule&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { es6 } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./someModule&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; es6;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;同样地，默认接口也可以改名为具名接口。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; es6 } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./someModule&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;ES2020 之前，有一种&lt;code&gt;import&lt;/code&gt;语句，没有对应的复合写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; someIdentifier &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;someModule&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/proposal-export-ns-from&quot;&gt;ES2020&lt;/a&gt; 补上了这个写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ns &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;mod&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ns &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;mod&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {ns};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;模块的继承&quot;&gt;&lt;a href=&quot;#模块的继承&quot; class=&quot;headerlink&quot; title=&quot;模块的继承&quot;&gt;&lt;/a&gt;模块的继承&lt;/h2&gt;&lt;p&gt;模块之间也可以继承。假设有一个&lt;code&gt;circleplus&lt;/code&gt;模块，继承了&lt;code&gt;circle&lt;/code&gt;模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// circleplus.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;circle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; e = &lt;span class=&quot;number&quot;&gt;2.71828182846&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.exp(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中的&lt;code&gt;export *&lt;/code&gt;，表示再输出&lt;code&gt;circle&lt;/code&gt;模块的所有属性和方法。注意，&lt;code&gt;export *&lt;/code&gt;命令会忽略&lt;code&gt;circle&lt;/code&gt;模块的&lt;code&gt;default&lt;/code&gt;方法。然后，上面代码又输出了自定义的&lt;code&gt;e&lt;/code&gt;变量和默认方法。&lt;/p&gt;
&lt;p&gt;这时，也可以将&lt;code&gt;circle&lt;/code&gt;的属性或方法，改名后再输出。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// circleplus.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { area &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; circleArea } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;circle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码表示，只输出&lt;code&gt;circle&lt;/code&gt;模块的&lt;code&gt;area&lt;/code&gt;方法，且将其改名为&lt;code&gt;circleArea&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;加载上面模块的写法如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;circleplus&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; exp &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;circleplus&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(exp(math.e));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中的&lt;code&gt;import exp&lt;/code&gt;表示，将&lt;code&gt;circleplus&lt;/code&gt;模块的默认方法加载为&lt;code&gt;exp&lt;/code&gt;方法。&lt;/p&gt;
&lt;h2 id=&quot;跨模块常量&quot;&gt;&lt;a href=&quot;#跨模块常量&quot; class=&quot;headerlink&quot; title=&quot;跨模块常量&quot;&gt;&lt;/a&gt;跨模块常量&lt;/h2&gt;&lt;p&gt;介绍&lt;code&gt;const&lt;/code&gt;命令的时候说过，&lt;code&gt;const&lt;/code&gt;声明的常量只在当前代码块有效。如果想设置跨模块的常量（即跨多个文件），或者说一个值要被多个模块共享，可以采用下面的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// constants.js 模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; A = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; B = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; C = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// test1.js 模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; constants &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./constants&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(constants.A); &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(constants.B); &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// test2.js 模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {A, B} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./constants&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(A); &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(B); &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果要使用的常量非常多，可以建一个专门的&lt;code&gt;constants&lt;/code&gt;目录，将各种常量写在不同的文件里面，保存在该目录下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// constants/db.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; db = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url: &lt;span class=&quot;string&quot;&gt;&#39;http://my.couchdbserver.local:5984&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  admin_username: &lt;span class=&quot;string&quot;&gt;&#39;admin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  admin_password: &lt;span class=&quot;string&quot;&gt;&#39;admin password&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// constants/user.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; users = [&lt;span class=&quot;string&quot;&gt;&#39;root&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;admin&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;staff&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;ceo&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;chief&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;moderator&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后，将这些文件输出的常量，合并在&lt;code&gt;index.js&lt;/code&gt;里面。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// constants/index.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {db} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./db&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {users} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./users&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用的时候，直接加载&lt;code&gt;index.js&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// script.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {db, users} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./constants/index&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;import&quot;&gt;&lt;a href=&quot;#import&quot; class=&quot;headerlink&quot; title=&quot;import()&quot;&gt;&lt;/a&gt;import()&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;前面介绍过，&lt;code&gt;import&lt;/code&gt;命令会被 JavaScript 引擎静态分析，先于模块内的其他语句执行（&lt;code&gt;import&lt;/code&gt;命令叫做“连接” binding 其实更合适）。所以，下面的代码会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; MyModual &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./myModual&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，引擎处理&lt;code&gt;import&lt;/code&gt;语句是在编译时，这时不会去分析或执行&lt;code&gt;if&lt;/code&gt;语句，所以&lt;code&gt;import&lt;/code&gt;语句放在&lt;code&gt;if&lt;/code&gt;代码块之中毫无意义，因此会报句法错误，而不是执行时错误。也就是说，&lt;code&gt;import&lt;/code&gt;和&lt;code&gt;export&lt;/code&gt;命令只能在模块的顶层，不能在代码块之中（比如，在&lt;code&gt;if&lt;/code&gt;代码块之中，或在函数之中）。&lt;/p&gt;
&lt;p&gt;这样的设计，固然有利于编译器提高效率，但也导致无法在运行时加载模块。在语法上，条件加载就不可能实现。如果&lt;code&gt;import&lt;/code&gt;命令要取代 Node 的&lt;code&gt;require&lt;/code&gt;方法，这就形成了一个障碍。因为&lt;code&gt;require&lt;/code&gt;是运行时加载模块，&lt;code&gt;import&lt;/code&gt;命令无法取代&lt;code&gt;require&lt;/code&gt;的动态加载功能。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; path = &lt;span class=&quot;string&quot;&gt;&#39;./&#39;&lt;/span&gt; + fileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; myModual = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(path);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的语句就是动态加载，&lt;code&gt;require&lt;/code&gt;到底加载哪一个模块，只有运行时才知道。&lt;code&gt;import&lt;/code&gt;命令做不到这一点。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ES2020提案&lt;/a&gt; 引入&lt;code&gt;import()&lt;/code&gt;函数，支持动态加载模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(specifier)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;import&lt;/code&gt;函数的参数&lt;code&gt;specifier&lt;/code&gt;，指定所要加载的模块的位置。&lt;code&gt;import&lt;/code&gt;命令能够接受什么参数，&lt;code&gt;import()&lt;/code&gt;函数就能接受什么参数，两者区别主要是后者为动态加载。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;import()&lt;/code&gt;返回一个 Promise 对象。下面是一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; main = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;main&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`./section-modules/&lt;span class=&quot;subst&quot;&gt;${someVariable}&lt;/span&gt;.js`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;module&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.loadPageInto(main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main.textContent = err.message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;import()&lt;/code&gt;函数可以用在任何地方，不仅仅是模块，非模块的脚本也可以使用。它是运行时执行，也就是说，什么时候运行到这一句，就会加载指定的模块。另外，&lt;code&gt;import()&lt;/code&gt;函数与所加载的模块没有静态连接关系，这点也是与&lt;code&gt;import&lt;/code&gt;语句不相同。&lt;code&gt;import()&lt;/code&gt;类似于 Node.js 的&lt;code&gt;require()&lt;/code&gt;方法，区别主要是前者是异步加载，后者是同步加载。&lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;import()&lt;/code&gt;返回 Promise 对象，所以需要使用&lt;code&gt;then()&lt;/code&gt;方法指定处理函数。考虑到代码的清晰，更推荐使用&lt;code&gt;await&lt;/code&gt;命令。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;renderWidget&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;widget&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (container !== &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// import(&quot;./widget&quot;).then(widget =&amp;gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//   widget.render(container);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// });&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; widget = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./widget.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    widget.render(container);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;renderWidget();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面示例中，&lt;code&gt;await&lt;/code&gt;命令后面就是使用&lt;code&gt;import()&lt;/code&gt;，对比&lt;code&gt;then()&lt;/code&gt;的写法明显更简洁易读。&lt;/p&gt;
&lt;h3 id=&quot;适用场合&quot;&gt;&lt;a href=&quot;#适用场合&quot; class=&quot;headerlink&quot; title=&quot;适用场合&quot;&gt;&lt;/a&gt;适用场合&lt;/h3&gt;&lt;p&gt;下面是&lt;code&gt;import()&lt;/code&gt;的一些适用场合。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按需加载。&lt;br&gt;&lt;code&gt;import()&lt;/code&gt;可以在需要的时候，再加载某个模块。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;button.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./dialogBox.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;dialogBox&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dialogBox.open();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* Error handling */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码中，&lt;code&gt;import()&lt;/code&gt;方法放在&lt;code&gt;click&lt;/code&gt;事件的监听函数之中，只有用户点击了按钮，才会加载这个模块。&lt;/li&gt;
&lt;li&gt;条件加载&lt;br&gt;&lt;code&gt;import()&lt;/code&gt;可以放在&lt;code&gt;if&lt;/code&gt;代码块，根据不同的情况，加载不同的模块。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (condition) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;moduleA&#39;&lt;/span&gt;).then(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;moduleB&#39;&lt;/span&gt;).then(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码中，如果满足条件，就加载模块 A，否则加载模块 B。&lt;/li&gt;
&lt;li&gt;动态的模块路径&lt;br&gt;&lt;code&gt;import()&lt;/code&gt;允许模块路径动态生成。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(f())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(...);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码中，根据函数&lt;code&gt;f&lt;/code&gt;的返回结果，加载不同的模块。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;注意点&quot;&gt;&lt;a href=&quot;#注意点&quot; class=&quot;headerlink&quot; title=&quot;注意点&quot;&gt;&lt;/a&gt;注意点&lt;/h3&gt;&lt;p&gt;&lt;code&gt;import()&lt;/code&gt;加载模块成功以后，这个模块会作为一个对象，当作&lt;code&gt;then&lt;/code&gt;方法的参数。因此，可以使用对象解构赋值的语法，获取输出接口。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./myModule.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;{export1, export2}&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...·&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;export1&lt;/code&gt;和&lt;code&gt;export2&lt;/code&gt;都是&lt;code&gt;myModule.js&lt;/code&gt;的输出接口，可以解构获得。&lt;/p&gt;
&lt;p&gt;如果模块有&lt;code&gt;default&lt;/code&gt;输出接口，可以用参数直接获得。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./myModule.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;myModule&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(myModule.default);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的代码也可以使用具名输入的形式。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./myModule.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;{&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: theDefault}&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(theDefault);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果想同时加载多个模块，可以采用下面的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./module1.js&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./module2.js&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./module3.js&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;[module1, module2, module3]&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ···&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;import()&lt;/code&gt;也可以用在 async 函数之中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; myModule = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./myModule.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {export1, export2} = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./myModule.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; [module1, module2, module3] =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./module1.js&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./module2.js&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./module3.js&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;main();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Module-的加载实现&quot;&gt;&lt;a href=&quot;#Module-的加载实现&quot; class=&quot;headerlink&quot; title=&quot;Module 的加载实现&quot;&gt;&lt;/a&gt;Module 的加载实现&lt;/h2&gt;&lt;h3 id=&quot;浏览器加载&quot;&gt;&lt;a href=&quot;#浏览器加载&quot; class=&quot;headerlink&quot; title=&quot;浏览器加载&quot;&gt;&lt;/a&gt;浏览器加载&lt;/h3&gt;&lt;h4 id=&quot;传统方法&quot;&gt;&lt;a href=&quot;#传统方法&quot; class=&quot;headerlink&quot; title=&quot;传统方法&quot;&gt;&lt;/a&gt;传统方法&lt;/h4&gt;&lt;p&gt;HTML 网页中，浏览器通过&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签加载 JavaScript 脚本。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 页面内嵌的脚本 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;application/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// module code&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 外部脚本 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;application/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;path/to/myModule.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，由于浏览器脚本的默认语言是 JavaScript，因此&lt;code&gt;type=&quot;application/javascript&quot;&lt;/code&gt;可以省略。&lt;/p&gt;
&lt;p&gt;默认情况下，浏览器是同步加载 JavaScript 脚本，即渲染引擎遇到&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签就会停下来，等到执行完脚本，再继续向下渲染。如果是外部脚本，还必须加入脚本下载的时间。&lt;/p&gt;
&lt;p&gt;如果脚本体积很大，下载和执行的时间就会很长，因此造成浏览器堵塞，用户会感觉到浏览器“卡死”了，没有任何响应。这显然是很不好的体验，所以浏览器允许脚本异步加载，下面就是两种异步加载的语法。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;path/to/myModule.js&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;defer&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;path/to/myModule.js&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;async&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签打开&lt;code&gt;defer&lt;/code&gt;或&lt;code&gt;async&lt;/code&gt;属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行，而是直接执行后面的命令。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;defer&lt;/code&gt;与&lt;code&gt;async&lt;/code&gt;的区别是：&lt;code&gt;defer&lt;/code&gt;要等到整个页面在内存中正常渲染结束（DOM 结构完全生成，以及其他脚本执行完成），才会执行；&lt;code&gt;async&lt;/code&gt;一旦下载完，渲染引擎就会中断渲染，执行这个脚本以后，再继续渲染。一句话，&lt;code&gt;defer&lt;/code&gt;是“渲染完再执行”，&lt;code&gt;async&lt;/code&gt;是“下载完就执行”。另外，如果有多个&lt;code&gt;defer&lt;/code&gt;脚本，会按照它们在页面出现的顺序加载，而多个&lt;code&gt;async&lt;/code&gt;脚本是不能保证加载顺序的。&lt;/p&gt;
&lt;h4 id=&quot;加载规则&quot;&gt;&lt;a href=&quot;#加载规则&quot; class=&quot;headerlink&quot; title=&quot;加载规则&quot;&gt;&lt;/a&gt;加载规则&lt;/h4&gt;&lt;p&gt;浏览器加载 ES6 模块，也使用&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签，但是要加入&lt;code&gt;type=&quot;module&quot;&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./foo.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码在网页中插入一个模块&lt;code&gt;foo.js&lt;/code&gt;，由于&lt;code&gt;type&lt;/code&gt;属性设为&lt;code&gt;module&lt;/code&gt;，所以浏览器知道这是一个 ES6 模块。&lt;/p&gt;
&lt;p&gt;浏览器对于带有&lt;code&gt;type=&quot;module&lt;/code&gt;“的&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;，都是异步加载，不会造成堵塞浏览器，即等到整个页面渲染完，再执行模块脚本，等同于打开了&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签的&lt;code&gt;defer&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./foo.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 等同于 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./foo.js&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;defer&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果网页有多个&lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&lt;/code&gt;，它们会按照在页面出现的顺序依次执行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签的&lt;code&gt;async&lt;/code&gt;属性也可以打开，这时只要加载完成，渲染引擎就会中断渲染立即执行。执行完成后，再恢复渲染。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./foo.js&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;async&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一旦使用了&lt;code&gt;async&lt;/code&gt;属性，&lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&lt;/code&gt;就不会按照在页面出现的顺序执行，而是只要该模块加载完成，就执行该模块。&lt;/p&gt;
&lt;p&gt;ES6 模块也允许内嵌在网页中，语法行为与加载外部脚本完全一致。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; utils &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;./utils.js&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// other code&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;举例来说，jQuery 就支持模块加载。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; $ &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;./jquery/src/jquery.js&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;  $(&lt;span class=&quot;string&quot;&gt;&#39;#message&#39;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&#39;Hi from jQuery!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;对于外部的模块脚本（上例是&lt;code&gt;foo.js&lt;/code&gt;），有几点需要注意。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码是在模块作用域之中运行，而不是在全局作用域运行。模块内部的顶层变量，外部不可见。&lt;/li&gt;
&lt;li&gt;模块脚本自动采用严格模式，不管有没有声明&lt;code&gt;use strict&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;模块之中，可以使用&lt;code&gt;import&lt;/code&gt;命令加载其他模块（&lt;code&gt;.js&lt;/code&gt;后缀不可省略，需要提供绝对 URL 或相对 URL），也可以使用&lt;code&gt;export&lt;/code&gt;命令输出对外接口。&lt;/li&gt;
&lt;li&gt;模块之中，顶层的&lt;code&gt;this&lt;/code&gt;关键字返回&lt;code&gt;undefined&lt;/code&gt;，而不是指向&lt;code&gt;window&lt;/code&gt;。也就是说，在模块顶层使用&lt;code&gt;this&lt;/code&gt;关键字，是无意义的。&lt;/li&gt;
&lt;li&gt;同一个模块如果加载多次，将只执行一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是一个示例模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; utils &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://example.com/js/utils.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(x === &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.x); &lt;span class=&quot;comment&quot;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt; === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;利用顶层的&lt;code&gt;this&lt;/code&gt;等于&lt;code&gt;undefined&lt;/code&gt;这个语法点，可以侦测当前代码是否在 ES6 模块之中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isNotModuleScript = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt; !== &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;ES6-模块与-CommonJS-模块的差异&quot;&gt;&lt;a href=&quot;#ES6-模块与-CommonJS-模块的差异&quot; class=&quot;headerlink&quot; title=&quot;ES6 模块与 CommonJS 模块的差异&quot;&gt;&lt;/a&gt;ES6 模块与 CommonJS 模块的差异&lt;/h3&gt;&lt;p&gt;讨论 Node.js 加载 ES6 模块之前，必须了解 ES6 模块与 CommonJS 模块完全不同。&lt;/p&gt;
&lt;p&gt;它们有三个重大差异。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。&lt;/li&gt;
&lt;li&gt;CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。&lt;/li&gt;
&lt;li&gt;CommonJS 模块的&lt;code&gt;require()&lt;/code&gt;是同步加载模块，ES6 模块的&lt;code&gt;import&lt;/code&gt;命令是异步加载，有一个独立的模块依赖的解析阶段。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二个差异是因为 CommonJS 加载的是一个对象（即&lt;code&gt;module.exports&lt;/code&gt;属性），该对象只有在脚本运行完才会生成。而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。&lt;/p&gt;
&lt;p&gt;下面重点解释第一个差异。&lt;/p&gt;
&lt;p&gt;CommonJS 模块输出的是值的拷贝，也就是说，一旦输出一个值，模块内部的变化就影响不到这个值。请看下面这个模块文件&lt;code&gt;lib.js&lt;/code&gt;的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// lib.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incCounter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  counter++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  counter: counter,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  incCounter: incCounter,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码输出内部变量&lt;code&gt;counter&lt;/code&gt;和改写这个变量的内部方法&lt;code&gt;incCounter&lt;/code&gt;。然后，在&lt;code&gt;main.js&lt;/code&gt;里面加载这个模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mod = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./lib&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(mod.counter);  &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mod.incCounter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(mod.counter); &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码说明，&lt;code&gt;lib.js&lt;/code&gt;模块加载以后，它的内部变化就影响不到输出的&lt;code&gt;mod.counter&lt;/code&gt;了。这是因为&lt;code&gt;mod.counter&lt;/code&gt;是一个原始类型的值，会被缓存。除非写成一个函数，才能得到内部变动后的值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// lib.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incCounter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  counter++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;counter&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  incCounter: incCounter,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，输出的&lt;code&gt;counter&lt;/code&gt;属性实际上是一个取值器函数。现在再执行&lt;code&gt;main.js&lt;/code&gt;，就可以正确读取内部变量&lt;code&gt;counter&lt;/code&gt;的变动了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node main.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;ES6 模块的运行机制与 CommonJS 不一样。JS 引擎对脚本静态分析的时候，遇到模块加载命令&lt;code&gt;import&lt;/code&gt;，就会生成一个只读引用。等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值。换句话说，ES6 的&lt;code&gt;import&lt;/code&gt;有点像 Unix 系统的“符号连接”，原始值变了，&lt;code&gt;import&lt;/code&gt;加载的值也会跟着变。因此，ES6 模块是动态引用，并且不会缓存值，模块里面的变量绑定其所在的模块。&lt;/p&gt;
&lt;p&gt;还是举上面的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// lib.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; counter = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incCounter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  counter++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { counter, incCounter } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./lib&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter); &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incCounter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter); &lt;span class=&quot;comment&quot;&gt;// 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码说明，ES6 模块输入的变量&lt;code&gt;counter&lt;/code&gt;是活的，完全反应其所在模块&lt;code&gt;lib.js&lt;/code&gt;内部的变化。&lt;/p&gt;
&lt;p&gt;再举一个出现在&lt;code&gt;export&lt;/code&gt;一节中的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// m1.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;baz&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// m2.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {foo} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./m1.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo), &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;m1.js&lt;/code&gt;的变量&lt;code&gt;foo&lt;/code&gt;，在刚加载时等于&lt;code&gt;bar&lt;/code&gt;，过了 500 毫秒，又变为等于&lt;code&gt;baz&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;让我们看看，&lt;code&gt;m2.js&lt;/code&gt;能否正确读取这个变化。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ babel-node m2.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码表明，ES6 模块不会缓存运行结果，而是动态地去被加载的模块取值，并且变量总是绑定其所在的模块。&lt;/p&gt;
&lt;p&gt;由于 ES6 输入的模块变量，只是一个“符号连接”，所以这个变量是只读的，对它进行重新赋值会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// lib.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; obj = {};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { obj } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./lib&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.prop = &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// OK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj = {}; &lt;span class=&quot;comment&quot;&gt;// TypeError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;main.j&lt;/code&gt;s从&lt;code&gt;lib.js&lt;/code&gt;输入变量&lt;code&gt;obj&lt;/code&gt;，可以对&lt;code&gt;obj&lt;/code&gt;添加属性，但是重新赋值就会报错。因为变量&lt;code&gt;obj&lt;/code&gt;指向的地址是只读的，不能重新赋值，这就好比&lt;code&gt;main.js&lt;/code&gt;创造了一个名为&lt;code&gt;obj&lt;/code&gt;的&lt;code&gt;const&lt;/code&gt;变量。&lt;/p&gt;
&lt;p&gt;最后，&lt;code&gt;export&lt;/code&gt;通过接口，输出的是同一个值。不同的脚本加载这个接口，得到的都是同样的实例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// mod.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;C&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.add = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.sum += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.show = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; C();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的脚本&lt;code&gt;mod.js&lt;/code&gt;，输出的是一个&lt;code&gt;C&lt;/code&gt;的实例。不同的脚本加载这个模块，得到的都是同一个实例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// x.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {c} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./mod&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// y.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {c} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./mod&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./x&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./y&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;现在执行&lt;code&gt;main.js&lt;/code&gt;，输出的是&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ babel-node main.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这就证明了&lt;code&gt;x.js&lt;/code&gt;和&lt;code&gt;y.js&lt;/code&gt;加载的都是&lt;code&gt;C&lt;/code&gt;的同一个实例。&lt;/p&gt;
&lt;h3 id=&quot;Node-js-的模块加载方法&quot;&gt;&lt;a href=&quot;#Node-js-的模块加载方法&quot; class=&quot;headerlink&quot; title=&quot;Node.js 的模块加载方法&quot;&gt;&lt;/a&gt;Node.js 的模块加载方法&lt;/h3&gt;&lt;p&gt;JavaScript 现在有两种模块。一种是 ES6 模块，简称 ESM；另一种是 CommonJS 模块，简称 CJS。&lt;/p&gt;
&lt;p&gt;CommonJS 模块是 Node.js 专用的，与 ES6 模块不兼容。语法上面，两者最明显的差异是，CommonJS 模块使用&lt;code&gt;require()&lt;/code&gt;和&lt;code&gt;module.exports&lt;/code&gt;，ES6 模块使用&lt;code&gt;import&lt;/code&gt;和&lt;code&gt;export&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;它们采用不同的加载方案。从 Node.js v13.2 版本开始，Node.js 已经默认打开了 ES6 模块支持。&lt;/p&gt;
&lt;p&gt;Node.js 要求 ES6 模块采用&lt;code&gt;.mjs&lt;/code&gt;后缀文件名。也就是说，只要脚本文件里面使用&lt;code&gt;import&lt;/code&gt;或者&lt;code&gt;export&lt;/code&gt;命令，那么就必须采用&lt;code&gt;.mjs&lt;/code&gt;后缀名。Node.js 遇到&lt;code&gt;.mjs&lt;/code&gt;文件，就认为它是 ES6 模块，默认启用严格模式，不必在每个模块文件顶部指定&lt;code&gt;&quot;use strict&quot;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果不希望将后缀名改成&lt;code&gt;.mjs&lt;/code&gt;，可以在项目的&lt;code&gt;package.json&lt;/code&gt;文件中，指定&lt;code&gt;type&lt;/code&gt;字段为&lt;code&gt;module&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一旦设置了以后，该项目的 JS 脚本，就被解释成 ES6 模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 解释成 ES6 模块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ node my-app.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果这时还要使用 CommonJS 模块，那么需要将 CommonJS 脚本的后缀名都改成&lt;code&gt;.cjs&lt;/code&gt;。如果没有&lt;code&gt;type&lt;/code&gt;字段，或者&lt;code&gt;type&lt;/code&gt;字段为&lt;code&gt;commonjs&lt;/code&gt;，则&lt;code&gt;.js&lt;/code&gt;脚本会被解释成 CommonJS 模块。&lt;/p&gt;
&lt;p&gt;总结为一句话：&lt;code&gt;.mjs&lt;/code&gt;文件总是以 ES6 模块加载，&lt;code&gt;.cjs&lt;/code&gt;文件总是以 CommonJS 模块加载，&lt;code&gt;.js&lt;/code&gt;文件的加载取决于&lt;code&gt;package.json&lt;/code&gt;里面&lt;code&gt;type&lt;/code&gt;字段的设置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，ES6 模块与 CommonJS 模块尽量不要混用。&lt;code&gt;require&lt;/code&gt;命令不能加载&lt;code&gt;.mjs&lt;/code&gt;文件，会报错，只有&lt;code&gt;import&lt;/code&gt;命令才可以加载&lt;code&gt;.mjs&lt;/code&gt;文件。反过来，&lt;code&gt;.mjs&lt;/code&gt;文件里面也不能使用&lt;code&gt;require&lt;/code&gt;命令，必须使用&lt;code&gt;import&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;package-json-的-main-字段&quot;&gt;&lt;a href=&quot;#package-json-的-main-字段&quot; class=&quot;headerlink&quot; title=&quot;package.json 的 main 字段&quot;&gt;&lt;/a&gt;package.json 的 main 字段&lt;/h4&gt;&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;文件有两个字段可以指定模块的入口文件：&lt;code&gt;main&lt;/code&gt;和&lt;code&gt;exports&lt;/code&gt;。比较简单的模块，可以只使用&lt;code&gt;main&lt;/code&gt;字段，指定模块加载的入口文件。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ./node_modules/es-module-package/package.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./src/index.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码指定项目的入口脚本为&lt;code&gt;./src/index.js&lt;/code&gt;，它的格式为 ES6 模块。如果没有&lt;code&gt;type&lt;/code&gt;字段，&lt;code&gt;index.js&lt;/code&gt;就会被解释为 CommonJS 模块。&lt;/p&gt;
&lt;p&gt;然后，&lt;code&gt;import&lt;/code&gt;命令就可以加载这个模块。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ./my-app.mjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { something } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;es-module-package&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实际加载的是 ./node_modules/es-module-package/src/index.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，运行该脚本以后，Node.js 就会到&lt;code&gt;./node_modules&lt;/code&gt;目录下面，寻找&lt;code&gt;es-module-package&lt;/code&gt;模块，然后根据该模块&lt;code&gt;package.json&lt;/code&gt;的&lt;code&gt;main&lt;/code&gt;字段去执行入口文件。&lt;/p&gt;
&lt;p&gt;这时，如果用 CommonJS 模块的&lt;code&gt;require()&lt;/code&gt;命令去加载&lt;code&gt;es-module-package&lt;/code&gt;模块会报错，因为 CommonJS 模块不能处理&lt;code&gt;export&lt;/code&gt;命令。&lt;/p&gt;
&lt;h4 id=&quot;package-json-的-exports-字段&quot;&gt;&lt;a href=&quot;#package-json-的-exports-字段&quot; class=&quot;headerlink&quot; title=&quot;package.json 的 exports 字段&quot;&gt;&lt;/a&gt;package.json 的 exports 字段&lt;/h4&gt;&lt;p&gt;&lt;code&gt;exports&lt;/code&gt;字段的优先级高于&lt;code&gt;main&lt;/code&gt;字段。它有多种用法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;子目录别名&lt;br&gt;&lt;code&gt;package.json&lt;/code&gt;文件的&lt;code&gt;exports&lt;/code&gt;字段可以指定脚本或子目录的别名。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ./node_modules/es-module-package/package.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;./submodule&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./src/submodule.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面的代码指定&lt;code&gt;src/submodule.js&lt;/code&gt;别名为&lt;code&gt;submodule&lt;/code&gt;，然后就可以从别名加载这个文件。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; submodule &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;es-module-package/submodule&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 加载 ./node_modules/es-module-package/src/submodule.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
下面是子目录别名的例子。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ./node_modules/es-module-package/package.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;./features/&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./src/features/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; feature &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;es-module-package/features/x.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 加载 ./node_modules/es-module-package/src/features/x.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
如果没有指定别名，就不能用“模块+脚本名”这种形式加载脚本。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; submodule &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;es-module-package/private-module.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 不报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; submodule &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./node_modules/es-module-package/private-module.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;main 的别名&lt;br&gt;&lt;code&gt;exports&lt;/code&gt;字段的别名如果是&lt;code&gt;.&lt;/code&gt;，就代表模块的主入口，优先级高于&lt;code&gt;main&lt;/code&gt;字段，并且可以直接简写成&lt;code&gt;exports&lt;/code&gt;字段的值。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
由于&lt;code&gt;exports&lt;/code&gt;字段只有支持 ES6 的 Node.js 才认识，所以可以用来兼容旧版本的 Node.js。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main-legacy.cjs&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main-modern.cjs&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码中，老版本的 Node.js （不支持 ES6 模块）的入口文件是&lt;code&gt;main-legacy.cjs&lt;/code&gt;，新版本的 Node.js 的入口文件是&lt;code&gt;main-modern.cjs&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;条件加载&lt;br&gt;利用&lt;code&gt;.&lt;/code&gt;这个别名，可以为 ES6 模块和 CommonJS 指定不同的入口。目前，这个功能需要在 Node.js 运行的时候，打开&lt;code&gt;--experimental-conditional-exports&lt;/code&gt;标志。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;module&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;require&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.cjs&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;default&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码中，别名&lt;code&gt;.&lt;/code&gt;的&lt;code&gt;require&lt;/code&gt;条件指定&lt;code&gt;require()&lt;/code&gt;命令的入口文件（即 CommonJS 的入口），&lt;code&gt;default&lt;/code&gt;条件指定其他情况的入口（即 ES6 的入口）。&lt;br&gt;上面的写法可以简写如下。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;require&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.cjs&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;default&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
注意，如果同时还有其他别名，就不能采用简写，否则会报错。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;./feature&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./lib/feature.js&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;require&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.cjs&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;default&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./main.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;CommonJS-模块加载-ES6-模块&quot;&gt;&lt;a href=&quot;#CommonJS-模块加载-ES6-模块&quot; class=&quot;headerlink&quot; title=&quot;CommonJS 模块加载 ES6 模块&quot;&gt;&lt;/a&gt;CommonJS 模块加载 ES6 模块&lt;/h4&gt;&lt;p&gt;CommonJS 的&lt;code&gt;require()&lt;/code&gt;命令不能加载 ES6 模块，会报错，只能使用&lt;code&gt;import()&lt;/code&gt;这个方法加载。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./my-app.mjs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码可以在 CommonJS 模块中运行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;require()&lt;/code&gt;不支持 ES6 模块的一个原因是，它是同步加载，而 ES6 模块内部可以使用顶层&lt;code&gt;await&lt;/code&gt;命令，导致无法被同步加载。&lt;/p&gt;
&lt;h4 id=&quot;ES6-模块加载-CommonJS-模块&quot;&gt;&lt;a href=&quot;#ES6-模块加载-CommonJS-模块&quot; class=&quot;headerlink&quot; title=&quot;ES6 模块加载 CommonJS 模块&quot;&gt;&lt;/a&gt;ES6 模块加载 CommonJS 模块&lt;/h4&gt;&lt;p&gt;ES6 模块的&lt;code&gt;import&lt;/code&gt;命令可以加载 CommonJS 模块，但是只能整体加载，不能只加载单一的输出项。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 正确&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; packageMain &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;commonjs-package&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { method } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;commonjs-package&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这是因为 ES6 模块需要支持静态代码分析，而 CommonJS 模块的输出接口是&lt;code&gt;module.exports&lt;/code&gt;，是一个对象，无法被静态分析，所以只能整体加载。&lt;/p&gt;
&lt;p&gt;加载单一的输出项，可以写成下面这样。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; packageMain &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;commonjs-package&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { method } = packageMain;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;还有一种变通的加载方法，就是使用 Node.js 内置的&lt;code&gt;module.createRequire()&lt;/code&gt;方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// cjs.cjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;string&quot;&gt;&#39;cjs&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// esm.mjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { createRequire } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;module&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt; = createRequire(&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;.meta.url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; cjs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./cjs.cjs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cjs === &lt;span class=&quot;string&quot;&gt;&#39;cjs&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，ES6 模块通过&lt;code&gt;module.createRequire()&lt;/code&gt;方法可以加载 CommonJS 模块。但是，这种写法等于将 ES6 和 CommonJS 混在一起了，所以不建议使用。&lt;/p&gt;
&lt;h4 id=&quot;同时支持两种格式的模块&quot;&gt;&lt;a href=&quot;#同时支持两种格式的模块&quot; class=&quot;headerlink&quot; title=&quot;同时支持两种格式的模块&quot;&gt;&lt;/a&gt;同时支持两种格式的模块&lt;/h4&gt;&lt;p&gt;一个模块同时要支持 CommonJS 和 ES6 两种格式，也很容易。&lt;/p&gt;
&lt;p&gt;如果原始模块是 ES6 格式，那么需要给出一个整体输出接口，比如&lt;code&gt;export default obj&lt;/code&gt;，使得 CommonJS 可以用&lt;code&gt;import()&lt;/code&gt;进行加载。&lt;/p&gt;
&lt;p&gt;如果原始模块是 CommonJS 格式，那么可以加一个包装层。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cjsModule &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../index.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; foo = cjsModule.foo;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码先整体输入 CommonJS 模块，然后再根据需要输出具名接口。&lt;/p&gt;
&lt;p&gt;你可以把这个文件的后缀名改为&lt;code&gt;.mjs&lt;/code&gt;，或者将它放在一个子目录，再在这个子目录里面放一个单独的&lt;code&gt;package.json&lt;/code&gt;文件，指明&lt;code&gt;{ type: &quot;module&quot; }&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;另一种做法是在&lt;code&gt;package.json&lt;/code&gt;文件的&lt;code&gt;exports&lt;/code&gt;字段，指明两种格式模块各自的加载入口。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;exports&quot;&lt;/span&gt;：{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;require&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;import&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./esm/wrapper.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码指定&lt;code&gt;require()&lt;/code&gt;和&lt;code&gt;import&lt;/code&gt;，加载该模块会自动切换到不一样的入口文件。&lt;/p&gt;
&lt;h4 id=&quot;Node-js-的内置模块&quot;&gt;&lt;a href=&quot;#Node-js-的内置模块&quot; class=&quot;headerlink&quot; title=&quot;Node.js 的内置模块&quot;&gt;&lt;/a&gt;Node.js 的内置模块&lt;/h4&gt;&lt;p&gt;Node.js 的内置模块可以整体加载，也可以加载指定的输出项。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 整体加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; EventEmitter &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;events&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; e = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EventEmitter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 加载指定的输出项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { readFile } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;fs&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;readFile(&lt;span class=&quot;string&quot;&gt;&#39;./foo.txt&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;err, source&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.error(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;加载路径&quot;&gt;&lt;a href=&quot;#加载路径&quot; class=&quot;headerlink&quot; title=&quot;加载路径&quot;&gt;&lt;/a&gt;加载路径&lt;/h4&gt;&lt;p&gt;ES6 模块的加载路径必须给出脚本的完整路径，不能省略脚本的后缀名。&lt;code&gt;import&lt;/code&gt;命令和&lt;code&gt;package.json&lt;/code&gt;文件的&lt;code&gt;main&lt;/code&gt;字段如果省略脚本的后缀名，会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6 模块中将报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { something } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./index&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;为了与浏览器的&lt;code&gt;import&lt;/code&gt;加载规则相同，Node.js 的&lt;code&gt;.mjs&lt;/code&gt;文件支持 URL 路径。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./foo.mjs?query=1&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 加载 ./foo 传入参数 ?query=1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，脚本路径带有参数&lt;code&gt;?query=1&lt;/code&gt;，Node 会按 URL 规则解读。同一个脚本只要参数不同，就会被加载多次，并且保存成不同的缓存。由于这个原因，只要文件名中含有&lt;code&gt;:&lt;/code&gt;、&lt;code&gt;%&lt;/code&gt;、&lt;code&gt;#&lt;/code&gt;、&lt;code&gt;?&lt;/code&gt;等特殊字符，最好对这些字符进行转义。&lt;/p&gt;
&lt;p&gt;目前，Node.js 的&lt;code&gt;import&lt;/code&gt;命令只支持加载本地模块（&lt;code&gt;file:&lt;/code&gt;协议）和&lt;code&gt;data:&lt;/code&gt;协议，不支持加载远程模块。另外，脚本路径只支持相对路径，不支持绝对路径（即以&lt;code&gt;/&lt;/code&gt;或&lt;code&gt;//&lt;/code&gt;开头的路径）。&lt;/p&gt;
&lt;h4 id=&quot;内部变量&quot;&gt;&lt;a href=&quot;#内部变量&quot; class=&quot;headerlink&quot; title=&quot;内部变量&quot;&gt;&lt;/a&gt;内部变量&lt;/h4&gt;&lt;p&gt;ES6 模块应该是通用的，同一个模块不用修改，就可以用在浏览器环境和服务器环境。为了达到这个目标，Node.js 规定 ES6 模块之中不能使用 CommonJS 模块的特有的一些内部变量。&lt;/p&gt;
&lt;p&gt;首先，就是&lt;code&gt;this&lt;/code&gt;关键字。ES6 模块之中，顶层的&lt;code&gt;this&lt;/code&gt;指向&lt;code&gt;undefined&lt;/code&gt;；CommonJS 模块的顶层this指向当前模块，这是两者的一个重大差异。&lt;/p&gt;
&lt;p&gt;其次，以下这些顶层变量在 ES6 模块之中都是不存在的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;arguments&lt;/li&gt;
&lt;li&gt;require&lt;/li&gt;
&lt;li&gt;module&lt;/li&gt;
&lt;li&gt;exports&lt;/li&gt;
&lt;li&gt;__filename&lt;/li&gt;
&lt;li&gt;__dirname&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;循环加载&quot;&gt;&lt;a href=&quot;#循环加载&quot; class=&quot;headerlink&quot; title=&quot;循环加载&quot;&gt;&lt;/a&gt;循环加载&lt;/h3&gt;&lt;p&gt;“循环加载”（circular dependency）指的是，&lt;code&gt;a&lt;/code&gt;脚本的执行依赖&lt;code&gt;b&lt;/code&gt;脚本，而&lt;code&gt;b&lt;/code&gt;脚本的执行又依赖&lt;code&gt;a&lt;/code&gt;脚本。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// a.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// b.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通常，“循环加载”表示存在强耦合，如果处理不好，还可能导致递归加载，使得程序无法执行，因此应该避免出现。&lt;/p&gt;
&lt;p&gt;但是实际上，这是很难避免的，尤其是依赖关系复杂的大项目，很容易出现&lt;code&gt;a&lt;/code&gt;依赖&lt;code&gt;b&lt;/code&gt;，&lt;code&gt;b&lt;/code&gt;依赖&lt;code&gt;c&lt;/code&gt;，&lt;code&gt;c&lt;/code&gt;又依赖&lt;code&gt;a&lt;/code&gt;这样的情况。这意味着，模块加载机制必须考虑“循环加载”的情况。&lt;/p&gt;
&lt;p&gt;对于 JavaScript 语言来说，目前最常见的两种模块格式 CommonJS 和 ES6，处理“循环加载”的方法是不一样的，返回的结果也不一样。&lt;/p&gt;
&lt;h4 id=&quot;CommonJS-模块的加载原理&quot;&gt;&lt;a href=&quot;#CommonJS-模块的加载原理&quot; class=&quot;headerlink&quot; title=&quot;CommonJS 模块的加载原理&quot;&gt;&lt;/a&gt;CommonJS 模块的加载原理&lt;/h4&gt;&lt;p&gt;介绍 ES6 如何处理“循环加载”之前，先介绍目前最流行的 CommonJS 模块格式的加载原理。&lt;/p&gt;
&lt;p&gt;CommonJS 的一个模块，就是一个脚本文件。&lt;code&gt;require&lt;/code&gt;命令第一次加载该脚本，就会执行整个脚本，然后在内存生成一个对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id: &lt;span class=&quot;string&quot;&gt;&#39;...&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;: { ... },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  loaded: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码就是 Node 内部加载模块后生成的一个对象。该对象的&lt;code&gt;id&lt;/code&gt;属性是模块名，&lt;code&gt;exports&lt;/code&gt;属性是模块输出的各个接口，&lt;code&gt;loaded&lt;/code&gt;属性是一个布尔值，表示该模块的脚本是否执行完毕。其他还有很多属性，这里都省略了。&lt;/p&gt;
&lt;p&gt;以后需要用到这个模块的时候，就会到&lt;code&gt;exports&lt;/code&gt;属性上面取值。即使再次执行&lt;code&gt;require&lt;/code&gt;命令，也不会再次执行该模块，而是到缓存之中取值。也就是说，CommonJS 模块无论加载多少次，都只会在第一次加载时运行一次，以后再加载，就返回第一次运行的结果，除非手动清除系统缓存。&lt;/p&gt;
&lt;h4 id=&quot;CommonJS-模块的循环加载&quot;&gt;&lt;a href=&quot;#CommonJS-模块的循环加载&quot; class=&quot;headerlink&quot; title=&quot;CommonJS 模块的循环加载&quot;&gt;&lt;/a&gt;CommonJS 模块的循环加载&lt;/h4&gt;&lt;p&gt;CommonJS 模块的重要特性是加载时执行，即脚本代码在&lt;code&gt;require&lt;/code&gt;的时候，就会全部执行。一旦出现某个模块被”循环加载”，就只输出已经执行的部分，还未执行的部分不会输出。&lt;/p&gt;
&lt;p&gt;让我们来看，&lt;a href=&quot;https://nodejs.org/api/modules.html#modules_cycles&quot;&gt;Node 官方文档&lt;/a&gt;里面的例子。脚本文件&lt;code&gt;a.js&lt;/code&gt;代码如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./b.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;在 a.js 之中，b.done = %j&#39;&lt;/span&gt;, b.done);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;a.js 执行完毕&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码之中，&lt;code&gt;a.js&lt;/code&gt;脚本先输出一个&lt;code&gt;done&lt;/code&gt;变量，然后加载另一个脚本文件&lt;code&gt;b.js&lt;/code&gt;。注意，此时&lt;code&gt;a.js&lt;/code&gt;代码就停在这里，等待&lt;code&gt;b.js&lt;/code&gt;执行完毕，再往下执行。&lt;/p&gt;
&lt;p&gt;再看&lt;code&gt;b.js&lt;/code&gt;的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./a.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;在 b.js 之中，a.done = %j&#39;&lt;/span&gt;, a.done);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;b.js 执行完毕&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码之中，&lt;code&gt;b.js&lt;/code&gt;执行到第二行，就会去加载&lt;code&gt;a.js&lt;/code&gt;，这时，就发生了“循环加载”。系统会去&lt;code&gt;a.js&lt;/code&gt;模块对应对象的&lt;code&gt;exports&lt;/code&gt;属性取值，可是因为&lt;code&gt;a.js&lt;/code&gt;还没有执行完，从&lt;code&gt;exports&lt;/code&gt;属性只能取回已经执行的部分，而不是最后的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a.js&lt;/code&gt;已经执行的部分，只有一行。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因此，对于&lt;code&gt;b.js&lt;/code&gt;来说，它从&lt;code&gt;a.js&lt;/code&gt;只输入一个变量&lt;code&gt;done&lt;/code&gt;，值为&lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后，&lt;code&gt;b.js&lt;/code&gt;接着往下执行，等到全部执行完毕，再把执行权交还给&lt;code&gt;a.js&lt;/code&gt;。于是，&lt;code&gt;a.js&lt;/code&gt;接着往下执行，直到执行完毕。我们写一个脚本&lt;code&gt;main.js&lt;/code&gt;，验证这个过程。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./a.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./b.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;在 main.js 之中, a.done=%j, b.done=%j&#39;&lt;/span&gt;, a.done, b.done);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;执行&lt;code&gt;main.js&lt;/code&gt;，运行结果如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node main.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在 b.js 之中，a.done = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.js 执行完毕&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在 a.js 之中，b.done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.js 执行完毕&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在 main.js 之中, a.done=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, b.done=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的代码证明了两件事。一是，在&lt;code&gt;b.js&lt;/code&gt;之中，&lt;code&gt;a.js&lt;/code&gt;没有执行完毕，只执行了第一行。二是，&lt;code&gt;main.js&lt;/code&gt;执行到第二行时，不会再次执行&lt;code&gt;b.js&lt;/code&gt;，而是输出缓存的&lt;code&gt;b.js&lt;/code&gt;的执行结果，即它的第四行。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.done = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;总之，CommonJS 输入的是被输出值的拷贝，不是引用。&lt;/p&gt;
&lt;p&gt;另外，由于 CommonJS 模块遇到循环加载时，返回的是当前已经执行的部分的值，而不是代码全部执行后的值，两者可能会有差异。所以，输入变量的时候，必须非常小心。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 安全的写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;).foo; &lt;span class=&quot;comment&quot;&gt;// 危险的写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.good = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;arg&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.foo(&lt;span class=&quot;string&quot;&gt;&#39;good&#39;&lt;/span&gt;, arg); &lt;span class=&quot;comment&quot;&gt;// 使用的是 a.foo 的最新值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.bad = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;arg&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; foo(&lt;span class=&quot;string&quot;&gt;&#39;bad&#39;&lt;/span&gt;, arg); &lt;span class=&quot;comment&quot;&gt;// 使用的是一个部分加载时的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，如果发生循环加载，&lt;code&gt;require(&#39;a&#39;).foo&lt;/code&gt;的值很可能后面会被改写，改用&lt;code&gt;require(&#39;a&#39;)&lt;/code&gt;会更保险一点。&lt;/p&gt;
&lt;h5 id=&quot;ES6-模块的循环加载&quot;&gt;&lt;a href=&quot;#ES6-模块的循环加载&quot; class=&quot;headerlink&quot; title=&quot;ES6 模块的循环加载&quot;&gt;&lt;/a&gt;ES6 模块的循环加载&lt;/h5&gt;&lt;p&gt;ES6 处理“循环加载”与 CommonJS 有本质的不同。ES6 模块是动态引用，如果使用&lt;code&gt;import&lt;/code&gt;从一个模块加载变量（即&lt;code&gt;import foo from &#39;foo&#39;&lt;/code&gt;），那些变量不会被缓存，而是成为一个指向被加载模块的引用，需要开发者自己保证，真正取值的时候能够取到值。&lt;/p&gt;
&lt;p&gt;请看下面这个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// a.mjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {bar} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./b&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;a.mjs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bar);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// b.mjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {foo} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;b.mjs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; bar = &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;a.mjs&lt;/code&gt;加载&lt;code&gt;b.mjs&lt;/code&gt;，&lt;code&gt;b.mjs&lt;/code&gt;又加载&lt;code&gt;a.mjs&lt;/code&gt;，构成循环加载。执行&lt;code&gt;a.mjs&lt;/code&gt;，结果如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node --experimental-modules a.mjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.mjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;ReferenceError&lt;/span&gt;: foo is not defined&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，执行&lt;code&gt;a.mjs&lt;/code&gt;以后会报错，&lt;code&gt;foo&lt;/code&gt;变量未定义，这是为什么？&lt;/p&gt;
&lt;p&gt;让我们一行行来看，ES6 循环加载是怎么处理的。首先，执行&lt;code&gt;a.mjs&lt;/code&gt;以后，引擎发现它加载了&lt;code&gt;b.mjs&lt;/code&gt;，因此会优先执行&lt;code&gt;b.mjs&lt;/code&gt;，然后再执行&lt;code&gt;a.mjs&lt;/code&gt;。接着，执行&lt;code&gt;b.mjs&lt;/code&gt;的时候，已知它从&lt;code&gt;a.mjs&lt;/code&gt;输入了&lt;code&gt;foo&lt;/code&gt;接口，这时不会去执行&lt;code&gt;a.mjs&lt;/code&gt;，而是认为这个接口已经存在了，继续往下执行。执行到第三行&lt;code&gt;console.log(foo)&lt;/code&gt;的时候，才发现这个接口根本没定义，因此报错。&lt;/p&gt;
&lt;p&gt;解决这个问题的方法，就是让&lt;code&gt;b.mjs&lt;/code&gt;运行的时候，&lt;code&gt;foo&lt;/code&gt;已经有定义了。这可以通过将&lt;code&gt;foo&lt;/code&gt;写成函数来解决。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// a.mjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {bar} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./b&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;a.mjs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bar());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {foo};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// b.mjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {foo} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;b.mjs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {bar};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这时再执行&lt;code&gt;a.mjs&lt;/code&gt;就可以得到预期结果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node --experimental-modules a.mjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.mjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.mjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这是因为函数具有提升作用，在执行&lt;code&gt;import {bar} from &#39;./b&#39;&lt;/code&gt;时，函数&lt;code&gt;foo&lt;/code&gt;就已经有定义了，所以&lt;code&gt;b.mjs&lt;/code&gt;加载的时候不会报错。这也意味着，如果把函数&lt;code&gt;foo&lt;/code&gt;改写成函数表达式，也会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// a.mjs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; {bar} &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./b&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;a.mjs&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bar());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; foo = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; {foo};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的第四行，改成了函数表达式，就不具有提升作用，执行就会报错。&lt;/p&gt;
&lt;p&gt;我们再来看 ES6 模块加载器 &lt;a href=&quot;https://github.com/ModuleLoader/es6-module-loader/blob/master/docs/circular-references-bindings.md&quot;&gt;SystemJS&lt;/a&gt; 给出的一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// even.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { odd } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./odd&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;even&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  counter++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || odd(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// odd.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { even } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./even&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;odd&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n !== &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; even(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;even.js&lt;/code&gt;里面的函数&lt;code&gt;even&lt;/code&gt;有一个参数&lt;code&gt;n&lt;/code&gt;，只要不等于 0，就会减去 1，传入加载的&lt;code&gt;odd()&lt;/code&gt;。&lt;code&gt;odd.js&lt;/code&gt;也会做类似操作。&lt;/p&gt;
&lt;p&gt;运行上面这段代码，结果如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ babel-node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; m &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./even.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; m.even(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; m.counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; m.even(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; m.counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，参数&lt;code&gt;n&lt;/code&gt;从 10 变为 0 的过程中，&lt;code&gt;even()&lt;/code&gt;一共会执行 6 次，所以变量&lt;code&gt;counter&lt;/code&gt;等于 6。第二次调用&lt;code&gt;even()&lt;/code&gt;时，参数&lt;code&gt;n&lt;/code&gt;从 20 变为 0，&lt;code&gt;even()&lt;/code&gt;一共会执行 11 次，加上前面的 6 次，所以变量&lt;code&gt;counter&lt;/code&gt;等于 17。&lt;/p&gt;
&lt;p&gt;这个例子要是改写成 CommonJS，就根本无法执行，会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// even.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; odd = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./odd&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; counter = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.counter = counter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.even = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  counter++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || odd(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// odd.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; even = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./even&#39;&lt;/span&gt;).even;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; even(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;even.js&lt;/code&gt;加载&lt;code&gt;odd.js&lt;/code&gt;，而&lt;code&gt;odd.js&lt;/code&gt;又去加载&lt;code&gt;even.js&lt;/code&gt;，形成“循环加载”。这时，执行引擎就会输出&lt;code&gt;even.js&lt;/code&gt;已经执行的部分（不存在任何结果），所以在&lt;code&gt;odd.js&lt;/code&gt;之中，变量&lt;code&gt;even&lt;/code&gt;等于&lt;code&gt;undefined&lt;/code&gt;，等到后面调用&lt;code&gt;even(n - 1)&lt;/code&gt;就会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./even&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; m.even(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;TypeError&lt;/span&gt;: even is not a &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;参考链接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://es6.ruanyifeng.com/#docs/module&quot;&gt;Module 的语法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://es6.ruanyifeng.com/#docs/module-loader&quot;&gt;Module</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十六）：ES6常用基础合集</title>
    <link href="https://fe32.top/articles/jsnb9543/"/>
    <id>https://fe32.top/articles/jsnb9543/</id>
    <published>2022-06-30T15:16:39.000Z</published>
    <updated>2023-06-27T14:39:00.753Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;变量声明方式-let-const&quot;&gt;&lt;a href=&quot;#变量声明方式-let-const&quot; class=&quot;headerlink&quot; title=&quot;变量声明方式 let/const&quot;&gt;&lt;/a&gt;变量声明方式 let/const&lt;/h2&gt;&lt;p&gt;与 var 不同，新的变量声明方式带来了一些不一样的特性，其中最重要的两个特性就是提供了块级作用域与不再具备变量提升。通过 2 个简单的例子来说明这两点。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);  &lt;span class=&quot;comment&quot;&gt;// a is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;而这个简单的例子，会被编译为：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; _a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);  &lt;span class=&quot;comment&quot;&gt;// a is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);   &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// a is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/30/62bdc11480eb3.webp&quot; alt=&quot;变量提升demo示例&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;变量提升demo示例&lt;/span&gt;&lt;/div&gt;

&lt;p class=&quot;p blue&quot;&gt;我们常常使用let来声明一个值会被改变的变量，而使用const来声明一个值不会被改变的变量，也可以称之为常量。&lt;/p&gt;

&lt;p&gt;当值为基础数据类型时，那么这里的值，就是指值本身。&lt;br&gt;而当值对应的为引用数据类型时，那么这里说的值，则表示指向该对象的引用。这里需要注意，正因为该值为一个引用，只需要保证引用不变就可以，仍然可以改变该引用所指向的对象。&lt;/p&gt;
&lt;p&gt;当我们试图改变 const 声明的变量时，则会报错。&lt;/p&gt;
&lt;p&gt;写几个例子，大家可以仔细揣摩一下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; obDev = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b: &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obDev.a = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(obDev); &lt;span class=&quot;comment&quot;&gt;// Object {a: 30, b: 30}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; fn = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; a = obDev.a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;箭头函数的使用&quot;&gt;&lt;a href=&quot;#箭头函数的使用&quot; class=&quot;headerlink&quot; title=&quot;箭头函数的使用&quot;&gt;&lt;/a&gt;箭头函数的使用&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6 箭头函数写法，当函数直接被return时，可以省略函数体的括号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; fn = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; foo = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;箭头函数可以替换函数表达式，但是不能替换函数声明。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其次还有一个至关重要的一点，就是箭头函数中，没有this。如果你在箭头函数中使用了this，那么该this一定就是外层的this。因此我们也就无从谈起用call/apply/bind来改变this指向。记住这个特性，能让你在react组件之间传值时少走无数弯路。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 我们试图用ES6的写法来重构上面的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 但是编译结果却是&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;在ES6中，会默认采用严格模式，因此this也不会自动指向window对象了，而箭头函数本身并没有this，因此this就只能是undefined，这种情况，如果你还想用this，就不要用使用箭头函数的写法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 可以稍做改动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 编译之后变成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _this = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 使用了我们在es5时常用的方式保存this引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _this.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;模板字符串&quot;&gt;&lt;a href=&quot;#模板字符串&quot; class=&quot;headerlink&quot; title=&quot;模板字符串&quot;&gt;&lt;/a&gt;模板字符串&lt;/h2&gt;&lt;p&gt;模板字符串是为了解决使用&lt;code&gt;+&lt;/code&gt;号拼接字符串的不便利而出现的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; string = &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${a}&lt;/span&gt;+&lt;span class=&quot;subst&quot;&gt;${b}&lt;/span&gt;=&lt;span class=&quot;subst&quot;&gt;${a+b}&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; string = a + &lt;span class=&quot;string&quot;&gt;&quot;+&quot;&lt;/span&gt; + b + &lt;span class=&quot;string&quot;&gt;&quot;=&quot;&lt;/span&gt; + (a + b);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;解析结构&quot;&gt;&lt;a href=&quot;#解析结构&quot; class=&quot;headerlink&quot; title=&quot;解析结构&quot;&gt;&lt;/a&gt;解析结构&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 首先有这么一个对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; props = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    className: &lt;span class=&quot;string&quot;&gt;&#39;tiger-button&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loading: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clicked: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    disabled: &lt;span class=&quot;string&quot;&gt;&#39;disabled&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当我们想要取得其中的2个值：&lt;code&gt;loading&lt;/code&gt;与&lt;code&gt;clicked&lt;/code&gt;时：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; loading = props.loading;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; clicked = props.clicked;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { loading, clicked } = props;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 给一个默认值，当props对象中找不到loading时，loading就等于该默认值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { loading = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, clicked } = props;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;是不是简单了许多？正是由于解析结构大大减少了代码量，因此它大受欢迎，在很多代码中它的影子随处可见。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 比如&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// section1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React, { Component } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// section2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; { &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./Button&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// section3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { click, loading } = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.props;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { isCheck } = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// more  任何获取对象属性值的场景都可以使用解析结构来减少我们的代码量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;另外，数组也有属于自己的解析结构。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; [a, b, c] = arr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = arr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = arr[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = arr[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;数组以序列号一一对应，这是一个有序的对应关系。&lt;br&gt;而对象根据属性名一一对应，这是一个无序的对应关系。&lt;/p&gt;
&lt;p&gt;根据这个特性，使用解析结构从对象中获取属性值更加具有可用性。&lt;/p&gt;
&lt;h2 id=&quot;函数默认参数&quot;&gt;&lt;a href=&quot;#函数默认参数&quot; class=&quot;headerlink&quot; title=&quot;函数默认参数&quot;&gt;&lt;/a&gt;函数默认参数&lt;/h2&gt;&lt;p&gt;之前我们不能直接为函数指定默认参数，很多时候为了保证传入的参数具备一个默认值，常常使用如下的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x, y&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = x || &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; y = y || &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(add()); &lt;span class=&quot;comment&quot;&gt;// 50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;这种方式并不是没有缺点，比如传入一个x值为false，这个时候任然会取到默认值，就不是我们的本意了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ES6的默认值写法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, y = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x + y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(add());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在实际开发中给参数添加适当的默认值，可以让我们对函数的参数类型有一个直观的认知。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ButtonGroupProps = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size: &lt;span class=&quot;string&quot;&gt;&#39;normal&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    className: &lt;span class=&quot;string&quot;&gt;&#39;xxxx-button-group&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderColor: &lt;span class=&quot;string&quot;&gt;&#39;#333&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ButtonGroup&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;props = ButtonGroupProps&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ... ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;扩展运算符&quot;&gt;&lt;a href=&quot;#扩展运算符&quot; class=&quot;headerlink&quot; title=&quot;扩展运算符&quot;&gt;&lt;/a&gt;扩展运算符&lt;/h2&gt;&lt;p&gt;扩展运算符（spread）是三个点（…）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; arr1 = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; arr2 = [...arr1, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这样，arr2 就变成了[1, 2, 3, 10, 20, 30];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然，展开对象数据也是可以得到类似的结果：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; obj1 = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  b: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; obj2 = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...obj1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  d: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  e: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  f: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 结果类似于 const obj2 = Object.assign({}, obj1, {d: 4})&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;展开运算符还常常运用在解析结构之中，例如我们在Raect封装组件的时候常常不确定props到底还有多少数据会传进来，就会利用展开运算符来处理剩余的数据。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这种方式在react中十分常用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; props = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  src: &lt;span class=&quot;string&quot;&gt;&#39;xxxx&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mode: &lt;span class=&quot;string&quot;&gt;&#39;si&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { size, ...others } = props;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(others)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 然后再利用暂开运算符传递给下一个元素，再以后封装react组件时会大量使用到这种方式，正在学习react的同学一定要搞懂这种使用方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;button {...others} size={size} /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;展开运算符还用在函数的参数中，来表示函数的不定参。只有放在最后才能作为函数的不定参，否则会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 所有参数之和&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; add = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;a, b, ...more&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; more.reduce(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;m, n&lt;/span&gt;) =&amp;gt;&lt;/span&gt; m + n) + a + b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)) &lt;span class=&quot;comment&quot;&gt;// 39&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;对象字面量-与-class&quot;&gt;&lt;a href=&quot;#对象字面量-与-class&quot; class=&quot;headerlink&quot; title=&quot;对象字面量 与 class&quot;&gt;&lt;/a&gt;对象字面量 与 class&lt;/h2&gt;&lt;p&gt;ES6针对对象字面量做了许多简化语法的处理。&lt;/p&gt;
&lt;p class=&quot;p blue&quot;&gt;1. 当属性与值的变量同名时&lt;/p&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;Jane&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; age = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  age: age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么这种方式在任何地方都可以使用，比如在一个模块对外提供接口时&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; getName = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; person.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; getAge = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; person.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// commonJS的方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = { getName, getAge }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6 modules的方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; { getName, getAge  }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p class=&quot;p blue&quot;&gt;2. 除了属性之外，对象字面量写法中的方法也可以有简写方式。&lt;/p&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  age,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; { &lt;span class=&quot;comment&quot;&gt;// 只要不使用箭头函数，this就还是我们熟悉的this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  age: age,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 Ant-Design 的源码实现中，就大量使用了这种方式来拼接当前元素的 className，例如:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; alertCls = classNames(prefixCls, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${prefixCls}&lt;/span&gt;-&lt;span class=&quot;subst&quot;&gt;${type}&lt;/span&gt;`&lt;/span&gt;]: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${prefixCls}&lt;/span&gt;-close`&lt;/span&gt;]: !&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.state.closing,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${prefixCls}&lt;/span&gt;-with-description`&lt;/span&gt;]: !!description,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${prefixCls}&lt;/span&gt;-no-icon`&lt;/span&gt;]: !showIcon,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      [&lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${prefixCls}&lt;/span&gt;-banner`&lt;/span&gt;]: !!banner,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; }, className);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;Ant-Design是一个认可度非常高的UI组件库，官方使用react的方式进行了实现，除此之外，还有vue也有对应的实现，有兴趣的同学可以去他们的官网了解学习。&lt;a href=&quot;https://ant.design/index-cn&quot;&gt;https://ant.design/index-cn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;p blue&quot;&gt;3. Class&lt;/p&gt;

&lt;p&gt;ES6 为我们创建对象提供了新的语法糖，这就是 Class 语法。如果你对ES5中面向对象的方式比较熟悉的话，Class 掌握起来也是非常迅速的，因为除了写法的不同，它并不会增加新的难以理解的知识点。我们先利用一个简单的例子来看看写法的不同。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 原型方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ES6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;)&lt;/span&gt; {  &lt;span class=&quot;comment&quot;&gt;// 构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {  &lt;span class=&quot;comment&quot;&gt;// 原型方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;除此之外，还需要特别注意在实际使用中的几种写法方式的不同，在下面的例子注释中，我说明了他们分别对应的 ES5中 的含义。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;)&lt;/span&gt; {  &lt;span class=&quot;comment&quot;&gt;// 构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {   &lt;span class=&quot;comment&quot;&gt;// 这种写法表示将方法添加到原型中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 等同于 Person.a = 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;   &lt;span class=&quot;comment&quot;&gt;// 表示在构造函数中添加属性 在构造函数中等同于 this.c = 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 箭头函数的写法表示在构造函数中添加方法，在构造函数中等同于this.getAge = function() {}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getAge = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;箭头函数需要注意的仍然是this的指向问题，因为箭头函数this指向不能被改变的特性，因此在react组件中常常利用这个特性来在不同的组件进行传值会更加方便。&lt;/p&gt;
&lt;p class=&quot;p blue&quot;&gt;4. 继承 extends&lt;/p&gt;

&lt;p&gt;相比ES5，ES6的继承就要简单很多，我们直接来看一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Student类继承Person类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, gender, classes&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;super&lt;/span&gt;(name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.gender = gender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.classes = classes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getGender&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.gender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们只需要一个&lt;code&gt;extends&lt;/code&gt;关键字，就可以实现继承了，不用像ES5那样去担心构造函数继承和原型继承，除此之外，我们还需要关注一个叫做super的方法。&lt;/p&gt;
&lt;p&gt;在继承的构造函数中，我们必须如上面的例子那么调用一次&lt;code&gt;super&lt;/code&gt;方法，它表示构造函数的继承，与ES5中利用&lt;code&gt;call/apply&lt;/code&gt;继承构造函数是一样的功能。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 构造函数中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;super&lt;/span&gt;(name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// es5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.call(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;super还可以直接调用父级的原型方法，&lt;code&gt;super.getName&lt;/code&gt;，但是我自己从来没这样用过，也就不扩展说了。&lt;br&gt;继承在react中有大量的使用场景，许多组件都利用继承来创建。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React, { Component } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  defaultProps = {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  state = {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;componentWillMount&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;componentDidMount&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  btnClick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Promise&quot;&gt;&lt;a href=&quot;#Promise&quot; class=&quot;headerlink&quot; title=&quot;Promise&quot;&gt;&lt;/a&gt;Promise&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://fe32.top/articles/jsnb9542/&quot;&gt;前端基础进阶（十五）：详解 Promise对象&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;模块-Modules&quot;&gt;&lt;a href=&quot;#模块-Modules&quot; class=&quot;headerlink&quot; title=&quot;模块 Modules&quot;&gt;&lt;/a&gt;模块 Modules&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://fe32.top/articles/jsnb9542/&quot;&gt;前端基础进阶（十五）：详解 ES6</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十五）：详解 Promise对象</title>
    <link href="https://fe32.top/articles/jsnb9542/"/>
    <id>https://fe32.top/articles/jsnb9542/</id>
    <published>2022-06-29T14:08:16.000Z</published>
    <updated>2023-06-27T14:39:00.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;文章的开头，主要分析一下，为什么会有 Promise 出现。&lt;/p&gt;
&lt;p&gt;在实际的使用中，有非常多的应用场景我们不能立即知道应该如何继续往下执行。最常见的一个场景就是 ajax 请求。通俗来说，由于网速的不同，可能你得到返回值的时间也是不同的，这个时候我们就需要等待，结果出来了之后才知道怎么样继续下去。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 简单的ajax原生实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&#39;https://hq.tigerbrokers.com/fundamental/finance_calendar/getType/2017-02-26/2017-06-10&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; XHR = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XHR.open(&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, url, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XHR.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XHR.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (XHR.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; XHR.status == &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = XHR.response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 ajax 的原生实现中，利用了&lt;code&gt;onreadystatechange&lt;/code&gt;事件，当该事件触发并且符合一定条件时，才能拿到想要的数据，之后才能开始处理数据。&lt;/p&gt;
&lt;p&gt;这样做看上去并没有什么麻烦，但如果这个时候，我们还需要另外一个 ajax 请求，这个新 ajax 请求的其中一个参数，得从上一个 ajax 请求中获取，这个时候就不得不等待上一个接口请求完成之后，再请求后一个接口。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&#39;https://hq.tigerbrokers.com/fundamental/finance_calendar/getType/2017-02-26/2017-06-10&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; XHR = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XHR.open(&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, url, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XHR.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XHR.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (XHR.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; XHR.status == &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = XHR.response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 伪代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url2 = &lt;span class=&quot;string&quot;&gt;&#39;http:xxx.yyy.com/zzz?ddd=&#39;&lt;/span&gt; + result.someParams;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; XHR2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        XHR2.open(&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, url, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        XHR2.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        XHR2.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当出现第三个 ajax (甚至更多)仍然依赖上一个请求时，我们的代码就变成了一场灾难。这场灾难，往往也被称为 &lt;span class=&quot;p blue&quot;&gt;回调地狱&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;因此需要一个叫做 Promise 的东西，来解决这个问题。&lt;/p&gt;
&lt;p&gt;当然，除了回调地狱之外，还有一个非常重要的需求：&lt;span class=&quot;p blue&quot;&gt;为了代码更加具有可读性和可维护性，需要将数据请求与数据处理明确的区分开来&lt;/span&gt; 。上面的写法，是完全没有区分开，当数据变得复杂时，也许连自己都无法轻松维护自己的代码了。这也是模块化过程中，必须要掌握的一个重要技能，请一定重视。&lt;/p&gt;
&lt;p&gt;从前面几篇文中的知识我们可以得知，想要确保某代码在谁谁之后执行，我们可以利用函数调用栈，将想要执行的代码放入回调函数中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 一个简单的封装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;want&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;这是你想要执行的代码&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;want&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;这里表示执行了一大堆各种代码&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 其它代码执行完毕，最后执行回调函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    want &amp;amp;&amp;amp; want();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(want);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;利用回调函数封装，是我们在初学 JavaScript 时常常会使用的技能。确保我们想要的代码压后执行，除了利用函数调用栈的执行顺序之外，还可以利用上一篇文章所述的队列机制。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;want&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;这是你想要执行的代码&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;want&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 将想要执行的代码放入队列中，根据事件循环的机制，我们就不用非得将它放到最后面了，由你自由选择&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    want &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(want, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;这里表示执行了一大堆各种代码&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(want);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果浏览器已经支持了原生的 Promise 对象，那么我们就知道，浏览器的js引擎里已经有了 Promise 队列，这样就可以利用 Promise 将任务放在它的队列中去。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;want&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;这是你想要执行的代码&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;want&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;这里表示执行了一大堆各种代码&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 返回Promise对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; want == &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            resolve(want);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reject(&lt;span class=&quot;string&quot;&gt;&#39;TypeError: &#39;&lt;/span&gt;+ want +&lt;span class=&quot;string&quot;&gt;&#39;不是一个函数&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(want).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;want&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    want();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(&lt;span class=&quot;string&quot;&gt;&#39;1234&#39;&lt;/span&gt;).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;看上去变得更加复杂了。可是代码变得更加健壮，处理了错误输入的情况。&lt;/p&gt;
&lt;h2 id=&quot;Promise&quot;&gt;&lt;a href=&quot;#Promise&quot; class=&quot;headerlink&quot; title=&quot;Promise&quot;&gt;&lt;/a&gt;Promise&lt;/h2&gt;&lt;h3 id=&quot;Promise-的含义&quot;&gt;&lt;a href=&quot;#Promise-的含义&quot; class=&quot;headerlink&quot; title=&quot;Promise 的含义&quot;&gt;&lt;/a&gt;Promise 的含义&lt;/h3&gt;&lt;p&gt;Promise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。它由社区最早提出和实现，ES6 将其写进了语言标准，统一了用法，原生提供了&lt;code&gt;Promise&lt;/code&gt;对象。&lt;/p&gt;
&lt;p&gt;所谓&lt;code&gt;Promise&lt;/code&gt;，简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。从语法上说，Promise 是一个对象，从它可以获取异步操作的消息。Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise&lt;/code&gt;对象有以下两个特点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对象的状态不受外界影响。&lt;code&gt;Promise&lt;/code&gt;对象代表一个异步操作，有三种状态：&lt;code&gt;pending&lt;/code&gt;（进行中）、&lt;code&gt;fulfilled&lt;/code&gt;（已成功）和&lt;code&gt;rejected&lt;/code&gt;（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改变这个状态。这也是&lt;code&gt;Promise&lt;/code&gt;这个名字的由来，它的英语意思就是“承诺”，表示其他手段无法改变。&lt;/li&gt;
&lt;li&gt;一旦状态改变，就不会再变，任何时候都可以得到这个结果。&lt;code&gt;Promise&lt;/code&gt;对象的状态改变，只有两种可能：从&lt;code&gt;pending&lt;/code&gt;变为&lt;code&gt;fulfilled&lt;/code&gt;和从&lt;code&gt;pending&lt;/code&gt;变为rejected。只要这两种情况发生，状态就凝固了，不会再变了，会一直保持这个结果，这时就称为 resolved（已定型）。如果改变已经发生了，你再对Promise对象添加回调函数，也会立即得到这个结果。这与事件（Event）完全不同，事件的特点是，如果你错过了它，再去监听，是得不到结果的。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，为了行文方便，本章后面的&lt;code&gt;resolved&lt;/code&gt;统一只指&lt;code&gt;fulfilled&lt;/code&gt;状态，不包含&lt;code&gt;rejected&lt;/code&gt;状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了&lt;code&gt;Promise&lt;/code&gt;对象，就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。此外，&lt;code&gt;Promise&lt;/code&gt;对象提供统一的接口，使得控制异步操作更加容易。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise&lt;/code&gt;也有一些缺点。首先，无法取消&lt;code&gt;Promise&lt;/code&gt;，一旦新建它就会立即执行，无法中途取消。其次，如果不设置回调函数，&lt;code&gt;Promise&lt;/code&gt;内部抛出的错误，不会反应到外部。第三，当处于&lt;code&gt;pending&lt;/code&gt;状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）。&lt;/p&gt;
&lt;p&gt;如果某些事件不断地反复发生，一般来说，使用 Stream 模式是比部署Promise更好的选择。&lt;/p&gt;
&lt;h3 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h3&gt;&lt;p&gt;ES6 规定，&lt;code&gt;Promise&lt;/code&gt;对象是一个构造函数，用来生成&lt;code&gt;Promise&lt;/code&gt;实例。&lt;/p&gt;
&lt;p&gt;下面代码创造了一个&lt;code&gt;Promise&lt;/code&gt;实例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ... some code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;comment&quot;&gt;/* 异步操作成功 */&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reject(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;Promise&lt;/code&gt;构造函数接受一个函数作为参数，该函数的两个参数分别是&lt;code&gt;resolve&lt;/code&gt;和&lt;code&gt;reject&lt;/code&gt;。它们是两个函数，由 JavaScript 引擎提供，不用自己部署。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;resolve&lt;/code&gt;函数的作用是，将&lt;code&gt;Promise&lt;/code&gt;对象的状态从“未完成”变为“成功”（即从 pending 变为 resolved），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去；&lt;code&gt;reject&lt;/code&gt;函数的作用是，将&lt;code&gt;Promise&lt;/code&gt;对象的状态从“未完成”变为“失败”（即从 pending 变为 rejected），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise&lt;/code&gt;实例生成以后，可以用&lt;code&gt;then&lt;/code&gt;方法分别指定&lt;code&gt;resolved&lt;/code&gt;状态和&lt;code&gt;rejected&lt;/code&gt;状态的回调函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;promise.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// success&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;then&lt;/code&gt;方法可以接受两个回调函数作为参数。第一个回调函数是&lt;code&gt;Promise&lt;/code&gt;对象的状态变为&lt;code&gt;resolved&lt;/code&gt;时调用，第二个回调函数是&lt;code&gt;Promise&lt;/code&gt;对象的状态变为&lt;code&gt;rejected&lt;/code&gt;时调用。这两个函数都是可选的，不一定要提供。它们都接受&lt;code&gt;Promise&lt;/code&gt;对象传出的值作为参数。&lt;/p&gt;
&lt;p&gt;下面是一个&lt;code&gt;Promise&lt;/code&gt;对象的简单例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timeout&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ms&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(resolve, ms, &lt;span class=&quot;string&quot;&gt;&#39;done&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timeout(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;timeout&lt;/code&gt;方法返回一个&lt;code&gt;Promise&lt;/code&gt;实例，表示一段时间以后才会发生的结果。过了指定的时间（&lt;code&gt;ms&lt;/code&gt;参数）以后，&lt;code&gt;Promise&lt;/code&gt;实例的状态变为&lt;code&gt;resolved&lt;/code&gt;，就会触发&lt;code&gt;then&lt;/code&gt;方法绑定的回调函数。&lt;/p&gt;
&lt;p&gt;Promise 新建后就会立即执行。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;resolved.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Hi!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Hi!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// resolved&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，Promise 新建后立即执行，所以首先输出的是&lt;code&gt;Promise&lt;/code&gt;。然后，&lt;code&gt;then&lt;/code&gt;方法指定的回调函数，将在当前脚本所有同步任务执行完才会执行，所以&lt;code&gt;resolved&lt;/code&gt;最后输出。&lt;/p&gt;
&lt;p&gt;下面是异步加载图片的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadImageAsync&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;url&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; image = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      resolve(image);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.onerror = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      reject(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Could not load image at &#39;&lt;/span&gt; + url));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.src = url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，使用&lt;code&gt;Promise&lt;/code&gt;包装了一个图片加载的异步操作。如果加载成功，就调用&lt;code&gt;resolve&lt;/code&gt;方法，否则就调用&lt;code&gt;reject&lt;/code&gt;方法。&lt;/p&gt;
&lt;p&gt;下面是一个用&lt;code&gt;Promise&lt;/code&gt;对象实现的 Ajax 操作的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; getJSON = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;url&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handler = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.readyState !== &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.status === &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reject(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.statusText));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; client = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.open(&lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.onreadystatechange = handler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.responseType = &lt;span class=&quot;string&quot;&gt;&quot;json&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;Accept&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; promise;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getJSON(&lt;span class=&quot;string&quot;&gt;&quot;/posts.json&quot;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;json&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Contents: &#39;&lt;/span&gt; + json);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.error(&lt;span class=&quot;string&quot;&gt;&#39;出错了&#39;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;getJSON&lt;/code&gt;是对 XMLHttpRequest 对象的封装，用于发出一个针对 JSON 数据的 HTTP 请求，并且返回一个&lt;code&gt;Promise&lt;/code&gt;对象。需要注意的是，在&lt;code&gt;getJSON&lt;/code&gt;内部，&lt;code&gt;resolve&lt;/code&gt;函数和&lt;code&gt;reject&lt;/code&gt;函数调用时，都带有参数。&lt;/p&gt;
&lt;p&gt;如果调用&lt;code&gt;resolve&lt;/code&gt;函数和&lt;code&gt;reject&lt;/code&gt;函数时带有参数，那么它们的参数会被传递给回调函数。&lt;code&gt;reject&lt;/code&gt;函数的参数通常是&lt;code&gt;Error&lt;/code&gt;对象的实例，表示抛出的错误；&lt;code&gt;resolve&lt;/code&gt;函数的参数除了正常的值以外，还可能是另一个 Promise 实例，比如像下面这样。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve(p1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;p1&lt;/code&gt;和&lt;code&gt;p2&lt;/code&gt;都是 Promise 的实例，但是&lt;code&gt;p2&lt;/code&gt;的&lt;code&gt;resolve&lt;/code&gt;方法将&lt;code&gt;p1&lt;/code&gt;作为参数，即一个异步操作的结果是返回另一个异步操作。&lt;/p&gt;
&lt;p&gt;注意，这时&lt;code&gt;p1&lt;/code&gt;的状态就会传递给&lt;code&gt;p2&lt;/code&gt;，也就是说，&lt;code&gt;p1&lt;/code&gt;的状态决定了&lt;code&gt;p2&lt;/code&gt;的状态。如果&lt;code&gt;p1&lt;/code&gt;的状态是&lt;code&gt;pending&lt;/code&gt;，那么&lt;code&gt;p2&lt;/code&gt;的回调函数就会等待&lt;code&gt;p1&lt;/code&gt;的状态改变；如果&lt;code&gt;p1&lt;/code&gt;的状态已经是&lt;code&gt;resolved&lt;/code&gt;或者&lt;code&gt;rejected&lt;/code&gt;，那么&lt;code&gt;p2&lt;/code&gt;的回调函数将会立刻执行。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; reject(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;fail&#39;&lt;/span&gt;)), &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; resolve(p1), &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(error))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Error: fail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;p1&lt;/code&gt;是一个 Promise，3 秒之后变为&lt;code&gt;rejected&lt;/code&gt;。&lt;code&gt;p2&lt;/code&gt;的状态在 1 秒之后改变，&lt;code&gt;resolve&lt;/code&gt;方法返回的是&lt;code&gt;p1&lt;/code&gt;。由于&lt;code&gt;p2&lt;/code&gt;返回的是另一个 Promise，导致&lt;code&gt;p2&lt;/code&gt;自己的状态无效了，由&lt;code&gt;p1&lt;/code&gt;的状态决定&lt;code&gt;p2&lt;/code&gt;的状态。所以，后面的then语句都变成针对后者（&lt;code&gt;p1&lt;/code&gt;）。又过了 2 秒，&lt;code&gt;p1&lt;/code&gt;变为&lt;code&gt;rejected&lt;/code&gt;，导致触发&lt;code&gt;catch&lt;/code&gt;方法指定的回调函数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，调用&lt;code&gt;resolve&lt;/code&gt;或&lt;code&gt;reject&lt;/code&gt;并不会终结 Promise 的参数函数的执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;r&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(r);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，调用&lt;code&gt;resolve(1)&lt;/code&gt;以后，后面的&lt;code&gt;console.log(2)&lt;/code&gt;还是会执行，并且会首先打印出来。这是因为立即 resolved 的 Promise 是在本轮事件循环的末尾执行，总是晚于本轮循环的同步任务。&lt;/p&gt;
&lt;p&gt;一般来说，调用&lt;code&gt;resolve&lt;/code&gt;或&lt;code&gt;reject&lt;/code&gt;以后，Promise 的使命就完成了，后继操作应该放到&lt;code&gt;then&lt;/code&gt;方法里面，而不应该直接写在&lt;code&gt;resolve&lt;/code&gt;或&lt;code&gt;reject&lt;/code&gt;的后面。所以，最好在它们前面加上&lt;code&gt;return&lt;/code&gt;语句，这样就不会有意外。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; resolve(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 后面的语句不会执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Promise-prototype-then&quot;&gt;&lt;a href=&quot;#Promise-prototype-then&quot; class=&quot;headerlink&quot; title=&quot;Promise.prototype.then()&quot;&gt;&lt;/a&gt;Promise.prototype.then()&lt;/h3&gt;&lt;p&gt;Promise 实例具有&lt;code&gt;then&lt;/code&gt;方法，也就是说，&lt;code&gt;then&lt;/code&gt;方法是定义在原型对象&lt;code&gt;Promise.prototype&lt;/code&gt;上的。它的作用是为 Promise 实例添加状态改变时的回调函数。前面说过，&lt;code&gt;then&lt;/code&gt;方法的第一个参数是&lt;code&gt;resolved&lt;/code&gt;状态的回调函数，第二个参数是&lt;code&gt;rejected&lt;/code&gt;状态的回调函数，它们都是可选的。&lt;/p&gt;
&lt;p&gt;then方法返回的是一个新的Promise实例（注意，不是原来那个Promise实例）。因此可以采用链式写法，即&lt;code&gt;then&lt;/code&gt;方法后面再调用另一个&lt;code&gt;then&lt;/code&gt;方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;getJSON(&lt;span class=&quot;string&quot;&gt;&quot;/posts.json&quot;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;json&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; json.post;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;post&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的代码使用&lt;code&gt;then&lt;/code&gt;方法，依次指定了两个回调函数。第一个回调函数完成以后，会将返回结果作为参数，传入第二个回调函数。&lt;/p&gt;
&lt;p&gt;采用链式的&lt;code&gt;then&lt;/code&gt;，可以指定一组按照次序调用的回调函数。这时，前一个回调函数，有可能返回的还是一个&lt;code&gt;Promise&lt;/code&gt;对象（即有异步操作），这时后一个回调函数，就会等待该&lt;code&gt;Promise&lt;/code&gt;对象的状态发生变化，才会被调用。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;getJSON(&lt;span class=&quot;string&quot;&gt;&quot;/post/1.json&quot;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;post&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getJSON(post.commentURL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;comments&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;resolved: &quot;&lt;/span&gt;, comments);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;rejected: &quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，第一个&lt;code&gt;then&lt;/code&gt;方法指定的回调函数，返回的是另一个&lt;code&gt;Promise&lt;/code&gt;对象。这时，第二个then方法指定的回调函数，就会等待这个新的&lt;code&gt;Promise&lt;/code&gt;对象状态发生变化。如果变为&lt;code&gt;resolved&lt;/code&gt;，就调用第一个回调函数，如果状态变为&lt;code&gt;rejected&lt;/code&gt;，就调用第二个回调函数。&lt;/p&gt;
&lt;p&gt;如果采用箭头函数，上面的代码可以写得更简洁。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;getJSON(&lt;span class=&quot;string&quot;&gt;&quot;/post/1.json&quot;&lt;/span&gt;).then(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  post =&amp;gt; getJSON(post.commentURL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;).then(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  comments =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;resolved: &quot;&lt;/span&gt;, comments),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  err =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;rejected: &quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Promise-prototype-catch&quot;&gt;&lt;a href=&quot;#Promise-prototype-catch&quot; class=&quot;headerlink&quot; title=&quot;Promise.prototype.catch()&quot;&gt;&lt;/a&gt;Promise.prototype.catch()&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Promise.prototype.catch()&lt;/code&gt;方法是&lt;code&gt;.then(null, rejection)&lt;/code&gt;或&lt;code&gt;.then(undefined, rejection)&lt;/code&gt;的别名，用于指定发生错误时的回调函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;getJSON(&lt;span class=&quot;string&quot;&gt;&#39;/posts.json&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;posts&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 处理 getJSON 和 前一个回调函数运行时发生的错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;发生错误！&#39;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;getJSON()&lt;/code&gt;方法返回一个 Promise 对象，如果该对象状态变为&lt;code&gt;resolved&lt;/code&gt;，则会调用&lt;code&gt;then()&lt;/code&gt;方法指定的回调函数；如果异步操作抛出错误，状态就会变为&lt;code&gt;rejected&lt;/code&gt;，就会调用&lt;code&gt;catch()&lt;/code&gt;方法指定的回调函数，处理这个错误。另外，&lt;code&gt;then()&lt;/code&gt;方法指定的回调函数，如果运行中抛出错误，也会被&lt;code&gt;catch()&lt;/code&gt;方法捕获。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;p.then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;fulfilled:&#39;&lt;/span&gt;, val))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;rejected&#39;&lt;/span&gt;, err));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;val&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;fulfilled:&#39;&lt;/span&gt;, val))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;rejected:&quot;&lt;/span&gt;, err));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面是一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;test&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Error: test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;promise&lt;/code&gt;抛出一个错误，就被&lt;code&gt;catch()&lt;/code&gt;方法指定的回调函数捕获。注意，上面的写法与下面两种写法是等价的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;test&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reject(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  reject(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;test&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;比较上面两种写法，可以发现&lt;code&gt;reject()&lt;/code&gt;方法的作用，等同于抛出错误。&lt;/p&gt;
&lt;p&gt;如果 Promise 状态已经变成&lt;code&gt;resolved&lt;/code&gt;，再抛出错误是无效的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve(&lt;span class=&quot;string&quot;&gt;&#39;ok&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;test&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(value) })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(error) });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ok&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，Promise 在&lt;code&gt;resolve&lt;/code&gt;语句后面，再抛出错误，不会被捕获，等于没有抛出。因为 Promise 的状态一旦改变，就永久保持该状态，不会再变了。&lt;/p&gt;
&lt;p&gt;Promise 对象的错误具有“冒泡”性质，会一直向后传递，直到被捕获为止。也就是说，错误总是会被下一个&lt;code&gt;catch&lt;/code&gt;语句捕获。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;getJSON(&lt;span class=&quot;string&quot;&gt;&#39;/post/1.json&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;post&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getJSON(post.commentURL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;comments&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// some code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 处理前面三个Promise产生的错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，一共有三个 Promise 对象：一个由&lt;code&gt;getJSON()&lt;/code&gt;产生，两个由&lt;code&gt;then()&lt;/code&gt;产生。它们之中任何一个抛出的错误，都会被最后一个&lt;code&gt;catch()&lt;/code&gt;捕获。&lt;/p&gt;
&lt;p&gt;一般来说，不要在&lt;code&gt;then()&lt;/code&gt;方法里面定义 Reject 状态的回调函数（即&lt;code&gt;then&lt;/code&gt;的第二个参数），总是使用&lt;code&gt;catch&lt;/code&gt;方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// bad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// success&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// good&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;//cb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// success&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，第二种写法要好于第一种写法，理由是第二种写法可以捕获前面&lt;code&gt;then&lt;/code&gt;方法执行中的错误，也更接近同步的写法（&lt;code&gt;try/catch&lt;/code&gt;）。因此，建议总是使用&lt;code&gt;catch()&lt;/code&gt;方法，而不使用&lt;code&gt;then()&lt;/code&gt;方法的第二个参数。&lt;/p&gt;
&lt;p&gt;跟传统的&lt;code&gt;try/catch&lt;/code&gt;代码块不同的是，如果没有使用&lt;code&gt;catch()&lt;/code&gt;方法指定错误处理的回调函数，Promise 对象抛出的错误不会传递到外层代码，即不会有任何反应。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; someAsyncThing = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 下面一行会报错，因为x没有声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve(x + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;someAsyncThing().then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;everything is great&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; { &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;) }, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Uncaught (in promise) ReferenceError: x is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 123&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;someAsyncThing()&lt;/code&gt;函数产生的 Promise 对象，内部有语法错误。浏览器运行到这一行，会打印出错误提示&lt;code&gt;ReferenceError: x is not defined&lt;/code&gt;，但是不会退出进程、终止脚本执行，2 秒之后还是会输出&lt;code&gt;123&lt;/code&gt;。这就是说，Promise 内部的错误不会影响到 Promise 外部的代码，通俗的说法就是“Promise 会吃掉错误”。&lt;/p&gt;
&lt;p&gt;这个脚本放在服务器执行，退出码就是0（即表示执行成功）。不过，Node.js 有一个&lt;code&gt;unhandledRejection&lt;/code&gt;事件，专门监听未捕获的&lt;code&gt;reject&lt;/code&gt;错误，上面的脚本会触发这个事件的监听函数，可以在监听函数里面抛出错误。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;process.on(&lt;span class=&quot;string&quot;&gt;&#39;unhandledRejection&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;err, p&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;unhandledRejection&lt;/code&gt;事件的监听函数有两个参数，第一个是错误对象，第二个是报错的 Promise 实例，它可以用来了解发生错误的环境信息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，Node 有计划在未来废除&lt;code&gt;unhandledRejection&lt;/code&gt;事件。如果 Promise 内部有未捕获的错误，会直接终止进程，并且进程的退出码不为 0。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再看下面的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve(&lt;span class=&quot;string&quot;&gt;&#39;ok&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;test&#39;&lt;/span&gt;) }, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(value) });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ok&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Uncaught Error: test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，Promise 指定在下一轮“事件循环”再抛出错误。到了那个时候，Promise 的运行已经结束了，所以这个错误是在 Promise 函数体外抛出的，会冒泡到最外层，成了未捕获的错误。&lt;/p&gt;
&lt;p&gt;一般总是建议，Promise 对象后面要跟&lt;code&gt;catch()&lt;/code&gt;方法，这样可以处理 Promise 内部发生的错误。&lt;code&gt;catch()&lt;/code&gt;方法返回的还是一个 Promise 对象，因此后面还可以接着调用&lt;code&gt;then()&lt;/code&gt;方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; someAsyncThing = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 下面一行会报错，因为x没有声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve(x + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;someAsyncThing()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;oh no&#39;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;carry on&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// oh no [ReferenceError: x is not defined]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// carry on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码运行完&lt;code&gt;catch()&lt;/code&gt;方法指定的回调函数，会接着运行后面那个&lt;code&gt;then()&lt;/code&gt;方法指定的回调函数。如果没有报错，则会跳过&lt;code&gt;catch()&lt;/code&gt;方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;oh no&#39;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;carry on&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// carry on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的代码因为没有报错，跳过了&lt;code&gt;catch()&lt;/code&gt;方法，直接执行后面的&lt;code&gt;then()&lt;/code&gt;方法。此时，要是&lt;code&gt;then()&lt;/code&gt;方法里面报错，就与前面的&lt;code&gt;catch()&lt;/code&gt;无关了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;catch()&lt;/code&gt;方法之中，还能再抛出错误。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; someAsyncThing = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 下面一行会报错，因为x没有声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve(x + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;someAsyncThing().then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; someOtherAsyncThing();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;oh no&#39;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 下面一行会报错，因为 y 没有声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;carry on&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// oh no [ReferenceError: x is not defined]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;catch()&lt;/code&gt;方法抛出一个错误，因为后面没有别的&lt;code&gt;catch()&lt;/code&gt;方法了，导致这个错误不会被捕获，也不会传递到外层。如果改写一下，结果就不一样了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;someAsyncThing().then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; someOtherAsyncThing();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;oh no&#39;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 下面一行会报错，因为y没有声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;carry on&#39;&lt;/span&gt;, error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// oh no [ReferenceError: x is not defined]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// carry on [ReferenceError: y is not defined]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，第二个&lt;code&gt;catch()&lt;/code&gt;方法用来捕获前一个&lt;code&gt;catch()&lt;/code&gt;方法抛出的错误。&lt;/p&gt;
&lt;h3 id=&quot;Promise-prototype-finally&quot;&gt;&lt;a href=&quot;#Promise-prototype-finally&quot; class=&quot;headerlink&quot; title=&quot;Promise.prototype.finally()&quot;&gt;&lt;/a&gt;Promise.prototype.finally()&lt;/h3&gt;&lt;p&gt;&lt;code&gt;finally()&lt;/code&gt;方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。该方法是 ES2018 引入标准的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; {···})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt; =&amp;gt;&lt;/span&gt; {···})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.finally(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {···});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，不管&lt;code&gt;promise&lt;/code&gt;最后的状态，在执行完&lt;code&gt;then&lt;/code&gt;或&lt;code&gt;catch&lt;/code&gt;指定的回调函数以后，都会执行&lt;code&gt;finally&lt;/code&gt;方法指定的回调函数。&lt;/p&gt;
&lt;p&gt;下面是一个例子，服务器使用 Promise 处理请求，然后使用&lt;code&gt;finally&lt;/code&gt;方法关掉服务器。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server.listen(port)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .finally(server.stop);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;finally&lt;/code&gt;方法的回调函数不接受任何参数，这意味着没有办法知道，前面的 Promise 状态到底是&lt;code&gt;fulfilled&lt;/code&gt;还是&lt;code&gt;rejected&lt;/code&gt;。这表明，&lt;code&gt;finally&lt;/code&gt;方法里面的操作，应该是与状态无关的，不依赖于 Promise 的执行结果。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;finally&lt;/code&gt;本质上是&lt;code&gt;then&lt;/code&gt;方法的特例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.finally(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  error =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，如果不使用&lt;code&gt;finally&lt;/code&gt;方法，同样的语句需要为成功和失败两种情况各写一次。有了&lt;code&gt;finally&lt;/code&gt;方法，则只需要写一次。&lt;/p&gt;
&lt;p&gt;它的实现也很简单。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.prototype.finally = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; P = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.constructor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.then(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value  =&amp;gt; P.resolve(callback()).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; value),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reason =&amp;gt; P.resolve(callback()).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; { &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; reason })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，不管前面的 Promise 是&lt;code&gt;fulfilled&lt;/code&gt;还是&lt;code&gt;rejected&lt;/code&gt;，都会执行回调函数&lt;code&gt;callback&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;从上面的实现还可以看到，&lt;code&gt;finally&lt;/code&gt;方法总是会返回原来的值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// resolve 的值是 undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {}, &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// resolve 的值是 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).finally(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// reject 的值是 undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {}, &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// reject 的值是 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;).finally(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Promise-all&quot;&gt;&lt;a href=&quot;#Promise-all&quot; class=&quot;headerlink&quot; title=&quot;Promise.all()&quot;&gt;&lt;/a&gt;Promise.all()&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Promise.all()&lt;/code&gt;方法用于将多个 Promise 实例，包装成一个新的 Promise 实例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([p1, p2, p3]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;Promise.all()&lt;/code&gt;方法接受一个数组作为参数，&lt;code&gt;p1&lt;/code&gt;、&lt;code&gt;p2&lt;/code&gt;、&lt;code&gt;p3&lt;/code&gt;都是 Promise 实例，如果不是，就会先调用下面讲到的&lt;code&gt;Promise.resolve&lt;/code&gt;方法，将参数转为 Promise 实例，再进一步处理。另外，&lt;code&gt;Promise.all()&lt;/code&gt;方法的参数可以不是数组，但必须具有 Iterator 接口，且返回的每个成员都是 Promise 实例。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;p&lt;/code&gt;的状态由&lt;code&gt;p1&lt;/code&gt;、&lt;code&gt;p2&lt;/code&gt;、&lt;code&gt;p3&lt;/code&gt;决定，分成两种情况。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;只有&lt;code&gt;p1&lt;/code&gt;、&lt;code&gt;p2&lt;/code&gt;、&lt;code&gt;p3&lt;/code&gt;的状态都变成&lt;code&gt;fulfilled&lt;/code&gt;，&lt;code&gt;p&lt;/code&gt;的状态才会变成&lt;code&gt;fulfilled&lt;/code&gt;，此时&lt;code&gt;p1&lt;/code&gt;、&lt;code&gt;p2&lt;/code&gt;、&lt;code&gt;p3&lt;/code&gt;的返回值组成一个数组，传递给&lt;code&gt;p&lt;/code&gt;的回调函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只要&lt;code&gt;p1&lt;/code&gt;、&lt;code&gt;p2&lt;/code&gt;、&lt;code&gt;p3&lt;/code&gt;之中有一个被&lt;code&gt;rejected&lt;/code&gt;，&lt;code&gt;p&lt;/code&gt;的状态就变成&lt;code&gt;rejected&lt;/code&gt;，此时第一个被&lt;code&gt;reject&lt;/code&gt;的实例的返回值，会传递给&lt;code&gt;p&lt;/code&gt;的回调函数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是一个具体的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 生成一个Promise对象的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promises = [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;].map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;id&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getJSON(&lt;span class=&quot;string&quot;&gt;&#39;/post/&#39;&lt;/span&gt; + id + &lt;span class=&quot;string&quot;&gt;&quot;.json&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all(promises).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;posts&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;reason&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;promises&lt;/code&gt;是包含 6 个 Promise 实例的数组，只有这 6 个实例的状态都变成&lt;code&gt;fulfilled&lt;/code&gt;，或者其中有一个变为&lt;code&gt;rejected&lt;/code&gt;，才会调用&lt;code&gt;Promise.all&lt;/code&gt;方法后面的回调函数。&lt;/p&gt;
&lt;p&gt;下面是另一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; databasePromise = connectDatabase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; booksPromise = databasePromise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(findAllBooks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; userPromise = databasePromise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(getCurrentUser);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  booksPromise,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  userPromise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;[books, user]&lt;/span&gt;) =&amp;gt;&lt;/span&gt; pickTopRecommendations(books, user));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;booksPromise&lt;/code&gt;和&lt;code&gt;userPromise&lt;/code&gt;是两个异步操作，只有等到它们的结果都返回了，才会触发&lt;code&gt;pickTopRecommendations&lt;/code&gt;这个回调函数。&lt;/p&gt;
&lt;p&gt;注意，如果作为参数的 Promise 实例，自己定义了&lt;code&gt;catch&lt;/code&gt;方法，那么它一旦被&lt;code&gt;rejected&lt;/code&gt;，并不会触发&lt;code&gt;Promise.all()&lt;/code&gt;的&lt;code&gt;catch&lt;/code&gt;方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve(&lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;报错了&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([p1, p2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&quot;hello&quot;, Error: 报错了]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;p1&lt;/code&gt;会&lt;code&gt;resolved&lt;/code&gt;，&lt;code&gt;p2&lt;/code&gt;首先会&lt;code&gt;rejected&lt;/code&gt;，但是&lt;code&gt;p&lt;/code&gt;2有自己的&lt;code&gt;catch&lt;/code&gt;方法，该方法返回的是一个新的 Promise 实例，p2指向的实际上是这个实例。该实例执行完&lt;code&gt;catch&lt;/code&gt;方法后，也会变成&lt;code&gt;resolved&lt;/code&gt;，导致&lt;code&gt;Promise.all()&lt;/code&gt;方法参数里面的两个实例都会&lt;code&gt;resolved&lt;/code&gt;，因此会调用&lt;code&gt;then&lt;/code&gt;方法指定的回调函数，而不会调用&lt;code&gt;catch&lt;/code&gt;方法指定的回调函数。&lt;/p&gt;
&lt;p&gt;如果&lt;code&gt;p2&lt;/code&gt;没有自己的&lt;code&gt;catch&lt;/code&gt;方法，就会调用&lt;code&gt;Promise.all()&lt;/code&gt;的&lt;code&gt;catch&lt;/code&gt;方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve(&lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;报错了&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([p1, p2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Error: 报错了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Promise-race&quot;&gt;&lt;a href=&quot;#Promise-race&quot; class=&quot;headerlink&quot; title=&quot;Promise.race()&quot;&gt;&lt;/a&gt;Promise.race()&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Promise.race()&lt;/code&gt;方法同样是将多个 Promise 实例，包装成一个新的 Promise 实例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.race([p1, p2, p3]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，只要&lt;code&gt;p1&lt;/code&gt;、&lt;code&gt;p2&lt;/code&gt;、&lt;code&gt;p3&lt;/code&gt;之中有一个实例率先改变状态，&lt;code&gt;p&lt;/code&gt;的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给&lt;code&gt;p&lt;/code&gt;的回调函数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise.race()&lt;/code&gt;方法的参数与&lt;code&gt;Promise.all()&lt;/code&gt;方法一样，如果不是 Promise 实例，就会先调用下面讲到的&lt;code&gt;Promise.resolve()&lt;/code&gt;方法，将参数转为 Promise 实例，再进一步处理。&lt;/p&gt;
&lt;p&gt;下面是一个例子，如果指定时间内没有获得结果，就将 Promise 的状态变为&lt;code&gt;reject&lt;/code&gt;，否则变为&lt;code&gt;resolve&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.race([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;/resource-that-may-take-a-while&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; reject(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;request timeout&#39;&lt;/span&gt;)), &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.error);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，如果 5 秒之内&lt;code&gt;fetch&lt;/code&gt;方法无法返回结果，变量&lt;code&gt;p&lt;/code&gt;的状态就会变为&lt;code&gt;rejected&lt;/code&gt;，从而触发&lt;code&gt;catch&lt;/code&gt;方法指定的回调函数。&lt;/p&gt;
&lt;h3 id=&quot;Promise-allSettled&quot;&gt;&lt;a href=&quot;#Promise-allSettled&quot; class=&quot;headerlink&quot; title=&quot;Promise.allSettled()&quot;&gt;&lt;/a&gt;Promise.allSettled()&lt;/h3&gt;&lt;p&gt;有时候，我们希望等到一组异步操作都结束了，不管每一个操作是成功还是失败，再进行下一步操作。但是，现有的 Promise 方法很难实现这个要求。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise.all()&lt;/code&gt;方法只适合所有异步操作都成功的情况，如果有一个操作失败，就无法满足要求。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; urls = [url_1, url_2, url_3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; requests = urls.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; fetch(x));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all(requests);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;所有请求都成功。&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;至少一个请求失败，其他请求可能还没结束。&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;上面示例中，&lt;code&gt;Promise.all()&lt;/code&gt;可以确定所有请求都成功了，但是只要有一个请求失败，它就会报错，而不管另外的请求是否结束。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，&lt;a href=&quot;https://github.com/tc39/proposal-promise-allSettled&quot;&gt;ES2020&lt;/a&gt; 引入了&lt;code&gt;Promise.allSettled()&lt;/code&gt;方法，用来确定一组异步操作是否都结束了（不管成功或失败）。所以，它的名字叫做”Settled“，包含了”fulfilled“和”rejected“两种情况。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise.allSettled()&lt;/code&gt;方法接受一个数组作为参数，数组的每个成员都是一个 Promise 对象，并返回一个新的 Promise 对象。只有等到参数数组的所有 Promise 对象都发生状态变更（不管是&lt;code&gt;fulfilled&lt;/code&gt;还是&lt;code&gt;rejected&lt;/code&gt;），返回的 Promise 对象才会发生状态变更。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promises = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;/api-1&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;/api-2&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;/api-3&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.allSettled(promises);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;removeLoadingIndicator();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面示例中，数组&lt;code&gt;promises&lt;/code&gt;包含了三个请求，只有等到这三个请求都结束了（不管请求成功还是失败），&lt;code&gt;removeLoadingIndicator()&lt;/code&gt;才会执行。&lt;/p&gt;
&lt;p&gt;该方法返回的新的 Promise 实例，一旦发生状态变更，状态总是&lt;code&gt;fulfilled&lt;/code&gt;，不会变成&lt;code&gt;rejected&lt;/code&gt;。状态变成&lt;code&gt;fulfilled&lt;/code&gt;后，它的回调函数会接收到一个数组作为参数，该数组的每个成员对应前面数组的每个 Promise 对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; resolved = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; rejected = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; allSettledPromise = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.allSettled([resolved, rejected]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;allSettledPromise.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;results&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(results);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    { status: &#39;fulfilled&#39;, value: 42 },&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    { status: &#39;rejected&#39;, reason: -1 }&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;Promise.allSettled()&lt;/code&gt;的返回值&lt;code&gt;allSettledPromise&lt;/code&gt;，状态只可能变成&lt;code&gt;fulfilled&lt;/code&gt;。它的回调函数接收到的参数是数组&lt;code&gt;results&lt;/code&gt;。该数组的每个成员都是一个对象，对应传入&lt;code&gt;Promise.allSettled()&lt;/code&gt;的数组里面的两个 Promise 对象。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;results&lt;/code&gt;的每个成员是一个对象，对象的格式是固定的，对应异步操作的结果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 异步操作成功时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;span class=&quot;attr&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;fulfilled&#39;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;: value}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 异步操作失败时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;span class=&quot;attr&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;rejected&#39;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;reason&lt;/span&gt;: reason}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;成员对象的&lt;code&gt;status&lt;/code&gt;属性的值只可能是字符串&lt;code&gt;fulfilled&lt;/code&gt;或字符串&lt;code&gt;rejected&lt;/code&gt;，用来区分异步操作是成功还是失败。如果是成功（&lt;code&gt;fulfilled&lt;/code&gt;），对象会有&lt;code&gt;value&lt;/code&gt;属性，如果是失败（&lt;code&gt;rejected&lt;/code&gt;），会有&lt;code&gt;reason&lt;/code&gt;属性，对应两种状态时前面异步操作的返回值。&lt;/p&gt;
&lt;p&gt;下面是返回值的用法例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promises = [ fetch(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;), fetch(&lt;span class=&quot;string&quot;&gt;&#39;https://does-not-exist/&#39;&lt;/span&gt;) ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; results = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.allSettled(promises);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 过滤出成功的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; successfulPromises = results.filter(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;p&lt;/span&gt; =&amp;gt;&lt;/span&gt; p.status === &lt;span class=&quot;string&quot;&gt;&#39;fulfilled&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 过滤出失败的请求，并输出原因&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; errors = results&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .filter(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;p&lt;/span&gt; =&amp;gt;&lt;/span&gt; p.status === &lt;span class=&quot;string&quot;&gt;&#39;rejected&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;p&lt;/span&gt; =&amp;gt;&lt;/span&gt; p.reason);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Promise-any&quot;&gt;&lt;a href=&quot;#Promise-any&quot; class=&quot;headerlink&quot; title=&quot;Promise.any()&quot;&gt;&lt;/a&gt;Promise.any()&lt;/h3&gt;&lt;p&gt;ES2021 引入了&lt;code&gt;Promise.any()&lt;/code&gt;&lt;a href=&quot;https://github.com/tc39/proposal-promise-any&quot;&gt;方法&lt;/a&gt;。该方法接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例返回。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.any([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;https://v8.dev/&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;home&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;https://v8.dev/blog&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;blog&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;https://v8.dev/docs&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;docs&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]).then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;first&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {  &lt;span class=&quot;comment&quot;&gt;// 只要有一个 fetch() 请求成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).catch(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) =&amp;gt;&lt;/span&gt; { &lt;span class=&quot;comment&quot;&gt;// 所有三个 fetch() 全部请求失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;只要参数实例有一个变成&lt;code&gt;fulfilled&lt;/code&gt;状态，包装实例就会变成&lt;code&gt;fulfilled&lt;/code&gt;状态；如果所有参数实例都变成&lt;code&gt;rejected&lt;/code&gt;状态，包装实例就会变成&lt;code&gt;rejected&lt;/code&gt;状态。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise.any()&lt;/code&gt;跟&lt;code&gt;Promise.race()&lt;/code&gt;方法很像，只有一点不同，就是&lt;code&gt;Promise.any()&lt;/code&gt;不会因为某个 Promise 变成&lt;code&gt;rejected&lt;/code&gt;状态而结束，必须等到所有参数 Promise 变成&lt;code&gt;rejected&lt;/code&gt;状态才会结束。&lt;/p&gt;
&lt;p&gt;下面是&lt;code&gt;Promise()&lt;/code&gt;与&lt;code&gt;await&lt;/code&gt;命令结合使用的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; promises = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;/endpoint-a&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;/endpoint-b&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fetch(&lt;span class=&quot;string&quot;&gt;&#39;/endpoint-c&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; first = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.any(promises);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (error) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;Promise.any()&lt;/code&gt;方法的参数数组包含三个 Promise 操作。其中只要有一个变成&lt;code&gt;fulfilled&lt;/code&gt;，&lt;code&gt;Promise.any()&lt;/code&gt;返回的 Promise 对象就变成&lt;code&gt;fulfilled&lt;/code&gt;。如果所有三个操作都变成&lt;code&gt;rejected&lt;/code&gt;，那么&lt;code&gt;await&lt;/code&gt;命令就会抛出错误。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise.any()&lt;/code&gt;抛出的错误是一个 AggregateError 实例（详见《对象的扩展》一章），这个 AggregateError 实例对象的&lt;code&gt;errors&lt;/code&gt;属性是一个数组，包含了所有成员的错误。&lt;/p&gt;
&lt;p&gt;下面是一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; resolved = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rejected = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; alsoRejected = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(&lt;span class=&quot;literal&quot;&gt;Infinity&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.any([resolved, rejected, alsoRejected]).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result); &lt;span class=&quot;comment&quot;&gt;// 42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.any([rejected, alsoRejected]).catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;results&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(results &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; AggregateError); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(results.errors); &lt;span class=&quot;comment&quot;&gt;// [-1, Infinity]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Promise-resolve&quot;&gt;&lt;a href=&quot;#Promise-resolve&quot; class=&quot;headerlink&quot; title=&quot;Promise.resolve()&quot;&gt;&lt;/a&gt;Promise.resolve()&lt;/h3&gt;&lt;p&gt;有时需要将现有对象转为 Promise 对象，&lt;code&gt;Promise.resolve()&lt;/code&gt;方法就起到这个作用。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; jsPromise = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve($.ajax(&lt;span class=&quot;string&quot;&gt;&#39;/whatever.json&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码将 jQuery 生成的&lt;code&gt;deferred&lt;/code&gt;对象，转为一个新的 Promise 对象。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;等价于下面的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve(&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等价于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt; =&amp;gt;&lt;/span&gt; resolve(&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()方法的参数分成四种情况。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;参数是一个 Promise 实例&lt;br&gt;如果参数是 Promise 实例，那么&lt;code&gt;Promise.resolve&lt;/code&gt;将不做任何修改、原封不动地返回这个实例。&lt;/li&gt;
&lt;li&gt;参数是一个&lt;code&gt;thenable&lt;/code&gt;对象&lt;br&gt;&lt;code&gt;thenable&lt;/code&gt;对象指的是具有&lt;code&gt;then&lt;/code&gt;方法的对象，比如下面这个对象。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; thenable = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  then: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;code&gt;Promise.resolve()&lt;/code&gt;方法会将这个对象转为 Promise 对象，然后就立即执行&lt;code&gt;thenable&lt;/code&gt;对象的&lt;code&gt;then()&lt;/code&gt;方法。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; thenable = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  then: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; p1 = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve(thenable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p1.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(value);  &lt;span class=&quot;comment&quot;&gt;// 42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码中，&lt;code&gt;thenable&lt;/code&gt;对象的&lt;code&gt;then()&lt;/code&gt;方法执行后，对象&lt;code&gt;p1&lt;/code&gt;的状态就变为&lt;code&gt;resolved&lt;/code&gt;，从而立即执行最后那个&lt;code&gt;then()&lt;/code&gt;方法指定的回调函数，输出42。&lt;/li&gt;
&lt;li&gt;参数不是具有&lt;code&gt;then()&lt;/code&gt;方法的对象，或根本就不是对象&lt;br&gt;如果参数是一个原始值，或者是一个不具有&lt;code&gt;then()&lt;/code&gt;方法的对象，则&lt;code&gt;Promise.resolve()&lt;/code&gt;方法返回一个新的 Promise 对象，状态为&lt;code&gt;resolved&lt;/code&gt;。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve(&lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;s&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Hello&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码生成一个新的 Promise 对象的实例&lt;code&gt;p&lt;/code&gt;。由于字符串&lt;code&gt;Hello&lt;/code&gt;不属于异步操作（判断方法是字符串对象不具有 then 方法），返回 Promise 实例的状态从一生成就是&lt;code&gt;resolved&lt;/code&gt;，所以回调函数会立即执行。&lt;code&gt;Promise.resolve()&lt;/code&gt;方法的参数，会同时传给回调函数。&lt;/li&gt;
&lt;li&gt;不带有任何参数&lt;br&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;方法允许调用时不带参数，直接返回一个&lt;code&gt;resolved&lt;/code&gt;状态的 Promise 对象。&lt;br&gt;所以，如果希望得到一个 Promise 对象，比较方便的方法就是直接调用&lt;code&gt;Promise.resolve()&lt;/code&gt;方法。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码的变量&lt;code&gt;p&lt;/code&gt;就是一个 Promise 对象。&lt;blockquote&gt;
&lt;p&gt;需要注意的是，立即&lt;code&gt;resolve()&lt;/code&gt;的 Promise 对象，是在本轮“事件循环”（event loop）的结束时执行，而不是在下一轮“事件循环”的开始时。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;three&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;two&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;one&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// two&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// three&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
上面代码中，&lt;code&gt;setTimeout(fn, 0)&lt;/code&gt;在下一轮“事件循环”开始时执行，&lt;code&gt;Promise.resolve()&lt;/code&gt;在本轮“事件循环”结束时执行，&lt;code&gt;console.log(&#39;one&#39;)&lt;/code&gt;则是立即执行，因此最先输出。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Promise-reject&quot;&gt;&lt;a href=&quot;#Promise-reject&quot; class=&quot;headerlink&quot; title=&quot;Promise.reject()&quot;&gt;&lt;/a&gt;Promise.reject()&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Promise.reject(reason)&lt;/code&gt;方法也会返回一个新的 Promise 实例，该实例的状态为&lt;code&gt;rejected&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(&lt;span class=&quot;string&quot;&gt;&#39;出错了&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等同于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; reject(&lt;span class=&quot;string&quot;&gt;&#39;出错了&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.then(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;s&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 出错了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码生成一个 Promise 对象的实例p，状态为`rejected，回调函数会立即执行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Promise.reject()&lt;/code&gt;方法的参数，会原封不动地作为&lt;code&gt;reject&lt;/code&gt;的理由，变成后续方法的参数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(&lt;span class=&quot;string&quot;&gt;&#39;出错了&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e === &lt;span class=&quot;string&quot;&gt;&#39;出错了&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，&lt;code&gt;Promise.reject()&lt;/code&gt;方法的参数是一个字符串，后面&lt;code&gt;catch()&lt;/code&gt;方法的参数&lt;code&gt;e&lt;/code&gt;就是这个字符串。&lt;/p&gt;
&lt;h2 id=&quot;应用&quot;&gt;&lt;a href=&quot;#应用&quot; class=&quot;headerlink&quot; title=&quot;应用&quot;&gt;&lt;/a&gt;应用&lt;/h2&gt;&lt;h3 id=&quot;加载图片&quot;&gt;&lt;a href=&quot;#加载图片&quot; class=&quot;headerlink&quot; title=&quot;加载图片&quot;&gt;&lt;/a&gt;加载图片&lt;/h3&gt;&lt;p&gt;我们可以将图片的加载写成一个&lt;code&gt;Promise&lt;/code&gt;，一旦加载完成，&lt;code&gt;Promise&lt;/code&gt;的状态就发生变化。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; preloadImage = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;path&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; image = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.onload  = resolve;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.onerror = reject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.src = path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Generator-函数与-Promise-的结合&quot;&gt;&lt;a href=&quot;#Generator-函数与-Promise-的结合&quot; class=&quot;headerlink&quot; title=&quot;Generator 函数与 Promise 的结合&quot;&gt;&lt;/a&gt;Generator 函数与 Promise 的结合&lt;/h3&gt;&lt;p&gt;使用 Generator 函数管理流程，遇到异步操作的时候，通常返回一个&lt;code&gt;Promise&lt;/code&gt;对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getFoo&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve(&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; g = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;* (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; foo = &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; getFoo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;generator&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; it = generator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;go&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result.done) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result.value.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; go(it.next(value));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; go(it.throw(error));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  go(it.next());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;run(g);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码的 Generator 函数&lt;code&gt;g&lt;/code&gt;之中，有一个异步操作&lt;code&gt;getFoo&lt;/code&gt;，它返回的就是一个&lt;code&gt;Promise&lt;/code&gt;对象。函数&lt;code&gt;run&lt;/code&gt;用来处理这个&lt;code&gt;Promise&lt;/code&gt;对象，并调用下一个&lt;code&gt;next&lt;/code&gt;方法。&lt;/p&gt;
&lt;h2 id=&quot;Promise-try&quot;&gt;&lt;a href=&quot;#Promise-try&quot; class=&quot;headerlink&quot; title=&quot;Promise.try()&quot;&gt;&lt;/a&gt;Promise.try()&lt;/h2&gt;&lt;p&gt;实际开发中，经常遇到一种情况：不知道或者不想区分，函数&lt;code&gt;f&lt;/code&gt;是同步函数还是异步操作，但是想用 Promise 来处理它。因为这样就可以不管&lt;code&gt;f&lt;/code&gt;是否包含异步操作，都用&lt;code&gt;then&lt;/code&gt;方法指定下一步流程，用&lt;code&gt;catch&lt;/code&gt;方法处理&lt;code&gt;f&lt;/code&gt;抛出的错误。一般就会采用下面的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(f)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的写法有一个缺点，就是如果f是同步函数，那么它会在本轮事件循环的末尾执行。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; f = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;now&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;next&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，函数&lt;code&gt;f&lt;/code&gt;是同步的，但是用 Promise 包装了以后，就变成异步执行了。&lt;/p&gt;
&lt;p&gt;那么有没有一种方法，让同步函数同步执行，异步函数异步执行，并且让它们具有统一的 API 呢？回答是可以的，并且还有两种写法。第一种写法是用&lt;code&gt;async&lt;/code&gt;函数来写。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; f = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;now&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; f())();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;next&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码中，第二行是一个立即执行的匿名函数，会立即执行里面的&lt;code&gt;async&lt;/code&gt;函数，因此如果f是同步的，就会得到同步的结果；如果&lt;code&gt;f&lt;/code&gt;是异步的，就可以用&lt;code&gt;then&lt;/code&gt;指定下一步，就像下面的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; f())()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;需要注意的是，&lt;code&gt;async () =&amp;gt; f()&lt;/code&gt;会吃掉f()抛出的错误。所以，如果想捕获错误，要使用&lt;code&gt;promise.catch&lt;/code&gt;方法。&lt;/p&gt;
&lt;p&gt;第二种写法是使用&lt;code&gt;new Promise()&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; f = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;now&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  () =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve =&amp;gt; resolve(f())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;next&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码也是使用立即执行的匿名函数，执行&lt;code&gt;new Promise()&lt;/code&gt;。这种情况下，同步函数也是同步执行的。&lt;/p&gt;
&lt;p&gt;鉴于这是一个很常见的需求，所以现在有一个&lt;a href=&quot;https://github.com/ljharb/proposal-promise-try&quot;&gt;提案&lt;/a&gt;，提供&lt;code&gt;Promise.try&lt;/code&gt;方法替代上面的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; f = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;now&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.try(f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;next&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;事实上，&lt;code&gt;Promise.try&lt;/code&gt;存在已久，Promise 库&lt;code&gt;Bluebird&lt;/code&gt;、&lt;code&gt;Q&lt;/code&gt;和&lt;code&gt;when&lt;/code&gt;，早就提供了这个方法。&lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;Promise.try&lt;/code&gt;为所有操作提供了统一的处理机制，所以如果想用&lt;code&gt;then&lt;/code&gt;方法管理流程，最好都用&lt;code&gt;Promise.try&lt;/code&gt;包装一下。这样有&lt;a href=&quot;http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/&quot;&gt;许多好处&lt;/a&gt;，其中一点就是可以更好地管理异常。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; f = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;now&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.try(f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;next&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// now&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;` &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;上面代码中，`&lt;/span&gt;database.users.get()&lt;span class=&quot;string&quot;&gt;`返回一个 Promise 对象，如果抛出异步错误，可以用`&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;`方法捕获，就像下面这样写。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;``&lt;/span&gt; JAVASCRIPT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;database.users.get({&lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: userId})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是&lt;code&gt;database.users.get()&lt;/code&gt;可能还会抛出同步错误（比如数据库连接错误，具体要看实现方法），这时你就不得不用&lt;code&gt;try...catch&lt;/code&gt;去捕获。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  database.users.get({&lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: userId})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;` &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;上面这样的写法就很笨拙了，这时就可以统一用`&lt;/span&gt;promise.catch()&lt;span class=&quot;string&quot;&gt;`捕获所有同步和异步的错误。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;``&lt;/span&gt; JAVASCRIPT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.try(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; database.users.get({&lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: userId}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;事实上，&lt;code&gt;Promise.try&lt;/code&gt;就是模拟&lt;code&gt;try&lt;/code&gt;代码块，就像&lt;code&gt;promise.catch&lt;/code&gt;模拟的是&lt;code&gt;catch&lt;/code&gt;代码块。&lt;/p&gt;
&lt;p&gt;参考链接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/fe5f173276bd&quot;&gt;前端基础进阶（十五）：透彻掌握Promise的使用，读这篇就够了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://es6.ruanyifeng.com/#docs/promise&quot;&gt;Promise 对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐阅读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903665686282253&quot;&gt;Promise实现原理（附源码）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903607968481287&quot;&gt;史上最通俗易懂的Promise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6924188714419634190&quot;&gt;看懂此文，手写十种Promise！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6994594642280857630&quot;&gt;看了就会，手写Promise原理，最通俗易懂的版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844904096525189128&quot;&gt;Promise/async/Generator实现原理解析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6945319439772434469&quot;&gt;从一道让我失眠的 Promise 面试题开始，深入分析 Promise 实现细节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十四）：深入核心，详解事件循环机制</title>
    <link href="https://fe32.top/articles/jsnb9541/"/>
    <id>https://fe32.top/articles/jsnb9541/</id>
    <published>2022-06-28T14:47:43.000Z</published>
    <updated>2023-06-27T14:39:00.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;推荐阅读&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25407758&quot;&gt;这个前端面试在搞事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.cn/post/6844903470466629640&quot;&gt;80% 应聘者都不及格的 JS 面试题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/js0320ub/&quot;&gt;熟悉事件循环？那谈谈为什么会分为宏任务和微任务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学习事件循环机制之前，希望你已经懂得了如下概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行上下文(Execution context)&lt;/li&gt;
&lt;li&gt;函数调用栈(call stack)&lt;/li&gt;
&lt;li&gt;队列数据结构(queue)&lt;/li&gt;
&lt;li&gt;Promise(将在下一篇文章专门总结Promise的详细使用)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;因为chrome浏览器中新标准中的事件循环机制与nodejs类似，因此此处就整合nodejs一起来理解，其中会介绍到几个nodejs有，但是浏览器中没有的API，大家只需要了解就好，不一定非要知道它是如何使用。比如&lt;code&gt;process.nextTick&lt;/code&gt;，&lt;code&gt;setImmediate&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们知道JavaScript的一大特点就是单线程，而这个线程中拥有唯一的一个事件循环。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然新标准中的&lt;code&gt;web worker&lt;/code&gt;涉及到了多线程，这里就不讨论了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JavaScript代码的执行过程中，除了依靠函数调用栈来搞定函数的执行顺序外，还依靠任务队列(task queue)来搞定另外一些代码的执行。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb1f361ef50.webp&quot; alt=&quot;队列数据结构&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;队列数据结构&lt;/span&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;一个线程中，事件循环是唯一的，但是任务队列可以拥有多个。&lt;/li&gt;
&lt;li&gt;任务队列又分为macro-task（宏任务）与micro-task（微任务），在最新标准中，它们被分别称为task与jobs。&lt;/li&gt;
&lt;li&gt;macro-task大概包括：script(整体代码), setTimeout, setInterval, setImmediate, I/O, UI rendering。&lt;/li&gt;
&lt;li&gt;micro-task大概包括: process.nextTick, Promise, Object.observe(已废弃), MutationObserver(html5新特性)&lt;/li&gt;
&lt;li&gt;setTimeout/Promise等我们称之为任务源。而进入任务队列的是它们指定的具体执行任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// setTimeout中的回调函数才是进入任务队列的任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;xxxx&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 非常多的同学对于setTimeout的理解存在偏差。所以大概说一下误解：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// setTimeout作为一个任务分发器，这个函数会立即执行，而它所要分发的任务，也就是它的第一个参数，才是延迟执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;来自不同任务源的任务会进入到不同的任务队列。其中setTimeout与setInterval是同源的。&lt;/li&gt;
&lt;li&gt;事件循环的顺序，决定了JavaScript代码的执行顺序。它从script(整体代码)开始第一次循环。之后全局上下文进入函数调用栈。直到调用栈清空(只剩全局)，然后执行所有的micro-task。当所有可执行的micro-task执行完毕之后。循环再次从macro-task开始，找到其中一个任务队列执行完毕，然后再执行所有的micro-task，这样一直循环下去。&lt;/li&gt;
&lt;li&gt;其中每一个任务的执行，无论是macro-task还是micro-task，都是借助函数调用栈来完成。纯文字表述确实有点干涩，因此，这里我们通过2个例子，来逐步理解事件循环的具体顺序。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo01  出自于上面我引用文章的一个例子，我们来根据上面的结论，一步一步分析具体的执行过程。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 为了方便理解，我以打印出来的字符作为当前的任务名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;promise1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i == &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt; &amp;amp;&amp;amp; resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;promise2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;then1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;global1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;第一步：事件循环从宏任务队列开始，这个时候，宏任务队列中，只有一个script(整体代码)任务。每一个任务的执行顺序，都依靠函数调用栈来搞定，而当遇到任务源时，则会先分发任务到对应的队列中去，所以，上面例子的第一步执行如下图所示。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb207892528.webp&quot; alt=&quot;首先script任务开始执行，全局上下文入栈&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;首先script任务开始执行，全局上下文入栈&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第二步：script任务执行时首先遇到了setTimeout，setTimeout为一个宏任务源，它的作用就是将任务分发到对应的队列中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb20b833355.webp&quot; alt=&quot;宏任务timeout1进入setTimeout队列&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;宏任务timeout1进入setTimeout队列&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第三步：script执行时遇到Promise实例。Promise构造函数中的第一个参数，是在new的时候执行，因此不会进入任何其它的队列，而是直接在当前任务直接执行了，而后续的.then则会被分发到micro-task的Promise队列中去。&lt;/p&gt;
&lt;p&gt;因此，构造函数执行时，里面的参数进入函数调用栈执行。for循环不会进入任何队列，因此代码会依次执行，所以这里的promise1和promise2会依次输出。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb20cad4e8d.webp&quot; alt=&quot;promise1入栈执行，这时promise1被最先输出&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;promise1入栈执行，这时promise1被最先输出&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb20dc9faff.webp&quot; alt=&quot;resolve在for循环中入栈执行&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;resolve在for循环中入栈执行&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb20f1a26f1.webp&quot; alt=&quot;构造函数执行完毕的过程中，resolve执行完毕出栈，promise2输出，promise1页出栈，then执行时，Promise任务then1进入对应队列&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;构造函数执行完毕的过程中，resolve执行完毕出栈，promise2输出，promise1页出栈，then执行时，Promise任务then1进入对应队列&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;script任务继续往下执行，最后只有一句输出了globa1，然后，全局任务就执行完毕了。&lt;/p&gt;
&lt;p&gt;第四步：第一个宏任务script执行完毕之后，就开始执行所有的可执行的微任务。这个时候，微任务中，只有Promise队列中的一个任务then1，因此直接执行就行了，执行结果输出then1，当然，它的执行，也是进入函数调用栈中执行的。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb22dc0ec14.webp&quot; alt=&quot;执行所有的微任务&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;执行所有的微任务&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第五步：当所有的micro-tast执行完毕之后，表示第一轮的循环就结束了。这个时候就得开始第二轮的循环。第二轮循环仍然从宏任务macro-task开始。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb22e023472.webp&quot; alt=&quot;微任务被清空&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;微任务被清空&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;这个时候，发现宏任务中，只有在setTimeout队列中还要一个timeout1的任务等待执行。因此就直接执行即可。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/28/62bb22f12672b.webp&quot; alt=&quot;timeout1入栈执行&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;timeout1入栈执行&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;这个时候宏任务队列与微任务队列中都没有任务了，所以代码就不会再输出其它东西了。上面这个例子的输出结果就显而易见。大家可以自行尝试体会。&lt;/p&gt;
&lt;p&gt;这个例子比较简单，涉及到的队列任务并不多，因此读懂了它还不能全面的了解到事件循环机制的全貌。所以我下面弄了一个复杂一点的例子，再给大家解析一番，相信读懂之后，事件循环这个问题，再面试中再次被问到就难不倒大家了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo02&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;golb1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setImmediate(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob1_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob1_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob1_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob2_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob2_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob2_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setImmediate(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们一步一步来分析代码执行过程。&lt;/p&gt;
&lt;p&gt;第一步：宏任务script首先执行。全局入栈。glob1输出。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb260be4e18.webp&quot; alt=&quot;script首先执行&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;script首先执行&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第二步，执行过程遇到setTimeout。setTimeout作为任务分发器，将任务分发到对应的宏任务队列中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout1_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb26118a9f2.webp&quot; alt=&quot;timeout1进入对应队列&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;timeout1进入对应队列&lt;/span&gt;&lt;/div&gt;


&lt;p&gt;第三步：执行过程遇到setImmediate。setImmediate也是一个宏任务分发器，将任务分发到对应的任务队列中。setImmediate的任务队列会在setTimeout队列的后面执行。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setImmediate(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate1_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb2623d2600.webp&quot; alt=&quot;进入setImmediate队列&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;进入setImmediate队列&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第四步：执行遇到nextTick，process.nextTick是一个微任务分发器，它会将任务分发到对应的微任务队列中去。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob1_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb2630b5943.webp&quot; alt=&quot;nextTick&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;nextTick&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第五步：执行遇到Promise。Promise的then方法会将任务分发到对应的微任务队列中，但是它构造函数中的方法会直接执行。因此，glob1_promise会第二个输出。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob1_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob1_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb2640cec3a.webp&quot; alt=&quot;先是函数调用栈的变化&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;先是函数调用栈的变化&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb26499a37e.webp&quot; alt=&quot;然后glob1_then任务进入队列&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;然后glob1_then任务进入队列&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第六步：执行遇到第二个setTimeout。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;timeout2_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb265159e15.webp&quot; alt=&quot;timeout2进入对应队列&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;timeout2进入对应队列&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第七步：先后遇到nextTick与Promise。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob2_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob2_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;glob2_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb265c3f721.webp&quot; alt=&quot;glob2_nextTick与Promise任务分别进入各自的队列&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;glob2_nextTick与Promise任务分别进入各自的队列&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第八步：再次遇到setImmediate。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setImmediate(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2_nextTick&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2_promise&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;immediate2_then&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb2668a2b37.webp&quot; alt=&quot;nextTick&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;nextTick&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;这个时候，script中的代码就执行完毕了，执行过程中，遇到不同的任务分发器，就将任务分发到各自对应的队列中去。接下来，将会执行所有的微任务队列中的任务。&lt;/p&gt;
&lt;p&gt;其中，nextTick队列会比Promie先执行。nextTick中的可执行任务执行完毕之后，才会开始执行Promise队列中的任务。&lt;/p&gt;
&lt;p&gt;当所有可执行的微任务执行完毕之后，这一轮循环就表示结束了。下一轮循环继续从宏任务队列开始执行。&lt;/p&gt;
&lt;p&gt;这个时候，script已经执行完毕，所以就从setTimeout队列开始执行。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/29/62bb26730bef2.webp&quot; alt=&quot;第二轮循环初始状态&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;第二轮循环初始状态&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;setTimeout任务的执行，也依然是借助函数调用栈来完成，并且遇到任务分发器的时候也会将任务分发到对应的队列中去。&lt;/p&gt;
&lt;p&gt;只有当setTimeout中所有的任务执行完毕之后，才会再次开始执行微任务队列。并且清空所有的可执行微任务。&lt;/p&gt;
&lt;p&gt;setTiemout队列产生的微任务执行完毕之后，循环则回过头来开始执行setImmediate队列。仍然是先将setImmediate队列中的任务执行完毕，再执行所产生的微任务。&lt;/p&gt;
&lt;p&gt;当setImmediate队列执行产生的微任务全部执行之后，第二轮循环也就结束了。&lt;/p&gt;
&lt;p&gt;当然，这些顺序都是v8的一些实现。我们也可以根据上面的规则，来尝试实现一下事件循环的机制。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 用数组模拟一个队列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tasks = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 模拟一个事件分发器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; addFn1 = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;task&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tasks.push(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 执行所有的任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; flush = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tasks.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;task&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        task();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 最后利用setTimeout/或者其它你认为合适的方式丢入事件循环中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flush();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 当然，也可以不用丢进事件循环，而是我们自己手动在适当的时机去执行对应的某一个方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dispatch = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tasks.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(item.name == name) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item.handler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 当然，我们把任务丢进去的时候，多保存一个name即可。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这时候，task的格式就如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;demoTask =  {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;demo&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handler: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 于是，一个订阅-通知的设计模式就这样轻松的被实现了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样，我们就模拟了一个任务队列。还可以定义另外一个队列，利用上面的各种方式来规定它们的优先级。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是，这里的执行顺序，或者执行的优先级在不同的场景里由于实现的不同会导致不同的结果，包括&lt;code&gt;node&lt;/code&gt;的不同版本，不同浏览器等都有不同的结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十三）：详细图解jQuery对象，以及如何扩展jQuery插件</title>
    <link href="https://fe32.top/articles/jsnb9540/"/>
    <id>https://fe32.top/articles/jsnb9540/</id>
    <published>2022-06-26T14:21:56.000Z</published>
    <updated>2023-06-27T14:39:00.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;jQuery在前端史上有它非常超然的历史地位，许多从中学到的技巧在实践开发中仍然非常好用。简单的了解它有助于我们更加深入的理解JavaScript。如果你能够从中看明白jquery是如何一步步被取代的，那么，我想你的收益远不止学会使用了一个库那么简单。&lt;/p&gt;
&lt;p class=&quot;p blue&quot;&gt;因此，我的态度是，项目中你可以不用，但是我建议你了解了解jQuery的思想。&lt;/p&gt;

&lt;p&gt;这篇文章的主要目的，是从面向对象的角度，跟大家分享jquery对象是如何封装的。&lt;/p&gt;
&lt;p&gt;使用jQuery对象时，我们这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 声明一个jQuery对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.target&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取元素的css属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.target&#39;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;width&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取元素的位置信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.target&#39;&lt;/span&gt;).offset()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在使用之初可能会有许多疑问，比如&lt;code&gt;$&lt;/code&gt;是怎么回事？为什么不用&lt;code&gt;new&lt;/code&gt;就可以直接声明一个对象？等等。了解之后，才知道原来这正是jQuery对象创建的巧妙之处。&lt;/p&gt;
&lt;p&gt;先直接用代码展示出来，再用图跟大家解释是怎么回事。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;ROOT&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; jQuery = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;selector&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在jQuery中直接返回new过的实例，这里的init是jQuery的真正构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; jQuery.fn.init(selector)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  jQuery.fn = jQuery.prototype = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;jQuery&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;: &#39;1.0.0&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;selector&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 在jquery中这里有一个复杂的判断，但是这里我做了简化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; elem, selector;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      elem = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(selector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = elem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 在jquery中返回一个由所有原型属性方法组成的数组，我们这里简化，直接返回this即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// return jQuery.makeArray(selector, this);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在原型上添加一堆方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    toArray: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    get: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    each: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ready: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    first: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    slice: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ... ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  jQuery.fn.init.prototype = jQuery.fn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 实现jQuery的两种扩展方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  jQuery.extend = jQuery.fn.extend = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;options&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在jquery源码中会根据参数不同进行很多判断，我们这里就直接走一种方式，所以就不用判断了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; target = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; copy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (name &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; options) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      copy = options[name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      target[name] = copy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// jQuery中利用上面实现的扩展机制，添加了许多方法，其中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 直接添加在构造函数上，被称为工具方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  jQuery.extend({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    isFunction: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseHTML: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseJSON: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ajax: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 添加到原型上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  jQuery.fn.extend({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    queue: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    promise: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    attr: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prop: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addClass: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeClass: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    val: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    css: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// $符号的由来，实际上它就是jQuery，一个简化的写法，在这里我们还可以替换成其他可用字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ROOT.jQuery = ROOT.$ = jQuery;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上面的代码中，我封装了一个简化版的jQuery对象，给大家简单展示了jQuery的整体骨架。&lt;/p&gt;
&lt;p&gt;在代码中可以看到，jQuery自身对于原型的处理使用了一些巧妙的方式，比如&lt;code&gt;jQuery.fn = jQuery.prototype&lt;/code&gt;，&lt;code&gt;jQuery.fn.init.prototype = jQuery.fn&lt;/code&gt;等，这几句正是jQuery对象的关键所在。看图分析。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/27/62b9b68796743.webp&quot; alt=&quot;jQuery对象核心图&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;jQuery对象核心图&lt;/span&gt;&lt;/div&gt;

&lt;h2 id=&quot;对象封装分析&quot;&gt;&lt;a href=&quot;#对象封装分析&quot; class=&quot;headerlink&quot; title=&quot;对象封装分析&quot;&gt;&lt;/a&gt;对象封装分析&lt;/h2&gt;&lt;p&gt;在上面的实现中，首先在jQuery构造函数里声明了一个fn属性，并将其指向了原型&lt;code&gt;jQuery.prototype&lt;/code&gt;。然后在原型中添加了init方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jQuery.fn = jQuery.prototype = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  init: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;之后又将init的原型，指向了&lt;code&gt;jQuery.prototype&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jQuery.fn.init.prototype = jQuery.fn;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;而在构造函数jQuery中，返回了init的实例对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; jQuery = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;selector&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 在jQuery中直接返回new过的实例，这里的init是jQuery的真正构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; jQuery.fn.init(selector)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;最后对外暴露入口时，将字符&lt;code&gt;$&lt;/code&gt;与&lt;code&gt;jQuery&lt;/code&gt;对等起来。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ROOT.jQuery = ROOT.$ = jQuery;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因此当我们直接使用&lt;code&gt;$(&#39;#test&#39;)&lt;/code&gt;创建一个对象时，实际上是创建了一个init的实例，这里的真正构造函数是原型中的init方法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：许多对jQuery内部实现不太了解的盆友，常常会毫无节制使用$()，比如对于同一个元素的不同操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; width = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;($(&lt;span class=&quot;string&quot;&gt;&#39;#test&#39;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;width&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(width &amp;gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $(&lt;span class=&quot;string&quot;&gt;&#39;#test&#39;&lt;/span&gt;).css(&lt;span class=&quot;string&quot;&gt;&#39;backgroundColor&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过上面的一系列分析，我们知道每当执行$()时，就会重新生成一个init的实例对象，因此当我们这样没有节制的使用jQuery是非常不正确的，虽然看上去方便了一些，但是对于内存的消耗非常大。正确的做法是既然是同一个对象，那么就用一个变量保存起来后续使用即可。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $test = $(&lt;span class=&quot;string&quot;&gt;&#39;#test&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; width = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;($test.css(&lt;span class=&quot;string&quot;&gt;&#39;width&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(width &amp;gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $test.css(&lt;span class=&quot;string&quot;&gt;&#39;backgroundColor&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;扩展方法分析&quot;&gt;&lt;a href=&quot;#扩展方法分析&quot; class=&quot;headerlink&quot; title=&quot;扩展方法分析&quot;&gt;&lt;/a&gt;扩展方法分析&lt;/h2&gt;&lt;p&gt;在上面的代码实现中，简单实现了两个扩展方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jQuery.extend = jQuery.fn.extend = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;options&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 在jquery源码中会根据参数不同进行很多判断，我们这里就直接走一种方式，所以就不用判断了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; target = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; copy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (name &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; options) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    copy = options[name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    target[name] = copy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;传入的参数options为一个&lt;code&gt;key: value&lt;/code&gt;模式的对象，通过&lt;code&gt;for in&lt;/code&gt;遍历options，将key作为jQuery的新属性，value作为该新属性所对应的新方法，分别添加到jQuery方法和jQuery.fn中。&lt;/p&gt;
&lt;p&gt;当我们通过&lt;code&gt;jQuery.extend&lt;/code&gt;扩展jQuery时，方法被添加到了jQuery构造函数中，当通过&lt;code&gt;jQuery.fn.extend&lt;/code&gt;扩展jQuery时，方法被添加到了jQuery原型中。&lt;/p&gt;
&lt;p&gt;上面的例子中，简单展示了在jQuery内部，许多方法的实现都是通过这两个扩展方法来完成的。&lt;/p&gt;
&lt;p&gt;有一个朋友留言给我，说他被静态方法，工具方法和实例方法这几个概念困扰了很久，到底它们有什么区别？&lt;/p&gt;
&lt;p&gt;在封装对象时，属性和方法可以具体放置的三个位置，并且对于这三个位置的不同做了一个详细的解读。&lt;/p&gt;
&lt;p&gt;{ % image &lt;a href=&quot;https://bu.dusays.com/2022/06/27/62b9cdd2affcc.webp&quot;&gt;https://bu.dusays.com/2022/06/27/62b9cdd2affcc.webp&lt;/a&gt; % }&lt;/p&gt;
&lt;p&gt;在实现jQuery扩展方法时，一部分方法需要扩展到构造函数中，一部分方法需要扩展到原型中，当我们通读jQuery源码时，还发现有一些方法放在了模块作用域中，至于为什么会有这样的区别，建议大家回过头去读读前一篇文章。&lt;/p&gt;
&lt;p&gt;这里用一个例子简单区分一下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 模块内部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 构造函数方法，每声明一个实例，都会重新创建一次，属于实例独有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 原型方法，仅在原型创建时声明一次，属于所有实例共享&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 工具方法，直接挂载在构造函数名上，仅声明一次，无法直接访问实例内部属性与方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.each = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如上例中，each就是一个工具方法，或者说静态方法。&lt;/p&gt;
&lt;p&gt;工具方法的特性也和工具一词非常贴近，他们与实例的自身属性毫无关联，仅仅只是实现一些通用的功能，我们可以通过&lt;code&gt;$.each&lt;/code&gt;与&lt;code&gt;$(&#39;div&#39;).each&lt;/code&gt;这2个方法来体会工具方法与实例方法的不同之处。&lt;/p&gt;
&lt;p&gt;在实际开发中，我们运用得非常多的一个工具库就是&lt;code&gt;lodash.js&lt;/code&gt;，大家如果时间充裕一定要去学习一下它的使用。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.isFunction()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.each()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;放在原型中的方法，在使用时必须创建了一个新的实例对象才能访问，因此这样的方法叫做实例方法。也正是因为这一点，它的使用成本会比工具方法高一些。但是相比构造函数方法，原型方法更节省内存。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#test&#39;&lt;/span&gt;).css()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#test&#39;&lt;/span&gt;).attr()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;).each()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样，那位同学的疑问就被搞定啦。我们在学习的时候，一定不要过分去纠结一些概念，而要明白这些概念背后的具体场景是怎么回事儿，那么学习这件事情就不会在一些奇奇怪怪的地方卡住了。&lt;/p&gt;
&lt;p&gt;所以通过$.extend扩展的方法，其实就是对工具方法的扩展，而通过$.fn.extend扩展的方法，就是对于实例方法的扩展。&lt;/p&gt;
&lt;h2 id=&quot;jQuery插件的实现&quot;&gt;&lt;a href=&quot;#jQuery插件的实现&quot; class=&quot;headerlink&quot; title=&quot;jQuery插件的实现&quot;&gt;&lt;/a&gt;jQuery插件的实现&lt;/h2&gt;&lt;p&gt;在前面我跟大家分享了jQuery如何实现，以及他们的方法如何扩展，并且前一篇文章分享了拖拽对象的具体实现。所以建议大家自己动手尝试将拖拽扩展成为jQuery的一个实例方法，这就是一个jQuery插件了。&lt;/p&gt;
&lt;p&gt;具体也没有什么可多说的了，大家看了代码就可以明白一切。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Drag对象简化代码，完整源码可在上一篇文章中查看&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 构造&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Drag&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;selector&lt;/span&gt;) &lt;/span&gt;{ }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Drag.prototype = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;Drag&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 初始时需要做些什么事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.setDrag();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 稍作改造，仅用于获取当前元素的属性，类似于getName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getStyle: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;property&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 用来获取当前元素的位置信息，注意与之前的不同之处&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getPosition: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 用来设置当前元素的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setPostion: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;pos&lt;/span&gt;) &lt;/span&gt;{ },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 该方法用来绑定事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDrag: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 一种对外暴露的方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.Drag = Drag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过扩展方法将拖拽扩展为jQuery的一个实例方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;$&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $.fn.extend({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    becomeDrag: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Drag(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;   &lt;span class=&quot;comment&quot;&gt;// 注意：为了保证jQuery所有的方法都能够链式访问，每一个方法的最后都需要返回this，即返回jQuery实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})(jQuery);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十二）：面向对象实战之封装拖拽对象</title>
    <link href="https://fe32.top/articles/jsnb9539/"/>
    <id>https://fe32.top/articles/jsnb9539/</id>
    <published>2022-06-26T12:27:39.000Z</published>
    <updated>2023-06-27T14:39:00.764Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前几篇文章，跟大家分享了JavaScript的一些基础知识，这篇文章，将会进入第一个实战环节：利用前面几章的所涉及到的知识，封装一个拖拽对象。为了能够帮助大家了解更多的方式与进行对比，在这里将使用三种不同的方式来实现拖拽。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不封装对象直接实现；&lt;/li&gt;
&lt;li&gt;利用原生JavaScript封装拖拽对象；&lt;/li&gt;
&lt;li&gt;通过扩展jQuery来实现拖拽对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;本文的例子将会放置于&lt;a href=&quot;https://codepen.io/&quot;&gt;codepen.io&lt;/a&gt;中，供大家在阅读时直接查看。如果对于codepen不了解的同学，可以花点时间稍微了解一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;如何让一个DOM元素动起来&quot;&gt;&lt;a href=&quot;#如何让一个DOM元素动起来&quot; class=&quot;headerlink&quot; title=&quot;如何让一个DOM元素动起来&quot;&gt;&lt;/a&gt;如何让一个DOM元素动起来&lt;/h2&gt;&lt;p&gt;我们常常通过修改元素的&lt;code&gt;top&lt;/code&gt;，&lt;code&gt;left&lt;/code&gt;，&lt;code&gt;translate&lt;/code&gt;来其的位置发生改变。在下面的例子中，每点击一次按钮，对应的元素就会移动5px。大家可点击查看。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://codepen.io/yangbo5207/pen/YZxGpO&quot;&gt;点击查看一个让元素动起来的小例子&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于修改一个元素top/left值会引起页面重绘，而translate不会，因此从性能优化上来判断，我们会优先使用translate属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;如何获取当前浏览器支持的transform兼容写法&quot;&gt;&lt;a href=&quot;#如何获取当前浏览器支持的transform兼容写法&quot; class=&quot;headerlink&quot; title=&quot;如何获取当前浏览器支持的transform兼容写法&quot;&gt;&lt;/a&gt;如何获取当前浏览器支持的transform兼容写法&lt;/h2&gt;&lt;p&gt;transform是css3的属性，当使用它时就不得不面对兼容性的问题。不同版本浏览器的兼容写法大致有如下几种：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[&#39;transform&#39;, &#39;webkitTransform&#39;, &#39;MozTransform&#39;, &#39;msTransform&#39;, &#39;OTransform&#39;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因此需要判断当前浏览器环境支持的transform属性是哪一种，方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取当前浏览器支持的transform兼容写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTransform&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transform = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    divStyle = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;).style,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 可能涉及到的几种兼容性写法，通过循环找出浏览器识别的那一个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transformArr = [&lt;span class=&quot;string&quot;&gt;&#39;transform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;webkitTransform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;MozTransform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;msTransform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;OTransform&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    len = transformArr.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (; i &amp;lt; len; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transformArr[i] &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; divStyle) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 找到之后立即返回，结束函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; transform = transformArr[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 如果没有找到，就直接返回空字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;该方法用于获取浏览器支持的transform属性。如果返回的为空字符串，则表示当前浏览器并不支持transform，这个时候就需要使用left，top值来改变元素的位置。如果支持，就改变transform的值。&lt;/p&gt;
&lt;h2 id=&quot;如何获取元素的初始位置&quot;&gt;&lt;a href=&quot;#如何获取元素的初始位置&quot; class=&quot;headerlink&quot; title=&quot;如何获取元素的初始位置&quot;&gt;&lt;/a&gt;如何获取元素的初始位置&lt;/h2&gt;&lt;p&gt;首先需要获取到目标元素的初始位置，因此这里需要一个专门用来获取元素样式的功能函数。&lt;/p&gt;
&lt;p&gt;但是获取元素样式在IE浏览器与其他浏览器有一些不同，我们需要一个兼容性的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getStyle&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem, property&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ie通过currentStyle来获取元素的样式，其他浏览器通过getComputedStyle来获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.defaultView.getComputedStyle ? &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.defaultView.getComputedStyle(elem, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)[property] : elem.currentStyle[property];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;有了这个方法之后，就可以开始动手写获取目标元素初始位置的方法了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTargetPos&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pos = { &lt;span class=&quot;attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transform = getTransform();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transform) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transformValue = getStyle(elem, transform);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transformValue == &lt;span class=&quot;string&quot;&gt;&#39;none&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      elem.style[transform] = &lt;span class=&quot;string&quot;&gt;&#39;translate(0, 0)&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; temp = transformValue.match(&lt;span class=&quot;regexp&quot;&gt;/-?\d+/g&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pos = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(temp[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;].trim()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(temp[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;].trim())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (getStyle(elem, &lt;span class=&quot;string&quot;&gt;&#39;position&#39;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;static&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      elem.style.position = &lt;span class=&quot;string&quot;&gt;&#39;relative&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(getStyle(elem, &lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;) ? getStyle(elem, &lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; y = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(getStyle(elem, &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;) ? getStyle(elem, &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pos = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x: x,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y: y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在拖拽过程中，需要不停的设置目标元素的新位置，这样它才会移动起来，因此我们需要一个设置目标元素位置的方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// pos = { x: 200, y: 100 }&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setTargetPos&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem, pos&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transform = getTransform();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transform) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elem.style[transform] = &lt;span class=&quot;string&quot;&gt;&#39;translate(&#39;&lt;/span&gt; + pos.x + &lt;span class=&quot;string&quot;&gt;&#39;px, &#39;&lt;/span&gt; + pos.y + &lt;span class=&quot;string&quot;&gt;&#39;px)&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elem.style.left = pos.x + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elem.style.top = pos.y + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; elem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;我们需要用到哪些事件？&quot;&gt;&lt;a href=&quot;#我们需要用到哪些事件？&quot; class=&quot;headerlink&quot; title=&quot;我们需要用到哪些事件？&quot;&gt;&lt;/a&gt;我们需要用到哪些事件？&lt;/h2&gt;&lt;p&gt;在pc上的浏览器中，结合&lt;code&gt;mousedown&lt;/code&gt;、&lt;code&gt;mousemove&lt;/code&gt;、&lt;code&gt;mouseup&lt;/code&gt;这三个事件可以帮助我们实现拖拽。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mousedown 鼠标按下时触发&lt;/li&gt;
&lt;li&gt;mousemove 鼠标按下后拖动时触发&lt;/li&gt;
&lt;li&gt;mouseup 鼠标松开时触发&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;而在移动端，分别与之对应的则是&lt;code&gt;touchstart&lt;/code&gt;、&lt;code&gt;touchmove&lt;/code&gt;、&lt;code&gt;touchend&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当元素绑定这些事件时，有一个事件对象会作为参数传递给回调函数，通过事件对象，我们可以获取到当前鼠标的精确位置，鼠标位置信息是实现拖拽的关键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;事件对象十分重要，其中包含了非常多的有用的信息，在这里就不扩展了，大家可以在函数中将事件对象打印出来查看其中的具体属性，这个方法对于记不清事件对象重要属性的童鞋非常有用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;拖拽的原理&quot;&gt;&lt;a href=&quot;#拖拽的原理&quot; class=&quot;headerlink&quot; title=&quot;拖拽的原理&quot;&gt;&lt;/a&gt;拖拽的原理&lt;/h2&gt;&lt;p&gt;当事件触发时，可以通过事件对象获取到鼠标的精切位置。这是实现拖拽的关键。当鼠标按下(mousedown触发)时，需要记住鼠标的初始位置与目标元素的初始位置，我们的目标就是实现当鼠标移动时，目标元素也跟着移动，根据常理我们可以得出如下关系：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;移动后的鼠标位置 - 鼠标初始位置 = 移动后的目标元素位置 - 目标元素的初始位置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果鼠标位置的差值我们用dis来表示，那么目标元素的位置就等于：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;移动后目标元素的位置 = dis + 目标元素的初始位置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过事件对象，可以精确的知道鼠标的当前位置，因此当鼠标拖动(mousemove)时，我们可以不停的计算出鼠标移动的差值，以此来求出目标元素的当前位置。这个过程，就实现了拖拽。&lt;/p&gt;
&lt;p&gt;而在鼠标松开(mouseup)结束拖拽时，我们需要处理一些收尾工作。详情见代码。&lt;/p&gt;
&lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;准备工作&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取目标元素对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oElem = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;target&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 声明2个变量用来保存鼠标初始位置的x，y坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; startX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; startY = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 声明2个变量用来保存目标元素初始位置的x，y坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sourceX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sourceY = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;功能函数&lt;br&gt;之前已经贴过代码，就不再重复贴了。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取当前浏览器支持的transform兼容写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTransform&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取元素属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getStyle&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem, property&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取元素的初始位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTargetPos&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置元素的初始位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setTargetPos&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem, potions&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;声明三个事件的回调函数&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 绑定在mousedown上的回调，event为传入的事件对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取鼠标初始位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  startX = event.pageX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  startY = event.pageY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取元素初始位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pos = getTargetPos(oElem);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sourceX = pos.x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sourceY = pos.y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 绑定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mousemove&#39;&lt;/span&gt;, move, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mouseup&#39;&lt;/span&gt;, end, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取鼠标当前位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; currentX = event.pageX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; currentY = event.pageY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 计算差值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; distanceX = currentX - startX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; distanceY = currentY - startY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 计算并设置元素当前位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setTargetPos(oElem, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    x: (sourceX + distanceX).toFixed(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y: (sourceY + distanceY).toFixed()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;end&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.removeEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mousemove&#39;&lt;/span&gt;, move);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.removeEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mouseup&#39;&lt;/span&gt;, end);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// do other things&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
OK，一个简单的拖拽，就这样愉快的实现了。点击下面的链接，可以在线查看该例子的demo。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://codepen.io/yangbo5207/pen/WpEoyd&quot;&gt;使用原生js实现拖拽&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;封装拖拽对象&quot;&gt;&lt;a href=&quot;#封装拖拽对象&quot; class=&quot;headerlink&quot; title=&quot;封装拖拽对象&quot;&gt;&lt;/a&gt;封装拖拽对象&lt;/h2&gt;&lt;p&gt;在&lt;a href=&quot;https://fe32.top/articles/jsnb9538/&quot;&gt;前端基础进阶（十一）：详解面向对象、构造函数、原型与原型链&lt;/a&gt;一文中跟大家分享了面向对象如何实现，基于那些基础知识，我们来将上面实现的拖拽封装为一个拖拽对象。目标是只要声明一个拖拽实例，传入的目标元素将自动具备可以被拖拽的功能。&lt;/p&gt;
&lt;p&gt;在实际开发中，一个对象常常会被单独放在一个js文件中，这个js文件将单独作为一个模块，利用各种模块的方式组织起来使用。当然这里没有复杂的模块交互，因为这个例子，只需要一个模块即可。&lt;/p&gt;
&lt;p&gt;为了避免变量污染，需要将模块放置于一个函数自执行方式模拟的块级作用域中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;在普通的模块组织中，我们只是单纯的将许多js文件压缩成为一个js文件，因此此处的第一个分号则是为了防止上一个模块的结尾不用分号导致报错。必不可少。当然在通过require或者ES6模块等方式就不会出现这样的情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在封装一个对象的时候，可以将属性与方法放置于构造函数或者原型中，而在增加了自执行函数之后，又可以将属性和方法放置于模块的内部作用域。&lt;/p&gt;
&lt;span class=&quot;p blue&quot;&gt;那么我们面临的挑战就在于，如何合理的处理属性与方法的位置&lt;/span&gt; 。

&lt;p&gt;当然，每一个对象的情况都不一样，不能一概而论，我们需要清晰的知道这三种位置的特性才能做出最适合的决定。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构造函数中： 属性与方法为当前实例单独拥有，只能被当前实例访问，并且每声明一个实例，其中的方法都会被重新创建一次。&lt;/li&gt;
&lt;li&gt;原型中： 属性与方法为所有实例共同拥有，可以被所有实例访问，新声明实例不会重复创建方法。&lt;/li&gt;
&lt;li&gt;模块作用域中：属性和方法不能被任何实例访问，但是能被内部方法访问，新声明的实例，不会重复创建相同的方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于方法的判断比较简单。&lt;/p&gt;
&lt;p&gt;在构造函数中的方法总会在声明一个新的实例时被重复创建，因此我们声明的方法都尽量避免出现在构造函数中。&lt;/p&gt;
&lt;p&gt;如果方法中需要用到构造函数中的变量，或者想要公开，就需要放在原型中。&lt;/p&gt;
&lt;p&gt;如果方法需要私有不被外界访问，那么就放置在模块作用域中。&lt;/p&gt;
&lt;p&gt;对于属性放置于什么位置有的时候很难做出正确的判断，因此我很难给出一个准确的定义告诉你什么属性一定要放在什么位置，这需要在实际开发中不断的总结经验。但是总的来说，仍然要结合这三个位置的特性来做出最合适的判断。&lt;/p&gt;
&lt;p&gt;如果属性值只能被实例单独拥有，比如person对象的name，只能属于某一个person实例，又比如这里拖拽对象中，某一个元素的初始位置，也仅仅只是这个元素的当前位置，这个属性，则适合放在构造函数中。&lt;/p&gt;
&lt;p&gt;而如果一个属性仅仅供内部方法访问，这个属性就适合放在模块作用域中。&lt;/p&gt;
&lt;p&gt;根据这些思考，大家可以自己尝试封装一下。然后与我的做一些对比，看看我们的想法有什么不同，在下面例子的注释中，我将自己的想法表达出来。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://codepen.io/yangbo5207/pen/LWjWpe&quot;&gt;点击查看已经封装好的demo&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// js 源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 这是一个私有属性，不需要被实例访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transform = getTransform();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Drag&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;selector&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 放在构造函数中的属性，都是属于每一个实例单独拥有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem = &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; selector == &lt;span class=&quot;string&quot;&gt;&#39;Object&#39;&lt;/span&gt; ? selector : &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(selector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.startX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.startY = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.sourceX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.sourceY = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Drag.prototype = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;Drag&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 初始时需要做些什么事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.setDrag();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 稍作改造，仅用于获取当前元素的属性，类似于getName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getStyle: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;property&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.defaultView.getComputedStyle ? &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.defaultView.getComputedStyle(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)[property] : &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem.currentStyle[property];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 用来获取当前元素的位置信息，注意与之前的不同之处&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getPosition: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pos = { &lt;span class=&quot;attr&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transform) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transformValue = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getStyle(transform);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transformValue == &lt;span class=&quot;string&quot;&gt;&#39;none&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem.style[transform] = &lt;span class=&quot;string&quot;&gt;&#39;translate(0, 0)&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; temp = transformValue.match(&lt;span class=&quot;regexp&quot;&gt;/-?\d+/g&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          pos = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(temp[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;].trim()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(temp[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;].trim())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getStyle(&lt;span class=&quot;string&quot;&gt;&#39;position&#39;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;static&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem.style.position = &lt;span class=&quot;string&quot;&gt;&#39;relative&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          pos = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getStyle(&lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;) ? &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getStyle(&lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getStyle(&lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;) ? &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getStyle(&lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 用来设置当前元素的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setPostion: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;pos&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transform) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem.style[transform] = &lt;span class=&quot;string&quot;&gt;&#39;translate(&#39;&lt;/span&gt; + pos.x + &lt;span class=&quot;string&quot;&gt;&#39;px, &#39;&lt;/span&gt; + pos.y + &lt;span class=&quot;string&quot;&gt;&#39;px)&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem.style.left = pos.x + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem.style.top = pos.y + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 该方法用来绑定事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDrag: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.elem.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mousedown&#39;&lt;/span&gt;, start, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.startX = event.pageX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.startY = event.pageY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pos = self.getPosition();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.sourceX = pos.x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.sourceY = pos.y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mousemove&#39;&lt;/span&gt;, move, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mouseup&#39;&lt;/span&gt;, end, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; currentX = event.pageX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; currentY = event.pageY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; distanceX = currentX - self.startX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; distanceY = currentY - self.startY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.setPostion({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          x: (self.sourceX + distanceX).toFixed(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          y: (self.sourceY + distanceY).toFixed()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;end&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.removeEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mousemove&#39;&lt;/span&gt;, move);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.removeEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mouseup&#39;&lt;/span&gt;, end);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// do other things&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 私有方法，仅仅用来获取transform的兼容写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTransform&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transform = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      divStyle = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;).style,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      transformArr = [&lt;span class=&quot;string&quot;&gt;&#39;transform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;webkitTransform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;MozTransform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;msTransform&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;OTransform&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      len = transformArr.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (; i &amp;lt; len; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transformArr[i] &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; divStyle) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; transform = transformArr[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 一种对外暴露的方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.Drag = Drag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用：声明2个拖拽实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Drag(&lt;span class=&quot;string&quot;&gt;&#39;target&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Drag(&lt;span class=&quot;string&quot;&gt;&#39;target2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样一个拖拽对象就封装完毕了。&lt;/p&gt;
&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十一）：详解面向对象、构造函数、原型与原型链</title>
    <link href="https://fe32.top/articles/jsnb9538/"/>
    <id>https://fe32.top/articles/jsnb9538/</id>
    <published>2022-06-22T13:32:24.000Z</published>
    <updated>2023-06-27T14:39:00.765Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;对象的定义&quot;&gt;&lt;a href=&quot;#对象的定义&quot; class=&quot;headerlink&quot; title=&quot;对象的定义&quot;&gt;&lt;/a&gt;对象的定义&lt;/h2&gt;&lt;p&gt;在ECMAScript-262中，对象被定义为“ &lt;span class=&quot;p blue&quot;&gt;无序属性的集合，其属性可以包含基本值，对象或者函数&lt;/span&gt; ”。&lt;/p&gt;
&lt;p&gt;也就是说，在JavaScript中，对象无非就是由一些列无序的&lt;code&gt;key-value&lt;/code&gt;对组成。其中value可以是基本值，对象或者函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这里的person就是一个对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;Tom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parent: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;创建对象&quot;&gt;&lt;a href=&quot;#创建对象&quot; class=&quot;headerlink&quot; title=&quot;创建对象&quot;&gt;&lt;/a&gt;创建对象&lt;/h3&gt;&lt;p&gt;可以通过new的方式创建一个对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;也可以通过对象字面量的形式创建一个简单的对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;想要给简单对象添加方法时，可以这样表示，&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 可以这样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.name = &lt;span class=&quot;string&quot;&gt;&quot;TOM&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 也可以这样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&quot;TOM&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;访问对象的属性和方法&quot;&gt;&lt;a href=&quot;#访问对象的属性和方法&quot; class=&quot;headerlink&quot; title=&quot;访问对象的属性和方法&quot;&gt;&lt;/a&gt;访问对象的属性和方法&lt;/h3&gt;&lt;p&gt;假如有一个简单的对象如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;string&quot;&gt;&#39;20&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;想要访问它的name属性时，可以用如下两种方式访问。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;person.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果想要访问的属性名是一个变量时，常常会使用第二种方式。例如我们要同时访问person的name与age，可以这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;].forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person[item]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h2&gt;&lt;p&gt;使用上面的方式创建对象虽然简单，但是在很多时候并不能满足需求。以person对象为例，假如在实际开发中，不仅仅需要一个名字叫做TOM的person对象，同时还需要另外一个名为Jake的person对象，虽然它们有很多相似之处，但是不得不重复写两次。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; perTom = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; perJake = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;Jake&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;很显然这并不是合理的方式，当相似对象太多时，大家都会崩溃掉。&lt;/p&gt;
&lt;p&gt;可以使用工厂模式解决这个问题。顾名思义，工厂模式就是我们提供一个模子，然后通过这个模子复制出需要的对象。需要多少个，就复制多少个。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; createPerson = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 声明一个中间对象，该对象就是工厂模式的模子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 依次添加我们需要的属性与方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    o.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    o.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    o.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建两个实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; perTom = createPerson(&lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; PerJake = createPerson(&lt;span class=&quot;string&quot;&gt;&#39;Jake&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;工厂模式帮助我们解决了重复代码上的麻烦，让我们可以写很少的代码，就能够创建很多个person对象。但是这里还有两个麻烦，需要我们注意。&lt;/p&gt;
&lt;p&gt;第一个麻烦就是：没有办法识别对象实例的类型。我们可以使用 instanceof 识别对象的类型，如下例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(obj &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因此在工厂模式的基础上，我们需要使用 &lt;span class=&quot;p blue&quot;&gt;构造函数&lt;/span&gt; 的方式来解决这个麻烦。&lt;/p&gt;
&lt;h2 id=&quot;构造函数&quot;&gt;&lt;a href=&quot;#构造函数&quot; class=&quot;headerlink&quot; title=&quot;构造函数&quot;&gt;&lt;/a&gt;构造函数&lt;/h2&gt;&lt;p&gt;在JavaScript中，&lt;span class=&quot;p blue&quot;&gt;new关键字&lt;/span&gt; 可以让一个函数变得与众不同。通过下面的例子，我们来一探 &lt;span class=&quot;p blue&quot;&gt;new关键字&lt;/span&gt; 的神奇之处。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;demo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;demo();  &lt;span class=&quot;comment&quot;&gt;// window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; demo();  &lt;span class=&quot;comment&quot;&gt;// demo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;为了能够直观地感受它们不同，建议大家动手实践观察一下。很显然，使用new之后，函数内部发生了事情，让this指向改变。new关键字到底做了什么？&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 先一本正经的创建一个构造函数，其实该函数与普通函数并无区别&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Person = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 将构造函数以参数形式传入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;New&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;func&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 声明一个中间对象，该对象为最终返回的实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = {};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (func.prototype !== &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 将实例的原型指向构造函数的原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.__proto__ = func.prototype;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ret为构造函数执行的结果，这里通过apply，将构造函数内部的this指向修改为指向res，即为实例对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ret = func.apply(res, &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.slice.call(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 当我们在构造函数中明确指定了返回对象时，那么new的执行结果就是该返回对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; ret === &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt; || &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; ret === &lt;span class=&quot;string&quot;&gt;&quot;function&quot;&lt;/span&gt;) &amp;amp;&amp;amp; ret !== &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 如果没有明确指定返回对象，则默认返回res，这个res就是实例对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过new声明创建实例，这里的p1，实际接收的正是new中返回的res&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = New(Person, &lt;span class=&quot;string&quot;&gt;&#39;tom&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p1.getName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 当然，这里也可以判断出实例的类型了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p1 &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; Person); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;JavaScript内部再通过其他的一些特殊处理，将&lt;code&gt;var p1 = New(Person, &#39;tom&#39;, 20)&lt;/code&gt; 等效于&lt;code&gt;var p1 = new Person(&#39;tom&#39;, 20)&lt;/code&gt;。就是我们认识的new关键字了。具体怎么处理的，我也不知道，别刨根问底了，一直回答下去我太难了 ！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了能够判断实例与对象的关系，我们使用构造函数来搞定。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Person = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;Ness&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p1.getName());  &lt;span class=&quot;comment&quot;&gt;// Ness&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p1 &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; Person); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;关于构造函数，如果你暂时不能够理解new的具体实现，就先记住下面这几个结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与普通函数相比，构造函数并没有任何特别的地方，首字母大写只是我们约定的小规定，用于区分普通函数。&lt;/li&gt;
&lt;li&gt;new关键字让构造函数具有了与普通函数不同的许多特点，而new的过程中，执行了如下过程：&lt;ol&gt;
&lt;li&gt;声明一个中间对象；&lt;/li&gt;
&lt;li&gt;将该中间对象的原型指向构造函数的原型；&lt;/li&gt;
&lt;li&gt;将构造函数的this，指向该中间对象；&lt;/li&gt;
&lt;li&gt;返回该中间对象，即返回实例对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;原型&quot;&gt;&lt;a href=&quot;#原型&quot; class=&quot;headerlink&quot; title=&quot;原型&quot;&gt;&lt;/a&gt;原型&lt;/h2&gt;&lt;p&gt;构造函数虽然解决了判断实例类型的问题，但终究是一个对象复制的过程。跟工厂模式颇有相似之处。也就是说，当我们声明了100个person对象，就有100个getName方法被重新生成。&lt;/p&gt;
&lt;p&gt;每一个getName方法实现的功能其实是一模一样的，但由于分别属于不同的实例，就不得不一直不停的为getName分配空间。这就是工厂模式存在的第二个麻烦。&lt;/p&gt;
&lt;p&gt;显然这是不合理的。我们期望的是，既然都是实现同一个功能，那么能不能就让每一个实例对象都访问同一个方法？当然能，这就是原型对象要帮我们解决的问题了。&lt;/p&gt;
&lt;p&gt;每创建一个函数，都有一个prototype属性，该属性指向一个对象。这个对象，就是我们这里说的原型对象。&lt;/p&gt;
&lt;p&gt;创建对象时，可以根据自己的需求，选择性的将一些属性和方法通过prototype属性，挂载在原型对象上。而每一个new出来的实例，都有一个__proto__属性，该属性指向构造函数的原型对象，通过这个属性，让实例对象也能够访问原型对象上的方法。因此，当所有的实例都能够通过__proto__访问到原型对象时，原型对象的方法与属性就变成了共有方法与属性。&lt;/p&gt;
&lt;p&gt;我们通过一个简单的例子与图示，来了解构造函数，实例与原型三者之间的关系。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 声明构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过prototye属性，将方法挂载到原型对象上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;tim&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;jak&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p1.getName === p2.getName); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/23/62b4709b17dc2.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过上图可以看出，构造函数的prototype与所有实例对象的__proto__都指向原型对象。而原型对象的constructor指向构造函数。&lt;/p&gt;
&lt;p&gt;除此之外，还可以从图中看出，实例对象实际上对前面所说的中间对象的复制，而中间对象中的属性与方法都在构造函数中添加。于是根据构造函数与原型的特性，可以在构造函数中，通过this声明的属性与方法称为私有变量与方法，它们被当前被某一个实例对象所独有。而通过原型声明的属性与方法，我们可以称之为共有属性与方法，它们可以被所有的实例对象访问。&lt;/p&gt;
&lt;p class=&quot;p blue&quot;&gt;当我们访问实例对象中的属性或者方法时，会优先访问实例对象自身的属性和方法。&lt;/p&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;this is constructor.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;tim&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p1.getName(); &lt;span class=&quot;comment&quot;&gt;// this is constructor.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在这个例子中，我们同时在原型与构造函数中都声明了一个getName函数，运行代码的结果表示原型中的访问并没有被访问。&lt;/p&gt;
&lt;p&gt;我们还可以通过in来判断，一个对象是否拥有某一个属性/方法，无论是该属性/方法存在于实例对象还是原型对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;tim&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; p1); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h3 id=&quot;更简单的原型写法&quot;&gt;&lt;a href=&quot;#更简单的原型写法&quot; class=&quot;headerlink&quot; title=&quot;更简单的原型写法&quot;&gt;&lt;/a&gt;更简单的原型写法&lt;/h3&gt;&lt;p&gt;根据前面例子的写法，如果要在原型上添加更多的方法，可以这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.sayHello = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;除此之外，还可以使用更为简单的写法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) {},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getAge: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sayHello: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这种字面量的写法看上去简单很多，但是有一个需要特别注意的地方。&lt;code&gt;Person.prototype = {}&lt;/code&gt;实际上是重新创建了一个&lt;code&gt;{}&lt;/code&gt;对象并赋值给&lt;code&gt;Person.prototype&lt;/code&gt;，这里的&lt;code&gt;{}&lt;/code&gt;并不是最初的那个原型对象。因此它里面并不包含&lt;code&gt;constructor&lt;/code&gt;属性。为了保证正确性，我们必须在新创建的&lt;code&gt;{}&lt;/code&gt;对象中显示的设置&lt;code&gt;constructor&lt;/code&gt;的指向。即上面的&lt;code&gt;constructor: Person&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;原型链&quot;&gt;&lt;a href=&quot;#原型链&quot; class=&quot;headerlink&quot; title=&quot;原型链&quot;&gt;&lt;/a&gt;原型链&lt;/h2&gt;&lt;p&gt;原型对象其实也是普通的对象。几乎所有的对象都可能是原型对象，也可能是实例对象，而且还可以同时是原型对象与实例对象。这样的一个对象，正是构成原型链的一个节点。因此理解了原型，原型链并不是一个多么复杂的概念。&lt;/p&gt;
&lt;p&gt;我们知道所有的函数都有一个叫做toString的方法。那么这个方法到底是在哪里的呢？&lt;/p&gt;
&lt;p&gt;先随意声明一个函数：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;用如下的图来表示这个函数的原型链：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/23/62b47cadc4087.webp&quot; alt=&quot;原型链&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;原型链&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;其中add是Function对象的实例。而Function的原型对象同时又是Object的实例。这样就构成了一条原型链。原型链的访问，其实跟作用域链有很大的相似之处，它们都是一次单向的查找过程。因此实例对象能够通过原型链，访问到处于原型链上对象的所有属性与方法。这也是foo最终能够访问到处于Object原型对象上的toString方法的原因。&lt;/p&gt;
&lt;p&gt;基于原型链的特性，我们可以很轻松的实现 &lt;span class=&quot;p blue&quot;&gt;继承&lt;/span&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h2&gt;&lt;p&gt;我们常常结合构造函数与原型来创建一个对象。因为构造函数与原型的不同特性，因此当我们想要实现继承时，就必须得根据构造函数与原型的不同而采取不同的策略。&lt;/p&gt;
&lt;p&gt;声明一个Person对象，该对象将作为父级，而子级cPerson将要继承Person的所有属性与方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;首先来看构造函数的继承。在上面我们已经理解了构造函数的本质，它其实是在new内部实现的一个复制过程。而我们在继承时想要的，就是想父级构造函数中的操作在子级的构造函数中重现一遍即可。我们可以通过call方法来达到目的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 构造函数的继承&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cPerson&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, job&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Person.call(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;, name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.job = job;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;原型的继承，只需要将子级的原型对象设置为父级的一个实例，加入到原型链中即可。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 继承原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cPerson.prototype = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 添加更多方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cPerson.prototype.getLive = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/23/62b4814c51a07.webp&quot; alt=&quot;原型链&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;原型链&lt;/span&gt;&lt;/div&gt;

&lt;h2 id=&quot;更好的继承&quot;&gt;&lt;a href=&quot;#更好的继承&quot; class=&quot;headerlink&quot; title=&quot;更好的继承&quot;&gt;&lt;/a&gt;更好的继承&lt;/h2&gt;&lt;p&gt;假设原型链的终点&lt;code&gt;Object.prototype&lt;/code&gt;为原型链的E(end)端，原型链的起点为S(start)端。&lt;/p&gt;
&lt;p&gt;通过前面对原型链的学习，我们知道，处于S端的对象，可以通过S -&amp;gt; E的单向查找，访问到原型链上的所有方法与属性。因此这给继承提供了理论基础。我们只需要在S端添加新的对象，那么新对象就能够通过原型链访问到父级的方法与属性。因此想要实现继承，是一件非常简单的事情。&lt;/p&gt;
&lt;p&gt;因为封装一个对象由构造函数与原型共同组成，因此继承也会分别有构造函数的继承与原型的继承。&lt;/p&gt;
&lt;p&gt;假设我们已经封装好了一个父类对象Person。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Person = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;构造函数的继承比较简单，可以借助call/apply来实现。假设我们要通过继承封装一个Student的子类对象。那么构造函数可以如下实现。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Student = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, grade&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 通过call方法还原Person构造函数中的所有处理逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Person.call(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;, name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.grade = grade;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 等价于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Student = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, grade&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.grade = grade;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;原型的继承则只需要让子类对象的原型，成为父类对象的一个实例，然后通过__proto__就可以访问父类对象的原型。这样就继承了父类原型中的方法与属性了。&lt;/p&gt;
&lt;p&gt;我们可以先封装一个方法，该方法根据父类对象的原型创建一个实例，该实例将会作为子类对象的原型。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;proto, options&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 创建一个空对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tmp = {};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 让这个新的空对象成为父类对象的实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmp.__proto__ = proto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 传入的方法都挂载到新对象上，新的对象将作为子类对象的原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperties(tmp, options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;简单封装&lt;code&gt;create&lt;/code&gt;对象之后就可以使用该方法来实现原型的继承了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype = create(Person.prototype, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 不要忘了重新指定构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: Student&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getGrade: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.grade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们来验证一下这里实现的继承是否正确。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student(&lt;span class=&quot;string&quot;&gt;&#39;ming&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s1.getName());  &lt;span class=&quot;comment&quot;&gt;// ming&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s1.getAge());   &lt;span class=&quot;comment&quot;&gt;// 22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s1.getGrade()); &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;全部都能正常访问，没问题。在ECMAScript5中直接提供了一个&lt;code&gt;Object.create&lt;/code&gt;方法来完成我们上面自己封装的&lt;code&gt;create&lt;/code&gt;的功能。因此我们可以直接使用&lt;code&gt;Object.create&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype = create(Person.prototype, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 不要忘了重新指定构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: Student&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getGrade: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.grade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;完整代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, grade&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 构造函数继承&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Person.call(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;, name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.grade = grade;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 原型继承&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.create(Person.prototype, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 不要忘了重新指定构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: Student&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getGrade: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.grade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student(&lt;span class=&quot;string&quot;&gt;&#39;ming&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s1.getName());  &lt;span class=&quot;comment&quot;&gt;// ming&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s1.getAge());   &lt;span class=&quot;comment&quot;&gt;// 22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s1.getGrade()); &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;属性类型&quot;&gt;&lt;a href=&quot;#属性类型&quot; class=&quot;headerlink&quot; title=&quot;属性类型&quot;&gt;&lt;/a&gt;属性类型&lt;/h2&gt;&lt;p&gt;在上面的继承实现中，使用了一个大家可能不太熟悉的方法&lt;code&gt;defineProperties&lt;/code&gt;。并且在定义&lt;code&gt;getGrade&lt;/code&gt;时使用了一个很奇怪的方式。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;getGrade: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.grade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这其实是对象中的属性类型。在我们平常的使用中，给对象添加一个属性时，直接使用&lt;code&gt;object.param&lt;/code&gt;的方式就可以了，或者直接在对象中挂载。&lt;/p&gt;
&lt;p&gt;在ECMAScript5中，对每个属性都添加了几个属性类型，来描述这些属性的特点。它们分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;configurable: 表示该属性是否能被delete删除。当其值为false时，其他的特性也不能被改变。默认值为true&lt;/li&gt;
&lt;li&gt;enumerable: 是否能枚举。也就是是否能被for-in遍历。默认值为true&lt;/li&gt;
&lt;li&gt;writable: 是否能修改值。默认为true&lt;/li&gt;
&lt;li&gt;value: 该属性的具体值是多少。默认为undefined&lt;/li&gt;
&lt;li&gt;get: 当我们通过&lt;code&gt;person.name&lt;/code&gt;访问name的值时，get将被调用。该方法可以自定义返回的具体值是多少。get默认值为undefined&lt;/li&gt;
&lt;li&gt;set: 当我们通过&lt;code&gt;person.name = &#39;Jake&#39;&lt;/code&gt;设置name的值时，set方法将被调用。该方法可以自定义设置值的具体方式。set默认值为undefined&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是，不能同时设置value、writable 与 get、set的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们可以通过&lt;code&gt;Object.defineProperty&lt;/code&gt;方法来修改这些属性类型。下面用一些简单的例子来演示一下这些属性类型的具体表现。&lt;/p&gt;
&lt;h3 id=&quot;configurable&quot;&gt;&lt;a href=&quot;#configurable&quot; class=&quot;headerlink&quot; title=&quot;configurable&quot;&gt;&lt;/a&gt;configurable&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 用普通的方式给person对象添加一个name属性，值为TOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用delete删除该属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; person.name;  &lt;span class=&quot;comment&quot;&gt;// 返回true 表示删除成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过Object.defineProperty重新添加name属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 并设置name的属性类型的configurable为false，表示不能再用delete删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(person, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    configurable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: &lt;span class=&quot;string&quot;&gt;&#39;Jake&#39;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;// 设置name属性的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 再次delete，已经不能删除了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; person.name   &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name)    &lt;span class=&quot;comment&quot;&gt;// 值为Jake&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 试图改变value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.name = &lt;span class=&quot;string&quot;&gt;&quot;alex&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name) &lt;span class=&quot;comment&quot;&gt;// Jake 改变失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;enumerable&quot;&gt;&lt;a href=&quot;#enumerable&quot; class=&quot;headerlink&quot; title=&quot;enumerable&quot;&gt;&lt;/a&gt;enumerable&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用for-in枚举person的属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; params = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; person) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    params.push(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 查看枚举结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(params);  &lt;span class=&quot;comment&quot;&gt;// [&#39;name&#39;, &#39;age&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 重新设置name属性的类型，让其不可被枚举&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(person, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    enumerable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; params_ = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; person) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    params_.push(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 再次查看枚举结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(params_); &lt;span class=&quot;comment&quot;&gt;// [&#39;age&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;writable&quot;&gt;&lt;a href=&quot;#writable&quot; class=&quot;headerlink&quot; title=&quot;writable&quot;&gt;&lt;/a&gt;writable&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 修改name的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.name = &lt;span class=&quot;string&quot;&gt;&#39;Jake&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 查看修改结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name); &lt;span class=&quot;comment&quot;&gt;// Jake 修改成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置name的值不能被修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(person, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    writable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 再次试图修改name的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.name = &lt;span class=&quot;string&quot;&gt;&#39;alex&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name); &lt;span class=&quot;comment&quot;&gt;// Jake 修改失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;value&quot;&gt;&lt;a href=&quot;#value&quot; class=&quot;headerlink&quot; title=&quot;value&quot;&gt;&lt;/a&gt;value&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 添加一个name属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(person, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: &lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name)  &lt;span class=&quot;comment&quot;&gt;// TOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;get-set&quot;&gt;&lt;a href=&quot;#get-set&quot; class=&quot;headerlink&quot; title=&quot;get/set&quot;&gt;&lt;/a&gt;get/set&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过get与set自定义访问与设置name属性的方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(person, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    get: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 一直返回TOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    set: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 设置name属性时，返回该字符串，value为新值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(value + &lt;span class=&quot;string&quot;&gt;&#39; in set&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第一次访问name，调用get&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name)   &lt;span class=&quot;comment&quot;&gt;// TOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 尝试修改name值，此时set方法被调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.name = &lt;span class=&quot;string&quot;&gt;&#39;alex&#39;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;// alex in set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第二次访问name，还是调用get&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name) &lt;span class=&quot;comment&quot;&gt;// TOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;请尽量同时设置get、set。如果仅仅只设置了get，那么将无法设置该属性值。如果仅仅只设置了set，也无法读取该属性的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;只能设置一个属性的属性特性。当我们想要同时设置多个属性的特性时，需要使用之前提到过的&lt;code&gt;Object.defineProperties&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperties(person, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: &lt;span class=&quot;string&quot;&gt;&#39;Jake&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        configurable: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.value || &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.value = value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.name   &lt;span class=&quot;comment&quot;&gt;// Jake&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.age    &lt;span class=&quot;comment&quot;&gt;// 22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;读取属性的特性值&quot;&gt;&lt;a href=&quot;#读取属性的特性值&quot; class=&quot;headerlink&quot; title=&quot;读取属性的特性值&quot;&gt;&lt;/a&gt;读取属性的特性值&lt;/h3&gt;&lt;p&gt;我们可以使用&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;方法读取某一个属性的特性值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(person, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: &lt;span class=&quot;string&quot;&gt;&#39;alex&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    writable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    configurable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; descripter = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.getOwnPropertyDescriptor(person, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(descripter);  &lt;span class=&quot;comment&quot;&gt;// 返回结果如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;descripter = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    configurable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    enumerable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value: &lt;span class=&quot;string&quot;&gt;&#39;alex&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    writable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（十）：深入详解函数的柯里化</title>
    <link href="https://fe32.top/articles/jsnb9537/"/>
    <id>https://fe32.top/articles/jsnb9537/</id>
    <published>2022-06-22T13:32:15.000Z</published>
    <updated>2023-06-27T14:39:00.765Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;柯里化是函数的一个高级应用，通过上一个章节的学习我们知道，接收函数作为参数的函数，都可以叫做高阶函数。这一章我们要学习的柯里化，其实就是高阶函数的一种特殊用法。&lt;/p&gt;
&lt;p class=&quot;p blue&quot;&gt;柯里化是指这样一个函数(假设叫做createCurry)，他接收函数A作为参数，运行后能够返回一个新的函数。并且这个新的函数能够处理函数A的剩余参数。&lt;/p&gt; 

&lt;p&gt;这样的定义可能不太好理解，我们可以通过下面的例子配合解释。&lt;/p&gt;
&lt;p&gt;有一个接收三个参数的函数A。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b, c&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// do something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;假如有一个已经封装好了的柯里化通用函数createCurry。它接收bar作为参数，能够将A转化为柯里化函数，返回结果就是这个被转化之后的函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _A = createCurry(A);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么_A作为createCurry运行的返回函数，它能够处理A的剩余参数。因此下面的运行结果都是等价的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_A(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_A(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_A(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_A(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;函数A被createCurry转化之后得到柯里化函数_A，_A能够处理A的所有剩余参数。因此柯里化也被称为部分求值。&lt;/p&gt;
&lt;p&gt;在简单的场景下，可以不用借助柯里化通用式来转化得到柯里化函数，我们凭借眼力自己封装。&lt;/p&gt;
&lt;p&gt;例如有一个简单的加法函数，它能够将自身的三个参数加起来并返回计算结果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b, c&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b + c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么add函数的柯里化函数_add则可以如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;b&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;c&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b + c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，靠眼力封装的柯里化函数自由度偏低，柯里化通用式具备更加强大的能力。需要知道如何去封装这样一个柯里化的通用式。&lt;/p&gt;
&lt;p&gt;首先通过_add可以看出，柯里化函数的运行过程其实是一个参数的收集过程，将每一次传入的参数收集起来，并在最里层里面处理。在实现createCurry时，可以借助这个思路来进行封装。&lt;/p&gt;
&lt;p&gt;封装如下:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 简单实现，参数只能从右到左传递&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createCurry&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;func, args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arity = func.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; args = args || [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _args = [].slice.call(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [].push.apply(_args, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 如果参数个数小于最初的func.length，则递归调用，继续收集参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_args.length &amp;lt; arity) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; createCurry.call(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;, func, _args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 参数收集完毕，则执行func&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; func.apply(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;, _args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;尽管已经做了足够详细的注解，但是理解起来可能并不是那么容易，因此建议大家用点耐心多阅读几遍。这个createCurry函数的封装借助闭包与递归，实现了一个参数收集，并在收集完毕之后执行所有参数的一个过程。&lt;/p&gt;
&lt;p&gt;聪明的读者可能已经发现，把函数经过createCurry转化为一个柯里化函数，最后执行的结果，不是正好相当于执行函数自身吗？柯里化是不是把简单的问题复杂化了？&lt;/p&gt;
&lt;p&gt;如果你能够提出这样的问题，那么说明你确实已经对柯里化有了一定的了解。柯里化确实是把简答的问题复杂化了，但是复杂化的同时，我们使用函数拥有了更加多的自由度。而这里对于函数参数的自由处理，正是柯里化的核心所在。&lt;/p&gt;
&lt;p&gt;举一个非常常见的例子。&lt;/p&gt;
&lt;p&gt;如果我们想要验证一串数字是否是正确的手机号，按照普通的思路来做，大家可能是这样封装，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkPhone&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;phoneNumber&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^1[34578]\d{9}$/&lt;/span&gt;.test(phoneNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;而如果想要验证是否是邮箱呢？这么封装：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkEmail&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;email&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^(\w)+(\.\w+)*@(\w)+((\.\w+)+)$/&lt;/span&gt;.test(email);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们还可能会遇到验证身份证号，验证密码等各种验证信息，因此在实践中，为了统一逻辑，我们会封装一个更为通用的函数，将用于验证的正则与将要被验证的字符串作为参数传入。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;targetString, reg&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; reg.test(targetString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是这样封装之后，在使用时又会稍微麻烦一点，因为会总是输入一串正则，这样就导致了使用时的效率低下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;check(&lt;span class=&quot;regexp&quot;&gt;/^1[34578]\d{9}$/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;14900000088&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;check(&lt;span class=&quot;regexp&quot;&gt;/^(\w)+(\.\w+)*@(\w)+((\.\w+)+)$/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;test@163.com&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个时候，我们可以借助柯里化，在check的基础上再做一层封装，以简化使用。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _check = createCurry(check);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; checkPhone = _check(&lt;span class=&quot;regexp&quot;&gt;/^1[34578]\d{9}$/&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; checkEmail = _check(&lt;span class=&quot;regexp&quot;&gt;/^(\w)+(\.\w+)*@(\w)+((\.\w+)+)$/&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;最后在使用的时候就会变得更加直观与简洁了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;checkPhone(&lt;span class=&quot;string&quot;&gt;&#39;183888888&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkEmail(&lt;span class=&quot;string&quot;&gt;&#39;xxxxx@test.com&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;经过这个过程我们发现，柯里化能够应对更加复杂的逻辑封装。当情况变得多变，柯里化依然能够应付自如。虽然柯里化在一定程度上将问题复杂化了，也让代码更加不容易理解，但是柯里化在面对复杂情况下的灵活性却让我们不得不爱。&lt;/p&gt;
&lt;p&gt;这个案例本身情况还算简单，不能够特别明显的凸显柯里化的优势，当然主要目的在于借助这个案例帮助大家了解柯里化在实践中的用途。&lt;/p&gt;
&lt;p&gt;继续来思考一个例子。这个例子与map有关。在高阶函数的章节中，我们分析了封装map方法的思考过程。由于我们没有办法确认一个数组在遍历时会执行什么操作，因此只能将调用for循环的这个统一逻辑封装起来，而具体的操作则通过参数传入的形式让使用者自定义。这就是map函数。&lt;/p&gt;
&lt;p&gt;实践中我们常常会发现，在某个项目中，针对于某一个数组的操作其实是固定的，同样的操作，可能会在项目的不同地方调用很多次。&lt;/p&gt;
&lt;p&gt;这个时候，我们就可以在map函数的基础上，进行二次封装，以简化使用。假如这个在项目中会调用多次的操作是将数组的每一项都转化为百分比 1 –&amp;gt; 100%。&lt;/p&gt;
&lt;p&gt;普通思维下我们可以这样来封装。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getNewArray&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;array&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; array.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getNewArray([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.12&lt;/span&gt;]);   &lt;span class=&quot;comment&quot;&gt;// [&#39;100%&#39;, &#39;200%&#39;, &#39;300%&#39;, &#39;12%&#39;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;而如果借助柯里化来二次封装这样的逻辑，则会如下实现：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_map&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;func, array&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; array.map(func);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _getNewArray = createCurry(_map);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; getNewArray = _getNewArray(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getNewArray([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.12&lt;/span&gt;]);   &lt;span class=&quot;comment&quot;&gt;// [&#39;100%&#39;, &#39;200%&#39;, &#39;300%&#39;, &#39;12%&#39;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getNewArray([&lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// [&#39;1%&#39;, &#39;100%&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果项目中的固定操作是希望对数组进行一个过滤，找出数组中的所有Number类型的数据。借助柯里化思维我们可以这样做：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_filter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;func, array&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; array.filter(func);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _find = createCurry(_filter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; findNumber = _find(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; item == &lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;findNumber([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// [1, 2, 3, 4]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 当我们继续封装另外的过滤操作时就会变得非常简单&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 找出数字为20的子项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; find20 = _find(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item, i&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; item === &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find20([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;]);  &lt;span class=&quot;comment&quot;&gt;// 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 找出数组中大于100的所有数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; findGreater100 = _find(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (item &amp;gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;findGreater100([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;122&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// [101, 300, 122]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我采用了与check例子不一样的思维方向来想大家展示我们在使用柯里化时的想法。目的是想告诉大家，柯里化能够帮助我们应对更多更复杂的场景。&lt;/p&gt;
&lt;p&gt;不得不承认，这些例子都太简单了，简单到使用柯里化的思维来处理他们显得有一点多此一举，而且变得难以理解。在未来你的实践中，如果你发现用普通的思维封装一些逻辑慢慢变得困难，不妨想一想在这里学到的柯里化思维，应用起来，柯里化足够强大的自由度一定能给你一个惊喜。&lt;/p&gt;
&lt;p&gt;不建议在任何情况下以炫技为目的的去使用柯里化，在柯里化的实现中，柯里化虽然具有了更多的自由度，但同时柯里化通用式里调用了arguments对象，使用了递归与闭包，因此柯里化的自由度是以牺牲了一定的性能为代价换来的。只有在情况变得复杂时，才是柯里化大显身手的时候。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;额外知识补充：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在前端面试中，你可能会遇到这样一个涉及到柯里化的题目。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实现一个add方法，使计算结果能够满足如下预期：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个题目的目的是想让add执行之后返回一个函数能够继续执行，最终运算的结果是所有出现过的参数之和。而这个题目的难点则在于参数的不固定。我们不知道函数会执行几次。因此不能使用上面封装的createCurry的通用公式来转换一个柯里化函数。只能自己封装，那么怎么办呢？在此之前，补充2个非常重要的知识点。&lt;/p&gt;
&lt;p&gt;第一个要补充的知识点是ES6函数的不定参数。假如有一个数组，希望把这个数组中所有的子项展开传递给一个函数作为参数。那么我们应该怎么做？&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 大家可以思考一下，如果将args数组的子项展开作为add的参数传入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b, c, d&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b + c + d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; args = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在ES5中，我们可以借助之前学过的apply来达到我们的目的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;add.apply(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, args);  &lt;span class=&quot;comment&quot;&gt;// 105&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;而在ES6中，提供了一种新的语法来解决这个问题，那就是不定参。写法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;add(...args);  &lt;span class=&quot;comment&quot;&gt;// 105&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;第二个要补充的知识点是函数的隐式转换。当我们直接将函数参与其他的计算时，函数会默认调用toString方法，直接将函数体转换为字符串参与计算。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fn + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);     &lt;span class=&quot;comment&quot;&gt;// 输出结果 function fn() { return 20 }10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们可以重写函数的toString方法，让函数参与计算时，输出想要的结果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.toString = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fn + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;除此之外，重写函数的valueOf方法也能够改变函数的隐式转换结果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.valueOf = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fn + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当同时重写函数的toString方法与valueOf方法时，最终的结果会取valueOf方法的返回结果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.valueOf = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.toString = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fn + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 60&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;补充了这两个知识点之后，我们可以尝试完成之前的题目了。add方法的实现仍然会是一个参数的收集过程。当add函数执行到最后时，仍然返回的是一个函数，我们可以通过定义toString/valueOf的方式，让这个函数可以直接参与计算，并且转换的结果是我们想要的。而且它本身也仍然可以继续执行接收新的参数。实现方式如下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 第一次执行时，定义一个数组专门用来存储所有的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _args = [].slice.call(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在内部声明一个函数，利用闭包的特性保存_args并收集所有的参数值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; adder = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _adder = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// [].push.apply(_args, [].slice.call(arguments));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            _args.push(...arguments);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _adder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 利用隐式转换的特性，当最后执行时隐式转换，并计算最终的值返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _adder.toString = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _args.reduce(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _adder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// return adder.apply(null, _args);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; adder(..._args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;// f 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;// f 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;// f 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; d = add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;// f 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 可以利用隐式转换的特性参与计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(b + &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(c + &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 40&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(d + &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 也可以继续传入参数，得到的结果再次利用隐式转换参与计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(b(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(c(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(d(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 其实上栗中的add方法，就是下面这个函数的柯里化函数，只不过我们并没有使用通用式来转化，而是自己封装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;...args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; args.reduce(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) =&amp;gt;&lt;/span&gt; a + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（九）：函数与函数式编程</title>
    <link href="https://fe32.top/articles/jsnb9536/"/>
    <id>https://fe32.top/articles/jsnb9536/</id>
    <published>2022-06-19T10:57:43.000Z</published>
    <updated>2023-06-27T14:39:00.768Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;函数声明、函数表达式、匿名函数与自执行函数&quot;&gt;&lt;a href=&quot;#函数声明、函数表达式、匿名函数与自执行函数&quot; class=&quot;headerlink&quot; title=&quot;函数声明、函数表达式、匿名函数与自执行函数&quot;&gt;&lt;/a&gt;函数声明、函数表达式、匿名函数与自执行函数&lt;/h2&gt;&lt;h3 id=&quot;函数声明&quot;&gt;&lt;a href=&quot;#函数声明&quot; class=&quot;headerlink&quot; title=&quot;函数声明&quot;&gt;&lt;/a&gt;函数声明&lt;/h3&gt;&lt;p&gt;JavaScript中，有两种声明方式，一个是使用&lt;code&gt;var/let/const&lt;/code&gt;的变量声明，另一个是使用&lt;code&gt;function&lt;/code&gt;的函数声明。&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&quot;https://fe32.top/articles/jsnb9530/&quot;&gt;前端基础进阶（三）：变量对象详解&lt;/a&gt; 一文中有提到过，变量对象的创建过程中，函数声明比变量声明具有更为优先的执行顺序，即常常提到的函数声明提前。因此在执行上下文中，无论在什么位置声明了函数，都可以在同一个执行上下文中直接使用该函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fn();  &lt;span class=&quot;comment&quot;&gt;// function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;函数表达式&quot;&gt;&lt;a href=&quot;#函数表达式&quot; class=&quot;headerlink&quot; title=&quot;函数表达式&quot;&gt;&lt;/a&gt;函数表达式&lt;/h3&gt;&lt;p&gt;与函数声明不同，函数表达式使用了&lt;code&gt;var/let/const&lt;/code&gt;进行声明，在确认它是否可以正确使用的时候就必须依照&lt;code&gt;var/let/const&lt;/code&gt;的规则进行判断，即变量声明。使用var进行变量声明，其实是进行了两步操作。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 变量声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实际执行顺序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 变量声明，初始值undefined，变量提升，提升顺序次于function声明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 变量赋值，该操作不会提升&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;同样的道理，当使用变量声明的方式来声明函数时，就是常常说的函数表达式。函数表达的提升方式与变量声明一致。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fn(); &lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上例子的执行顺序为：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;;   &lt;span class=&quot;comment&quot;&gt;// 变量声明提升&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();    &lt;span class=&quot;comment&quot;&gt;// 执行报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{   &lt;span class=&quot;comment&quot;&gt;// 赋值操作，此时将后边函数的引用赋值给fn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;由于声明方式的不同，导致了函数声明与函数表达式在使用上的一些差异需要我们注意，除此之外，这两种形式的函数在使用上并无不同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于上面例子，函数表达式中的赋值操作，在其他一些地方也会被经常使用，我们清楚其中的关系即可。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在构造函数中添加方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 在构造函数内部中添加方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 给原型添加方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在对象中添加方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getM: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;匿名函数&quot;&gt;&lt;a href=&quot;#匿名函数&quot; class=&quot;headerlink&quot; title=&quot;匿名函数&quot;&gt;&lt;/a&gt;匿名函数&lt;/h3&gt;&lt;p&gt;匿名函数，顾名思义，就是指的没有被显示进行赋值操作的函数。它的使用场景，多作为一个参数传入另一个函数中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;bar, num&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bar() + num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上面的例子中，fn的第一个参数传入了一个匿名函数。虽然该匿名函数没有显示的进行赋值操作，我们没有办法在外部执行上下文中引用到它，但是在fn函数内部，我们将该匿名函数赋值给了变量bar，保存在了fn变量对象的arguments对象中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 变量对象在fn上下文执行过程中的创建阶段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VO(fn) = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bar: &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        num: &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 变量对象在fn上下文执行过程中的执行阶段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 变量对象变为活动对象，并完成赋值操作与执行可执行代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VO -&amp;gt; AO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AO(fn) = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bar: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        num: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由于匿名函数传入另一个函数之后，最终会在另一个函数中执行，因此我们也常常称这个匿名函数为 &lt;span class=&quot;p blue&quot;&gt;回调函数&lt;/span&gt; 。关于匿名函数更多的内容，将会在下一篇深入探讨柯里化的文章中进行更加详细讲解。&lt;/p&gt;
&lt;span class=&quot;p blue&quot;&gt;匿名函数的这个应用场景几乎承担了函数的所有难以理解的知识点&lt;/span&gt; ，一定要对它的这些细节了解的足够清楚，如果对于变量对象的演变过程你还看不太明白，一定要回过头去看这篇文章：[前端基础进阶（三）：变量对象详解](https://fe32.top/articles/jsnb9530/)

&lt;h3 id=&quot;函数自执行与块级作用域&quot;&gt;&lt;a href=&quot;#函数自执行与块级作用域&quot; class=&quot;headerlink&quot; title=&quot;函数自执行与块级作用域&quot;&gt;&lt;/a&gt;函数自执行与块级作用域&lt;/h3&gt;&lt;p&gt;在ES5中，没有块级作用域，因此我们常常使用函数自执行的方式来模仿块级作用域，这样就提供了一个独立的执行上下文，结合闭包，就为模块化提供了基础。而函数自执行，其实是匿名函数的一种应用。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一个模块往往可以包括：私有变量、私有方法、公有变量、公有方法。&lt;/p&gt;
&lt;p&gt;根据作用域链的单向访问，外面可能很容易知道在这个独立的模块中，外部执行环境是无法访问内部的任何变量与方法的，因此我们可以很容易的创建属于这个模块的私有变量与私有方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 私有变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; age = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;Tom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 私有方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`your name is `&lt;/span&gt; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是共有方法和变量应该怎么办？大家还记得前面讲到过的 &lt;span class=&quot;p blue&quot;&gt;闭包&lt;/span&gt; 的特性吗？没错，利用闭包，可以访问到执行上下文内部的变量和方法，因此，只需要根据闭包的定义，创建一个闭包，将你认为需要公开的变量和方法开放出来即可。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 私有变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; age = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;Tom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 私有方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`your name is `&lt;/span&gt; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 共有方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getAge&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 将引用保存在外部执行环境的变量中，形成闭包，防止该执行环境被垃圾回收&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getAge = getAge;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;为了帮助大家进一步理解闭包，我们来看看jQuery中，是如何利用模块与闭包的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用函数自执行的方式创建模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 声明jQuery构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; jQuery = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 主动在构造函数中，返回一个jQuery实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; jQuery.fn.init(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 添加原型方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     jQuery.prototype = jQuery.fn = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;title&quot;&gt;constructor&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;jQuery&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;:&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) { ... },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         css: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ ... }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     jQuery.fn.init.prototype = jQuery.fn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 将jQuery改名为$，并将引用保存在window上，形成闭包，对外开放jQuery构造函数，就可以访问所有挂载在jQuery原型上的方法了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.jQuery = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.$ = jQuery;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; })(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在使用时，直接执行了构造函数，因为在jQuery的构造函数中通过一些手段，返回的是jQuery的实例，所以就不用再每次用的时候自己new一个实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#div1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在这里，只需看懂闭包与模块的部分就行，至于内部的原型链是如何绕的，为什么会这样写，在讲面向对象的时候会为大家慢慢分析。举这个例子的目的所在，就是希望大家能够重视函数，在实际开发中，它无处不在。&lt;/p&gt;
&lt;p&gt;接下来我要分享一个高级的，非常有用的模块的应用。当项目越来越大，那么需要保存的数据与状态就越来越多，因此，我们需要一个专门的模块来维护这些数据，这个时候，一个叫做状态管理器的东西就应运而生。对于状态管理器，最出名的，我想非redux莫属了。虽然对于还在学习中的大家来说，redux是一个有点高深莫测的东西，但是在我们学习之前，可以先通过简单的方式，让大家大致了解状态管理器的实现原理，为我们未来的学习奠定坚实的基础。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 自执行创建模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// states 结构预览&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// states = {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//     a: 1,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//     b: 2,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//     m: 30,  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//     o: {}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// }&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; states = {};  &lt;span class=&quot;comment&quot;&gt;// 私有变量，用来存储状态与数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 判断数据类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;type&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(elem == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; elem + &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; toString.call(elem).replace(&lt;span class=&quot;regexp&quot;&gt;/[\[\]]/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;).split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].toLowerCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@Param &lt;/span&gt;name 属性名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@Description &lt;/span&gt;通过属性名获取保存在states中的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; states[name] ? states[name] : &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getStates&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; states;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    * @param options {object} 键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    * @param target {object} 属性值为对象的属性，只在函数实现时递归中传入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    * @desc 通过传入键值对的方式修改state树，使用方式与小程序的data或者react中的setStates类似&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;options, target&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; keys = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = target ? target : states;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        keys.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; o[item] == &lt;span class=&quot;string&quot;&gt;&#39;undefined&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                o[item] = options[item];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                type(o[item]) == &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt; ? set(options[item], o[item]) : o[item] = options[item];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 对外提供接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.get = get;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.set = set;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getStates = getStates;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 具体使用如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set({ &lt;span class=&quot;attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; });     &lt;span class=&quot;comment&quot;&gt;// 保存 属性a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set({ &lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; });    &lt;span class=&quot;comment&quot;&gt;// 保存属性b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set({ &lt;span class=&quot;attr&quot;&gt;c&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; });     &lt;span class=&quot;comment&quot;&gt;// 保存属性c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 保存属性o, 它的值为一个对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    o: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 修改对象o 的m值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    o: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m: &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 给对象o中增加一个c属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    o: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(getStates())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在单页应用中，我们很可能会用到这样的思路。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;函数自执行的方式另外还有其他几种写法，诸如!function(){}()，+function(){}()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;函数参数传递方式：按值传递&quot;&gt;&lt;a href=&quot;#函数参数传递方式：按值传递&quot; class=&quot;headerlink&quot; title=&quot;函数参数传递方式：按值传递&quot;&gt;&lt;/a&gt;函数参数传递方式：按值传递&lt;/h2&gt;&lt;p&gt;还记得基本数据类型与引用数据类型在复制上的差异吗？基本数据类型复制，是值直接发生了复制，因此改变后，各自相互不影响。但是引用数据类型的复制，是保存在变量对象中的引用发生了复制，因此复制之后的这两个引用实际访问的实际是同一个堆内存中的值。当改变其中一个时，另外一个自然也被改变。如下例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);  &lt;span class=&quot;comment&quot;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = { &lt;span class=&quot;attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n = m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n.a = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(m.a) &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当值作为函数的参数传递进入函数内部时，也有同样的差异。函数的参数在进入函数后，实际是被保存在了函数的变量对象中，因此，这个时候相当于发生了一次复制。如下例。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = { &lt;span class=&quot;attr&quot;&gt;m&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;n&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a.m = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);   &lt;span class=&quot;comment&quot;&gt;// { m: 20, n: 20 }&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;正是由于这样的不同，导致了许多人在理解函数参数的传递方式时，就有许多困惑。到底是按值传递还是按引用传递？实际上结论仍然是按值传递，只不过当我们期望传递一个引用类型时，真正传递的，只是这个引用类型保存在变量对象中的引用而已。为了说明这个问题，看看下面这个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;Nicholas&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;{  &lt;span class=&quot;comment&quot;&gt;// 传入一个引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj = {};   &lt;span class=&quot;comment&quot;&gt;// 将传入的引用指向另外的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj.name = &lt;span class=&quot;string&quot;&gt;&#39;Greg&#39;&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 修改引用的name属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setName(person);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(person.name);  &lt;span class=&quot;comment&quot;&gt;// Nicholas 未被改变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上面的例子中，如果person是按引用传递，那么person就会自动被修改为指向其name属性值为Gerg的新对象。从结果中看到，person对象并未发生任何改变，因此只是在函数内部引用被修改而已。&lt;/p&gt;
&lt;h2 id=&quot;函数式编程&quot;&gt;&lt;a href=&quot;#函数式编程&quot; class=&quot;headerlink&quot; title=&quot;函数式编程&quot;&gt;&lt;/a&gt;函数式编程&lt;/h2&gt;&lt;p&gt;虽然JavaScript并不是一门纯函数式编程的语言，但是它使用了许多函数式编程的特性。&lt;/p&gt;
&lt;p&gt;我们通常通过函数封装来完成一件事情。例如，想要计算任意三个数的和，可以将这三个数作为参数，封装一个简单的函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b, c&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b + c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当要计算三个数的和时，直接调用该方法即可。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;add(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当我们想要做的事情比较简单时，可能还看不出来封装成为函数之后带来的便利。但想要做的事情稍微复杂一点呢。例如计算一个数组中的所有子项目的和。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mergeArr&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i++) { result  += arr[i] }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果不通过函数封装的方式，那么再每次想要实现这个功能时，就不得不重新使用一次for循环，这样的后果导致代码中充斥着越来越多的重复代码。而封装之后，想要再次做这件事情的时候，只需要一句话就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mergeArr([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们在初学时，往往会不由自主的使用命令式编程的风格来完成我们想要干的事情。因为命令式编程更加的简单，直白。例如我们现在有一个数组，&lt;code&gt;array = [1, 3, &#39;h&#39;, 5, &#39;m&#39;, &#39;4&#39;]&lt;/code&gt;，现在想要找出这个数组中的所有类型为number的子项。当我们使用命令式编程思维时，可能就会直接这样做。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; array = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;h&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; array.length; i ++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; array[i] === &lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.push(array[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这种方式中平铺直叙的实现了我们的目的。这样做的问题在于，当我们在另外的时刻，想要找出另外一个数组中所有的子项时，不得不把同样的逻辑再写一次。当出现次数变多时，我们的代码也变得更加糟糕且难以维护。&lt;/p&gt;
&lt;p&gt;函数式编程的思维则建议我们将这种会多次出现的功能封装起来以备调用。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getNumbers&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;array&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    array.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; item === &lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 以上是我们的封装，以下是功能实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; array = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;h&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = getNumbers(array);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;将功能封装之后，我们实现同样的功能时，只需要写一行代码。而如果未来需求变动，或者稍作修改，我们只需要对getNumbers方法进行调整就可以了。而且在使用时，只需要关心这个方法能做什么，而不用关心具体是如何实现的。这也是函数式编程思维与命令式不同的地方之一。&lt;/p&gt;
&lt;p&gt;函数式编程思维还具有以下几个特征：&lt;/p&gt;
&lt;p class=&quot;p blue&quot;&gt;1. 函数是第一等公民&lt;/p&gt;

&lt;p&gt;所谓”第一等公民”（first class），指的是函数与其他数据类型一样，处于平等地位，可以赋值给其他变量，也可以作为参数，传入另一个函数，或者作为别的函数的返回值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}  &lt;span class=&quot;comment&quot;&gt;// 赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;() {}, num&lt;/span&gt;) &lt;/span&gt;{}   &lt;span class=&quot;comment&quot;&gt;// 函数作为参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 函数作为返回值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;var&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ... ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，这都是JavaScript的基本概念。但是我想很多人，甚至包括正在阅读的你自己都可能会无视这些概念。可以用一个简单的例子来验证一下。&lt;/p&gt;
&lt;p&gt;先自定义这样一个函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delay&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;5000ms之后执行该方法.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;现在要做的是，如果要求你结合setTimeout方法，让delay方法延迟5000ms执行，应该怎么做？&lt;/p&gt;
&lt;p&gt;其实很简单，对不对，直接这样就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; timer = &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delay();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么现在问题来了，如果你对函数是一等公民有一个深刻的认知，我想你会发现上面这种写法其实是有一些问题的。所以思考一下，问题出在哪里？&lt;/p&gt;
&lt;p&gt;函数既然能够作为一个参数传入另外一个函数，那么我们是不是可以直接将delay作为setTimeout的第一个参数，而不用额外的多加一层匿名函数呢？&lt;/p&gt;
&lt;p&gt;因此，其实最正确的解法应该这样写。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; timer = &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(delay, &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p class=&quot;p blue&quot;&gt;2. 只用&quot;表达式&quot;，不用&quot;语句&quot;&lt;/p&gt;

&lt;p&gt;“表达式”（expression）是一个单纯的运算过程，总是有返回值；”语句”（statement）是执行某种操作，没有返回值。函数式编程要求，只使用表达式，不使用语句。也就是说，每一步都是单纯的运算，而且都有返回值。&lt;/p&gt;
&lt;p&gt;假如在项目中，多处需要改变某个元素的背景色。我们可以这样封装一下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ele = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.test&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setBackgroundColor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;color&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ele.style.backgroundColor = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 多处使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setBackgroundColor(&lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setBackgroundColor(&lt;span class=&quot;string&quot;&gt;&#39;#ccc&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们可以很明显的感受到，setBackgroundColor封装的仅仅只是一条语句。这并不是理想的效果。函数式编程期望一个函数有输入，也有输出。因此良好的习惯应该如下做：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setBackgroundColor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ele, color&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ele.style.backgroundColor = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 多处使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ele = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.test&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setBackgroundColor(ele, &lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setBackgroundColor(ele, &lt;span class=&quot;string&quot;&gt;&#39;#ccc&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;了解这一点，我们自己在封装函数的时候也要养成良好的习惯。&lt;/p&gt;
&lt;p class=&quot;p blue&quot;&gt;3. 纯函数&lt;/p&gt;

&lt;p&gt;相同的输入总会得到相同的输出，并且不会产生副作用的函数，就是纯函数。&lt;/p&gt;
&lt;p&gt;所谓”副作用”（side effect），指的是函数内部与外部互动（最典型的情况，就是修改全局变量的值），产生运算以外的其他结果。&lt;/p&gt;
&lt;p&gt;函数式编程强调没有”副作用”，意味着函数要保持独立，所有功能就是返回一个新的值，没有其他行为，尤其是不得修改外部变量的值。&lt;/p&gt;
&lt;p&gt;即：**&lt;em&gt;要是同样的参数传入，返回的结果一定是相等的。**&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;例如我们期望封装一个函数，能够得到传入数组的最后一项。那么可以通过下面两种方式来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getLast&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; arr[arr.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_getLast&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; arr.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; source = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; last = getLast(source); &lt;span class=&quot;comment&quot;&gt;// 返回结果4 原数组不变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _last = _getLast(source); &lt;span class=&quot;comment&quot;&gt;// 返回结果4 原数据最后一项被删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;getLast与_getLast虽然同样能够获得数组的最后一项值，但是_getLast改变了原数组。而当原始数组被改变，那么当我们再次调用该方法时，得到的结果就会变得不一样。这样不可预测的封装方式，在我们看来是非常糟糕的。它会把我们的数据搞得非常混乱。在JavaScript原生支持的数据方法中，也有许多不纯的方法，我们在使用时需要非常警惕，我们要清晰的知道原始数据的改变是否会留下隐患。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; source = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.slice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 纯函数 返回[2, 3] source不变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.splice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 不纯的 返回[2, 3, 4] source被改变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.pop(); &lt;span class=&quot;comment&quot;&gt;// 不纯的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.push(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 不纯的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.shift(); &lt;span class=&quot;comment&quot;&gt;// 不纯的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.unshift(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 不纯的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.reverse(); &lt;span class=&quot;comment&quot;&gt;// 不纯的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 我也不能短时间知道现在source被改变成了什么样子，干脆重新约定一下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.concat([&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// 纯函数 返回[1, 2, 3, 4, 5, 6, 7] source不变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.join(&lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 纯函数 返回1-2-3-4-5 source不变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（八）：在Chrome开发者工具中观察函数调用栈、作用域链与闭包</title>
    <link href="https://fe32.top/articles/jsnb9535/"/>
    <id>https://fe32.top/articles/jsnb9535/</id>
    <published>2022-06-19T10:57:16.000Z</published>
    <updated>2023-06-27T14:39:00.768Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前端开发中，有一个重要的技能，叫做 &lt;span class=&quot;p blue&quot;&gt;断点调试&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;利用chrome开发者工具中的断点调试，能够一步步观察JavaScript的执行过程，直观感知函数调用栈、作用域链、变量对象、闭包、this等关键信息的变化。因此，断点调试对于快速定位代码错误，以及快速了解代码的执行过程有着非常重要的作用，这也是前端开发必不可少的一个高级技能。&lt;/p&gt;
&lt;p&gt;这篇文章的另一个目的在于借助对于断点调试的学习，进一步加深对闭包的理解。&lt;/p&gt;
&lt;h2 id=&quot;基础概念回顾&quot;&gt;&lt;a href=&quot;#基础概念回顾&quot; class=&quot;headerlink&quot; title=&quot;基础概念回顾&quot;&gt;&lt;/a&gt;基础概念回顾&lt;/h2&gt;&lt;p&gt;函数在被调用执行时，会创建一个当前函数的执行上下文。在该执行上下文的创建阶段，变量对象、作用域链、闭包、this指向会分别被确定。一个JavaScript程序中一般来说会有多个函数，JavaScript引擎使用函数调用栈来管理这些函数的调用顺序。函数调用栈的调用顺序与栈数据结构一致。&lt;/p&gt;
&lt;h2 id=&quot;认识断点调试工具&quot;&gt;&lt;a href=&quot;#认识断点调试工具&quot; class=&quot;headerlink&quot; title=&quot;认识断点调试工具&quot;&gt;&lt;/a&gt;认识断点调试工具&lt;/h2&gt;&lt;p&gt;在尽量新版本的chrome浏览器中（不确定你用的版本与我的一致），调出chrome浏览器的开发者工具。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器右上角竖着的三点 -&amp;gt; 更多工具 -&amp;gt; 开发者工具 -&amp;gt; Sources&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;界面如图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af2a8c47bb1.webp&quot; alt=&quot;断点调试界面&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;断点调试界面&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;在demo中，我们把代码放在app.js，并在index.html中引入。只需要关注截图中红色箭头的地方。在最右侧上方，有一排图标。可以通过使用他们来控制函数的执行顺序。从左到右他们依次是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;resume/pause script execution&lt;/strong&gt;&lt;br&gt;恢复/暂停脚本执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;step over next function call&lt;/strong&gt;&lt;br&gt;跨过，实际表现是不遇到函数时，执行下一步。遇到函数时，不进入函数直接执行下一步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;step into next function call&lt;/strong&gt;&lt;br&gt;跨入，实际表现是不遇到函数时，执行下一步。遇到到函数时，进入函数执行上下文。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;step out of current function&lt;/strong&gt;&lt;br&gt;跳出当前函数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;deactivate breakpoints&lt;/strong&gt;&lt;br&gt;停用断点&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;don‘t pause on exceptions&lt;/strong&gt;&lt;br&gt;不暂停异常捕获&lt;/p&gt;
&lt;p&gt;其中跨过，跨入，跳出是使用最多的三个操作。&lt;/p&gt;
&lt;p&gt;上图右侧第二个红色箭头指向的是函数调用栈（call Stack），这里会显示代码执行过程中，调用栈的变化。&lt;/p&gt;
&lt;p&gt;右侧第三个红色箭头指向的是作用域链（Scope），这里会显示当前函数的作用域链。其中Local表示当前的局部变量对象，Closure表示当前作用域链中的闭包。借助此处的作用域链展示，可以很直观的判断出一个例子中，到底谁是闭包，对于闭包的深入了解具有非常重要的帮助作用。&lt;/p&gt;
&lt;h2 id=&quot;断点设置&quot;&gt;&lt;a href=&quot;#断点设置&quot; class=&quot;headerlink&quot; title=&quot;断点设置&quot;&gt;&lt;/a&gt;断点设置&lt;/h2&gt;&lt;p&gt;在显示代码行数的地方点击，即可设置一个断点。断点设置有以下几个特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在单独的变量声明(如果没有赋值)，函数声明的那一行，无法设置断点。&lt;/li&gt;
&lt;li&gt;设置断点后刷新页面，JavaScript代码会执行到断点位置处暂停执行，然后就可以使用上边介绍过的几个操作开始调试。&lt;/li&gt;
&lt;li&gt;当你设置多个断点时，chrome工具会自动判断从最早执行的那个断点开始执行，因此一般设置一个断点就行了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h2&gt;&lt;p&gt;接下来，借助一些实例，来使用断点调试工具，看一看demo函数，在执行过程中的具体表现。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baz&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在向下阅读之前，可以停下来思考一下，这个例子中，谁是闭包？&lt;/p&gt;
&lt;p&gt;这是来自《你不知道的js》中的一个例子。由于在使用断点调试过程中，发现chrome浏览器理解的闭包与该例子中所理解的闭包不太一致，因此专门挑出来，供大家参考。个人更加倾向于chrome中的理解。&lt;/p&gt;
&lt;p&gt;第一步：设置断点，然后刷新页面。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af31c68c935.webp&quot; alt=&quot;设置断点&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;设置断点&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;第二步：点击上图红色箭头指向的按钮（step into），该按钮的作用会根据代码执行顺序，一步一步向下执行。在点击的过程中，要注意观察下方call stack 与 scope的变化，以及函数执行位置的变化。&lt;/p&gt;
&lt;p&gt;一步一步执行，当函数执行到上例子中&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af320cddb67.webp&quot; alt=&quot;baz函数被调用执行，foo形成了闭包&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;baz函数被调用执行，foo形成了闭包&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;可以看到，在chrome工具的理解中，由于在foo内部声明的baz函数在调用时访问了它的变量a，因此foo成为了闭包。来看看在《你不知道的js》这本书中的例子中的理解。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af32506e3f5.webp&quot; alt=&quot;你不知道的js中的例子&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;你不知道的js中的例子&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;书中的注释可以明显的看出，作者认为fn为闭包。即baz，这和chrome工具中明显是不一样的。&lt;/p&gt;
&lt;p&gt;而在备受大家推崇的《JavaScript高级编程》一书中，是这样定义闭包。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af32917f2ad.webp&quot; alt=&quot;JavaScript高级编程中闭包的定义&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;JavaScript高级编程中闭包的定义&lt;/span&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af32c629a29.webp&quot; alt=&quot;书中作者将自己理解的闭包与包含函数所区分&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;书中作者将自己理解的闭包与包含函数所区分&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;这里chrome中理解的闭包，与我所阅读的这几本书中的理解的闭包不一样。详情请参考 &lt;a href=&quot;https://fe32.top/articles/jsnb9532/&quot;&gt;前端基础进阶（五）：闭包&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;闭包是一个特殊对象，它由执行上下文(代号A)与在该执行上下文中创建的函数(代号B)共同组成。当B执行时，如果访问了A中变量对象中的值，那么闭包就会产生。&lt;/p&gt;
&lt;p&gt;在大多数理解中，包括许多著名的书籍，文章里都以函数B的名字代指这里生成的闭包。而在chrome中，则以执行上下文A的函数名代指闭包。&lt;/p&gt;
&lt;p&gt;修改一下demo01中的例子，来看看一个非常有意思的变化。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo02&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baz&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn(m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(); &lt;span class=&quot;comment&quot;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个例子在demo01的基础上，在baz函数中传入一个参数，并打印出来。在调用时，将全局的变量m传入。输出结果变为20。在使用断点调试看看作用域链。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af337f70e73.webp&quot; alt=&quot;闭包没了，作用域链中没有包含foo了&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;闭包没了，作用域链中没有包含foo了&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;是不是结果有点意外，闭包没了，作用域链中没有包含foo了。所以通过这个对比，可以确定闭包的形成需要两个条件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在函数内部创建新的函数；&lt;/li&gt;
&lt;li&gt;新的函数在执行时，访问了函数的变量对象；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;继续来看看一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo03&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = bar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在这个例子中，fn只访问了foo中的a变量，因此它的闭包只有foo。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af341f1903d.webp&quot; alt=&quot;闭包只有foo&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;闭包只有foo&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;修改一下demo03，在fn中也访问bar中b变量试试看。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo04&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = bar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af3498414a5.webp&quot; alt=&quot;这个时候闭包变成了两个&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;这个时候闭包变成了两个&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;这个时候，闭包变成了两个。分别是bar，foo。闭包在模块中的应用非常重要。因此，我们来一个模块的例子，也用断点工具来观察一下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo05&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; test = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    add: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;x&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sum: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b + &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mark: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;k, j&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; k + j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.test = test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test.add(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test.sum();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test.mark();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _mark = test.mark;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_mark();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af35f7ecfb8.webp&quot; alt=&quot;add执行时，闭包为外层的自执行函数，this指向test&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;add执行时，闭包为外层的自执行函数，this指向test&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af366338770.webp&quot; alt=&quot;sum执行时，同上&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;sum执行时，同上&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af36786ab36.webp&quot; alt=&quot;mark执行时，闭包为外层的自执行函数，this指向test&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;mark执行时，闭包为外层的自执行函数，this指向test&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af3704cc2ec.webp&quot; alt=&quot;_mark执行时，闭包为外层的自执行函数，this指向window&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;_mark执行时，闭包为外层的自执行函数，this指向window&lt;/span&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：这里的this指向显示为Object或者Window，大写开头，它们表示的是实例的构造函数，实际上this是指向的具体实例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;test.mark能形成闭包，跟下面的补充例子（demo07）情况是一样的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;结合断点调试的方式，来理解那些困扰很久的this指向。随时观察this的指向，在实际开发调试中非常有用。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo06&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.call(obj); &lt;span class=&quot;comment&quot;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/19/62af37e84292b.webp&quot; alt=&quot;this指向obj&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;this指向obj&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;最后继续补充一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn2();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这个例子，和其他例子不太一样。虽然fn2并没有访问到foo的变量，但是foo执行时仍然变成了闭包。而将fn1的声明去掉时，闭包便不会出现了。&lt;/p&gt;
&lt;p&gt;那么结合这个特殊的例子，我们可以这样这样定义闭包。&lt;/p&gt;
&lt;span class=&quot;p blue&quot;&gt;闭包是指这样的作用域(foo)，它包含有一个函数(fn1)，这个函数(fn1)可以调用被这个作用域所封闭的变量(a)、函数、或者闭包等内容。通常我们通过闭包所对应的函数来获得对闭包的访问&lt;/span&gt; 。

&lt;p&gt;最后，根据以上的摸索情况，再次总结一下闭包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;闭包是在函数被调用执行的时候才被确认创建的。&lt;/li&gt;
&lt;li&gt;闭包的形成，与作用域链的访问顺序有直接关系。&lt;/li&gt;
&lt;li&gt;只有内部函数访问了上层作用域链中的变量对象时，才会形成闭包，因此，我们可以利用闭包来访问函数内部的变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（七）：全方位解读This</title>
    <link href="https://fe32.top/articles/jsnb9534/"/>
    <id>https://fe32.top/articles/jsnb9534/</id>
    <published>2022-06-16T14:40:19.000Z</published>
    <updated>2023-06-27T14:39:00.768Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在这之前，先回顾一下执行上下文的生命周期。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/16/62ab45dd10499.webp&quot; alt=&quot;执行上下文生命周期&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;执行上下文生命周期&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;执行上下文的创建阶段，会分别生成变量对象，建立作用域链，确定this指向。本文的关键，就是确定this指向。&lt;span class=&quot;p blue&quot;&gt;this的指向，是在函数被调用的时候确定的。也就是执行上下文被创建时确定的&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;一个函数中的this指向，可以非常灵活。比如下面的例子中，同一个函数由于调用方式的不同，this指向了不一样的对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn(); &lt;span class=&quot;comment&quot;&gt;// 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.call(obj); &lt;span class=&quot;comment&quot;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;除此之外，&lt;span class=&quot;p blue&quot;&gt;在函数执行过程中，this一旦被确定，就不可更改了&lt;/span&gt; 。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt; = obj; &lt;span class=&quot;comment&quot;&gt;// 这句话试图修改this，运行后会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;全局对象中的this&quot;&gt;&lt;a href=&quot;#全局对象中的this&quot; class=&quot;headerlink&quot; title=&quot;全局对象中的this&quot;&gt;&lt;/a&gt;全局对象中的this&lt;/h2&gt;&lt;p&gt;关于全局对象的this，之前在总结变量对象的时候提到过，它是一个比较特殊的存在。全局环境中的this，指向它本身。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过this绑定到全局对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a2 = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过声明绑定到变量对象，但在全局环境中，变量对象就是它自身&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a1 = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 仅仅只有赋值操作，标识符会隐式绑定到全局对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a3 = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出结果会全部符合预期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a3);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;函数中的this&quot;&gt;&lt;a href=&quot;#函数中的this&quot; class=&quot;headerlink&quot; title=&quot;函数中的this&quot;&gt;&lt;/a&gt;函数中的this&lt;/h2&gt;&lt;p&gt;在总结函数中this指向之前，有必要通过一些奇怪的例子，来感受一下函数中this的内涵。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo02&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo03&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c: &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a + &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(obj.c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(obj.fn());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在一个函数上下文中，this由调用者提供，由调用函数的方式来决定。&lt;span class=&quot;p blue&quot;&gt;如果调用者函数，被某一个对象所拥有，那么该函数在调用时，内部的this指向该对象。如果函数独立调用，那么该函数内部的this，则指向undefined&lt;/span&gt; 。但是在非严格模式中，当this指向undefined时，它会被自动指向全局对象。&lt;/p&gt;
&lt;p&gt;想要准确确定this指向，找到函数的调用者以及区分他是否是独立调用十分关键。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 为了能够准确判断，在函数内部使用严格模式，因为非严格模式会自动指向全局&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;  &#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();  &lt;span class=&quot;comment&quot;&gt;// fn是调用者，独立调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.fn();  &lt;span class=&quot;comment&quot;&gt;// fn是调用者，被window所拥有&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上面的简单例子中，&lt;code&gt;fn()&lt;/code&gt;作为独立调用者，按照定义的理解，它内部的this指向就为undefined。而&lt;code&gt;window.fn()&lt;/code&gt;则因为fn被window所拥有，内部的this就指向了window对象。&lt;/p&gt;
&lt;p&gt;掌握了这个规则，现在回过头去看看上面的三个例子，通过添加/去除严格模式，你就会发现，原来this已经变得有迹可循了。&lt;/p&gt;
&lt;p&gt;需要特别注意的是demo03。在demo03中，对象obj中的c属性使用&lt;code&gt;this.a + 20&lt;/code&gt;来计算。这里需要明确的一点是，单独的&lt;code&gt;{}&lt;/code&gt;不会形成新的作用域，因此这里的&lt;code&gt;this.a&lt;/code&gt;，由于并没有作用域的限制，它仍然处于全局作用域之中。所以这里的this其实是指向的window对象。&lt;/p&gt;
&lt;p&gt;修改一下demo03的代码，大家可以思考一下会发生什么变化。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c: &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a + &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fn: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; obj.c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo());    &lt;span class=&quot;comment&quot;&gt;// ？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.foo());  &lt;span class=&quot;comment&quot;&gt;// ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;实际开发中，并不推荐这样使用this；上面多次提到的严格模式，需要大家认真对待，因为在实际开发中，现在基本已经全部采用严格模式了，而最新的ES6，也是默认支持严格模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再来看一些容易理解错误的例子，加深一下对调用者与是否独立运行的理解。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getA: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo.getA()); &lt;span class=&quot;comment&quot;&gt;// 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; test = foo.getA;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(test());  &lt;span class=&quot;comment&quot;&gt;// 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;foo.getA()&lt;/code&gt;中，getA是调用者，他不是独立调用，被对象foo所拥有，因此它的this指向了foo。而&lt;code&gt;test()&lt;/code&gt;作为调用者，尽管他与foo.getA的引用相同，但是它是独立调用的，因此this指向undefined，在非严格模式，自动转向全局window。&lt;/p&gt;
&lt;p&gt;稍微修改一下代码，大家自行理解。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getA&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getA: getA&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo.getA());  &lt;span class=&quot;comment&quot;&gt;// 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再来一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;active&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn(); &lt;span class=&quot;comment&quot;&gt;// 真实调用者，为独立调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getA: foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;active(obj.getA);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;call，apply指定this&quot;&gt;&lt;a href=&quot;#call，apply指定this&quot; class=&quot;headerlink&quot; title=&quot;call，apply指定this&quot;&gt;&lt;/a&gt;call，apply指定this&lt;/h2&gt;&lt;p&gt;JavaScript内部提供了一种机制，让我们可以自行手动设置this的指向。它们就是 &lt;span class=&quot;p blue&quot;&gt;call&lt;/span&gt; 与 &lt;span class=&quot;p blue&quot;&gt;apply&lt;/span&gt; 。所有的函数都具有这两个方法。它们除了参数略有不同之外，其功能完全一样。它们的第一个参数都为this将要指向的对象。&lt;/p&gt;
&lt;p&gt;如下例子所示。fn 并非属于 对象obj 的方法，但是通过call，将fn内部的this绑定为obj，因此就可以使用this.a访问obj的a属性了。这就是call/apply的用法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.call(obj);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;call与applay后面的参数，都是向将要执行的函数传递参数。其中call以一个一个的形式传递，apply以数组的形式传递。这是他们唯一的不同。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num1, num2&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a + num1 + num2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.call(obj, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 130&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.apply(obj, [&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// 50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因为call/apply的存在，JavaScript变得更加灵活。也因此他们的使用场景就多种多样。简单总结几点，也欢迎大家补充。&lt;/p&gt;
&lt;h3 id=&quot;将类数组对象转换为数组&quot;&gt;&lt;a href=&quot;#将类数组对象转换为数组&quot; class=&quot;headerlink&quot; title=&quot;将类数组对象转换为数组&quot;&gt;&lt;/a&gt;将类数组对象转换为数组&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exam&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b, c, d, e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 先看看函数的自带属性 arguments 什么是样子的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 使用call/apply将arguments转换为数组, 返回结果为数组，arguments自身不会改变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arg = [].slice.call(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exam(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// result:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// { &#39;0&#39;: 2, &#39;1&#39;: 8, &#39;2&#39;: 9, &#39;3&#39;: 10, &#39;4&#39;: 3 }&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [ 2, 8, 9, 10, 3 ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 也常常使用该方法将DOM中的nodelist转换为数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// [].slice.call( document.getElementsByTagName(&#39;li&#39;) );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;根据需求灵活修改this指向&quot;&gt;&lt;a href=&quot;#根据需求灵活修改this指向&quot; class=&quot;headerlink&quot; title=&quot;根据需求灵活修改this指向&quot;&gt;&lt;/a&gt;根据需求灵活修改this指向&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&#39;joker&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  showName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&#39;rose&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo.showName.call(bar);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;实现继承&quot;&gt;&lt;a href=&quot;#实现继承&quot; class=&quot;headerlink&quot; title=&quot;实现继承&quot;&gt;&lt;/a&gt;实现继承&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义父级的构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Person = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.gender = [&lt;span class=&quot;string&quot;&gt;&#39;man&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;woman&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义子类的构造函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Student = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;name, age, high&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// use call&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Person.call(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;, name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.high = high;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.message = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;name:&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39;, age:&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age + &lt;span class=&quot;string&quot;&gt;&#39;, high:&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.high + &lt;span class=&quot;string&quot;&gt;&#39;, gender:&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.gender[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&#39;;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student(&lt;span class=&quot;string&quot;&gt;&#39;xiaom&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;150cm&#39;&lt;/span&gt;).message();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ----------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// name:xiaom, age:12, high:150cm, gender:man;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;简单给有面向对象基础的朋友解释一下。在Student的构造函数中，借助call方法，将父级的构造函数执行了一次，相当于将Person中的代码，在Sudent中复制了一份，其中的this指向为从Student中new出来的实例对象。call方法保证了this的指向正确，因此就相当于实现了继承。Student的构造函数等同于下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Student = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;name, age, high&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.gender = [&lt;span class=&quot;string&quot;&gt;&#39;man&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;woman&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Person.call(this, name, age); 这一句话，相当于上面三句话，因此实现了继承&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.high = high;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;在向其他执行上下文的传递中，确保this的指向保持不变&quot;&gt;&lt;a href=&quot;#在向其他执行上下文的传递中，确保this的指向保持不变&quot; class=&quot;headerlink&quot; title=&quot;在向其他执行上下文的传递中，确保this的指向保持不变&quot;&gt;&lt;/a&gt;在向其他执行上下文的传递中，确保this的指向保持不变&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getA: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.getA();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如上例中，我们期待的是getA被obj调用时，this指向obj，但是由于匿名函数的存在导致了this指向的丢失，在这个匿名函数中this指向了全局，因此需要想些办法找回正确的this指向。&lt;/p&gt;
&lt;p&gt;常规的解决办法很简单，就是使用一个变量，将this的引用保存起来。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getA: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(self.a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;另外就是借助闭包与apply方法，封装一个bind方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn, obj&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fn.apply(obj, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getA: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(bind(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;), &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.getA();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然，也可以使用ES5中已经自带的bind方法。它与我上面封装的bind方法是一样的效果。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getA: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }.bind(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;), &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;构造函数与原型方法上的this&quot;&gt;&lt;a href=&quot;#构造函数与原型方法上的this&quot; class=&quot;headerlink&quot; title=&quot;构造函数与原型方法上的this&quot;&gt;&lt;/a&gt;构造函数与原型方法上的this&lt;/h2&gt;&lt;p&gt;在封装对象的时候，大家几乎都会用到this，只有少数人搞明白了在这个过程中的this指向，就算理解了原型，也不一定理解到了this。所以这一部分，我认为将会为这篇文章最重要最核心的部分。&lt;/p&gt;
&lt;p&gt;结合下面的例子，抛出几个问题大家思考一下。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 这里的this指向了谁?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.age = age;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.getName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 这里的this又指向了谁？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 上面的2个this，是同一个吗，他们是否指向了原型对象？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;Nick&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p1.getName();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们已经知道this是在函数调用过程中确定，因此，搞明白new的过程中到底发生了什么就变得十分重要。&lt;/p&gt;
&lt;p&gt;通过new操作符调用构造函数，会经历以下4个阶段。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个新的对象；&lt;/li&gt;
&lt;li&gt;将构造函数的this指向这个新对象；&lt;/li&gt;
&lt;li&gt;指向构造函数的代码，为这个对象添加属性，方法等；&lt;/li&gt;
&lt;li&gt;返回新对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当new操作符调用构造函数时，this其实指向的是这个新创建的对象，最后又将新的对象返回出来，被实例对象p1接收。这个时候，构造函数的this，指向了新的实例对象p1。&lt;/p&gt;
&lt;p&gt;而原型方法上的this就好理解多了，根据上边对函数中this的定义，p1.getName()中的getName为调用者，它被p1所拥有，因此getName中的this，也是指向了p1。&lt;/p&gt;
&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（六）：setTimeout与循环闭包面试题详解</title>
    <link href="https://fe32.top/articles/jsnb9533/"/>
    <id>https://fe32.top/articles/jsnb9533/</id>
    <published>2022-06-14T15:43:39.000Z</published>
    <updated>2023-06-27T14:39:00.771Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在上文 &lt;a href=&quot;https://fe32.top/articles/jsnb9532/&quot;&gt;前端基础进阶（五）：闭包&lt;/a&gt; 中的结尾留下了一个关于setTimeout与循环闭包的思考题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;利用闭包，修改下面的代码，让循环输出的结果依次为1， 2， 3， 4， 5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }, i * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;setTimeout 方法会设置一个计时器，一旦计时器到期，该计时器就会执行一个函数或指定的一段代码。&lt;br&gt;它的返回timeoutID的是一个正整数值，用于标识调用创建的计时器setTimeout()。&lt;br&gt;该函数详细介绍请移步： &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/setTimeout&quot;&gt;setTimeout - MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(code)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(code, delay)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(functionRef)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(functionRef, delay)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(functionRef, delay, param1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(functionRef, delay, param1, param2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(functionRef, delay, param1, param2, &lt;span class=&quot;comment&quot;&gt;/* ... ,*/&lt;/span&gt; paramN)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;参数&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;functionRef&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Afunction在计时器到期后执行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;code&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;允许您包含字符串而不是函数的替代语法，该语法在计时器到期时编译并执行。由于与使用安全风险，不建议使用eval()语法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;delay 可选&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;在执行指定的函数或代码之前计时器应等待的时间（以毫秒为单位）。如果省略此参数，则使用值 0，表示“立即”执行，或者更准确地说，执行下一个事件循环。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;param1, …,paramN 可选&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;传递给指定函数的附加参数 function。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;执行结果如图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/15/62aa0009bb7d4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上图中的数字7，就是这个唯一的timeoutID。在使用时，常常会使用一个变量将这个唯一的timeoutID保存起来，用以传入clearTimeout，清除定时器。&lt;/p&gt;
&lt;p&gt;接下来，我们还需要考虑另外一个重要的问题，那就是setTimeout中定义的操作，在什么时候执行？为了引起大家的重视，我们来看看下面的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; timer = &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;setTimeout actions.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;other actions.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;思考一下，当我将setTimeout的延迟时间设置为0时，上面的执行顺序会是什么？&lt;/p&gt;
&lt;p&gt;在浏览器中的console中运行试试看，很容易就能够知道答案。&lt;/p&gt;
&lt;p&gt;在对于 &lt;a href=&quot;https://fe32.top/articles/jsnb9529/&quot;&gt;执行上下文&lt;/a&gt; 的介绍中，与大家分享了 &lt;span class=&quot;p blue&quot;&gt;函数调用栈&lt;/span&gt; 这种特殊数据结构的调用特性。在这里，将会介绍另外一个特殊的队列结构，页面中所有由setTimeout定义的操作，都将放在同一个队列中依次执行。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/16/62aa0393b10bf.webp&quot; alt=&quot;队列数据结构的特点：先进先出&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;队列数据结构的特点：先进先出&lt;/span&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;而这个队列执行的时间，需要等待到函数调用栈清空之后才开始执行。即所有可执行代码执行完毕之后，才会开始执行由setTimeout定义的操作。而这些操作进入队列的顺序，则由设定的延迟时间来决定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此在上面这个例子中，即使我们将延迟时间设置为0，它定义的操作仍然需要等待所有代码执行完毕之后才开始执行。这里的延迟时间，并非相对于setTimeout执行这一刻，而是相对于其他代码执行完毕这一刻。&lt;/p&gt;
&lt;p&gt;为了帮助大家理解，再来一个结合变量提升的更加复杂的例子。如果你能够正确看出执行顺序，那么你对于函数的执行就有了比较正确的认识了，如果还不能，就回过头去看看其他几篇文章。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fn&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;setTImeout 10ms.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn.toString = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;setTimeout 20ms.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fn();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;执行结果如图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/16/62aa041ec1de3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;到这一步，关于setTimeout就暂时先介绍到这里，我们回过头来看看循环闭包的思考题。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }, i * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果直接这样写，根据setTimeout定义的操作在函数调用栈清空之后才会执行的特点，for循环里定义了5个setTimeout操作。而当这些操作开始执行时，for循环的i值，已经先一步变成了6。因此输出结果总为6。想要让输出结果依次执行，就必须借助闭包的特性，每次循环时，将i值保存在一个闭包中，当setTimeout中定义的操作执行时，则访问对应闭包保存的i值即可。&lt;/p&gt;
&lt;p&gt;如果知道在函数中闭包判定的准则，即执行时是否在内部定义的函数中访问了上层作用域的变量。我们则需要包裹一层自执行函数为闭包的形成提供条件。&lt;/p&gt;
&lt;p&gt;因此，只需要2个操作就可以完成题目需求，一是使用自执行函数提供闭包条件，二是传入i值并保存在闭包中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;i&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, i * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/16/62aa041ec1de3.webp&quot; alt=&quot;利用断点调试，在chrome中查看执行顺序与每一个闭包中不同的i值&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;利用断点调试，在chrome中查看执行顺序与每一个闭包中不同的i值&lt;/span&gt;&lt;/div&gt;


&lt;p&gt;当然，也可以在setTimeout的第一个参数处利用闭包。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;((&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;i&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })(i), i * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;闭包之外的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// setTimeout第三个参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;i&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }, i*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;,i );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// bind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;i&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }.bind(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,i), i*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// let&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }, i*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（五）：闭包</title>
    <link href="https://fe32.top/articles/jsnb9532/"/>
    <id>https://fe32.top/articles/jsnb9532/</id>
    <published>2022-06-13T13:54:22.000Z</published>
    <updated>2023-06-27T14:39:00.772Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;闭包&quot;&gt;&lt;a href=&quot;#闭包&quot; class=&quot;headerlink&quot; title=&quot;闭包&quot;&gt;&lt;/a&gt;闭包&lt;/h2&gt;&lt;p class=&quot;p blue&quot;&gt;闭包是一种特殊的对象。它由两部分组成。执行上下文(代号A)，以及在该执行上下文中创建的函数（代号B）。&lt;/p&gt;

&lt;p class=&quot;p blue&quot;&gt;当B执行时，如果访问了A中变量对象中的值，那么闭包就会产生。&lt;/p&gt; 

&lt;p class=&quot;p blue&quot;&gt;在大多数理解中，包括许多著名的书籍，文章里都以函数B的名字代指这里生成的闭包。而在chrome中，则以执行上下文A的函数名代指闭包 。&lt;/p&gt; 

&lt;blockquote&gt;
&lt;p&gt;一个闭包对象，由A、B共同组成，在以后的篇幅中，我将以chrome的标准来称呼。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的例子，首先有执行上下文foo，在foo中定义了函数bar，而通过对外返回bar的方式让bar得以执行。当bar执行时，访问了foo内部的变量a，b。因此这个时候闭包产生。&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&quot;https://fe32.top/articles/jsnb9528/&quot;&gt;前端基础进阶（一）：内存空间详细图解&lt;/a&gt; 中，我总结了JavaScript的垃圾回收机制。JavaScript拥有自动的垃圾回收机制，关于垃圾回收机制，有一个重要的行为，那就是，当一个值，在内存中失去引用时，垃圾回收机制会根据特殊的算法找到它，并将其回收，释放内存。&lt;/p&gt;
&lt;p&gt;而我们知道，函数的执行上下文，在执行完毕之后，生命周期结束，那么该函数的执行上下文就会失去引用。其占用的内存空间很快就会被垃圾回收器释放。可是闭包的存在，会阻止这一过程。&lt;/p&gt;
&lt;p&gt;先来一个简单的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;innnerFoo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn = innnerFoo; &lt;span class=&quot;comment&quot;&gt;// 将 innnerFoo的引用，赋值给全局变量中的fn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn(); &lt;span class=&quot;comment&quot;&gt;// 此处的保留的innerFoo的引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上面的例子中，&lt;code&gt;foo()&lt;/code&gt;执行完毕之后，按照常理，其执行环境生命周期会结束，所占内存被垃圾收集器释放。但是通过&lt;code&gt;fn = innerFoo&lt;/code&gt;，函数innerFoo的引用被保留了下来，复制给了全局变量fn。这个行为，导致了foo的变量对象，也被保留了下来。于是，函数fn在函数bar内部执行时，依然可以访问这个被保留下来的变量对象。所以此刻仍然能够访问到变量a的值。&lt;/p&gt;
&lt;p&gt;这样，我们就可以称foo为闭包。下图展示了闭包foo的作用域链：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/14/62a77ccd9390b.webp&quot; alt=&quot;闭包foo的作用域链&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;闭包foo的作用域链&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;我们可以在chrome浏览器的开发者工具中查看这段代码运行时产生的函数调用栈与作用域链的生成情况。如下图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/14/62a77d6f9cf32.webp&quot; alt=&quot;从图中可以看出，chrome浏览器认为闭包是foo，而不是通常我们认为的innerFoo&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;从图中可以看出，chrome浏览器认为闭包是foo，而不是通常我们认为的innerFoo&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;在上面的图中，红色箭头所指的正是闭包。其中Call Stack为当前的函数调用栈，Scope为当前正在被执行的函数的作用域链，Local为当前的局部变量。&lt;/p&gt;
&lt;p&gt;所以，通过闭包，我们可以在其他的执行上下文中，访问到函数的内部变量。比如在上面的例子中，我们在函数bar的执行环境中访问到了函数foo的a变量。个人认为，从应用层面，这是闭包最重要的特性。利用这个特性，我们可以实现很多有意思的东西。&lt;/p&gt;
&lt;p&gt;不过需要注意的是，虽然例子中的闭包被保存在了全局变量中，但是闭包的作用域链并不会发生任何改变。在闭包中，能访问到的变量，仍然是作用域链上能够查询到的变量。&lt;/p&gt;
&lt;p&gt;对上面的例子稍作修改，如果我们在函数bar中声明一个变量c，并在闭包fn中试图访问该变量，运行结果会抛出错误。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;innnerFoo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(c); &lt;span class=&quot;comment&quot;&gt;// 在这里，试图访问函数bar中的c变量，会抛出错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn = innnerFoo; &lt;span class=&quot;comment&quot;&gt;// 将 innnerFoo的引用，赋值给全局变量中的fn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fn(); &lt;span class=&quot;comment&quot;&gt;// 此处的保留的innerFoo的引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;闭包的应用场景&quot;&gt;&lt;a href=&quot;#闭包的应用场景&quot; class=&quot;headerlink&quot; title=&quot;闭包的应用场景&quot;&gt;&lt;/a&gt;闭包的应用场景&lt;/h2&gt;&lt;h3 id=&quot;柯里化&quot;&gt;&lt;a href=&quot;#柯里化&quot; class=&quot;headerlink&quot; title=&quot;柯里化&quot;&gt;&lt;/a&gt;柯里化&lt;/h3&gt;&lt;p&gt;在函数式编程中，利用闭包能够实现很多炫酷的功能，柯里化便是其中很重要的一种。&lt;/p&gt;
&lt;h3 id=&quot;模块化&quot;&gt;&lt;a href=&quot;#模块化&quot; class=&quot;headerlink&quot; title=&quot;模块化&quot;&gt;&lt;/a&gt;模块化&lt;/h3&gt;&lt;p&gt;模块化是闭包最强大的一个应用场景。如果你是初学者，对于模块的了解可以暂时不用放在心上，因为理解模块需要更多的基础知识。但是如果你已经有了很多JavaScript的使用经验，在彻底了解了闭包之后，不妨借助本文介绍的作用域链与闭包的思路，重新理一理关于模块的知识。这对于我们理解各种各样的设计模式具有莫大的帮助。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num1, num2&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; num1 = !!num1 ? num1 : a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; num2 = !!num2 ? num2 : b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; num1 + num2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.add = add;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;add(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上面的例子中，我使用函数自执行的方式，创建了一个模块。add是模块对外暴露的一个公共方法。而变量a，b被作为私有变量。在面向对象的开发中，我们常常需要考虑是将变量作为私有变量，还是放在构造函数中的this中，因此理解闭包，以及原型链是一个非常重要的事情。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/14/62a77da17b1b4.webp&quot; alt=&quot;此图中可以观看到当代码执行到add方法时的调用栈与作用域链，此刻的闭包为外层的自执行函数&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;此图中可以观看到当代码执行到add方法时的调用栈与作用域链，此刻的闭包为外层的自执行函数&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;为了验证自己有没有搞懂作用域链与闭包，这里留下一个经典的思考题，常常也会在面试中被问到。&lt;/p&gt;
&lt;p&gt;利用闭包，修改下面的代码，让循环输出的结果依次为1， 2， 3， 4， 5&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }, i * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（四）：作用域与作用域链</title>
    <link href="https://fe32.top/articles/jsnb9531/"/>
    <id>https://fe32.top/articles/jsnb9531/</id>
    <published>2022-06-12T14:45:47.000Z</published>
    <updated>2023-06-27T14:39:00.772Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;词法环境（Lexical-Environments）&quot;&gt;&lt;a href=&quot;#词法环境（Lexical-Environments）&quot; class=&quot;headerlink&quot; title=&quot;词法环境（Lexical Environments）&quot;&gt;&lt;/a&gt;词法环境（Lexical Environments）&lt;/h2&gt;&lt;p&gt;官方规范对词法环境的说明是：词法环境（Lexical Environments）是 &lt;span class=&quot;p blue&quot;&gt;一种规范类型，用于根据ECMAScript代码的词法嵌套结构来定义标识符与特定变量和函数的关联&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;通俗来说，词法环境就是一套约定好的规则。我们写代码，应该按照这个规则来。JS引擎对JS源码进行词法分析，也是按照这个规则。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;词法环境，其实就是作用域。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;得出结论：&lt;br&gt;一、在JavaScript中，我们可以将作用域定义为一套规则，这套规则用来管理JS引擎如何在当前作用域以及嵌套的子作用域中根据标识符（变量或者函数）名称进行变量查找。&lt;br&gt;二、JavaScript中有全局作用域与函数作用域(因为eval我们平时开发中几乎不会用到它，这里不讨论)。&lt;/p&gt;
&lt;h2 id=&quot;作用域链&quot;&gt;&lt;a href=&quot;#作用域链&quot; class=&quot;headerlink&quot; title=&quot;作用域链&quot;&gt;&lt;/a&gt;作用域链&lt;/h2&gt;&lt;p&gt;作用域是一套规则；而作用域链，则是作用域的具体实现。&lt;/p&gt;
&lt;span class=&quot;p blue&quot;&gt;作用域链，是由当前环境与上层环境的一系列变量对象组成，它保证了当前执行环境对符合访问权限的变量和函数的有序访问&lt;/span&gt; 。

&lt;p&gt;作用域链，在函数声明阶段确认。如果要结合 JavaScript 引擎来理解的话，作用域链，就是在代码解析阶段确认的。&lt;/p&gt;
&lt;p&gt;为了帮助大家理解作用域链，我我们先结合一个例子，以及相应的图示来说明。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = a + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;innerTest&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; b + c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; innerTest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上面的例子中，全局，函数test，函数innerTest的执行上下文先后创建。我们设定他们的变量对象分别为VO(global)，VO(test), VO(innerTest)。而innerTest的作用域链，则同时包含了这三个变量对象，所以innerTest的执行上下文可如下表示。&lt;/p&gt;
&lt;p&gt;很多人会误解为当前作用域与上层作用域为包含关系，但其实并不是。以最前端为起点，最末端为终点的单方向通道我认为是更加贴切的形容。如图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/13/62a741da874d2.webp&quot; alt=&quot;作用域链图示&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;作用域链图示&lt;/span&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：因为变量对象在执行上下文进入执行阶段时，就变成了活动对象，这一点在上一篇文章中已经讲过，因此图中使用了AO来表示Active Object。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作用域链是由一系列变量对象组成，我们可以在这个单向通道中，查询变量对象中的标识符，这样，就能访问到上一层作用域中的变量。&lt;/p&gt;
&lt;p&gt;最后，用一个问题，验证一下大家对作用域和作用域链以及变量对象的理解：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!a) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（三）：变量对象详解</title>
    <link href="https://fe32.top/articles/jsnb9530/"/>
    <id>https://fe32.top/articles/jsnb9530/</id>
    <published>2022-06-12T12:35:46.000Z</published>
    <updated>2023-06-27T14:39:00.773Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;变量对象，新版本中，准确的说法应该是&lt;span class=&quot;p blue&quot;&gt;环境记录对象&lt;/span&gt;。而环境记录对象，又区分词法环境对象与变量环境对象，词法环境对象用于解析当前上下文中，由 const 声明的标识符引用，变量环境对象，用于解析由 var 声明的标识符引用。执行上下文内部的实现逻辑过于复杂，并不利于理解，因此此处为了理解方便，仍然统一采用变量对象的说法.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在JavaScript中，肯定不可避免的需要声明变量和函数，JS编译器是如何找到这些变量的呢？&lt;/p&gt;
&lt;p&gt;我们还得对执行上下文有一个进一步的了解。&lt;/p&gt;
&lt;p&gt;在上一篇文章中已经知道，当调用一个函数时（激活），一个新的执行上下文就会被创建。一个执行上下文的生命周期可以分为以下几个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建阶段&lt;br&gt;在这个阶段中，执行上下文会分别创建变量对象，确定this指向，以及其他需要的状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代码执行阶段&lt;br&gt;创建完成之后，就会开始执行代码，会完成变量赋值，以及执行其他代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;销毁阶段&lt;br&gt;可执行代码执行完毕之后，执行上下文出栈，对应的内存空间失去引用，等待被回收&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;变量对象（Variable-Object）&quot;&gt;&lt;a href=&quot;#变量对象（Variable-Object）&quot; class=&quot;headerlink&quot; title=&quot;变量对象（Variable Object）&quot;&gt;&lt;/a&gt;变量对象（Variable Object）&lt;/h2&gt;&lt;p&gt;变量对象的创建，依次经历了以下几个过程。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这里a为属性名，20是属性值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  a: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一、建立arguments对象：检查当前上下文中的参数，建立该对象下的属性与属性值。&lt;br&gt;二、检查当前上下文的函数声明，也就是使用function关键字声明的函数。在变量对象中以函数名建立一个属性，属性值为指向该函数所在内存地址的引用。&lt;br&gt;三、检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中以变量名建立一个属性，属性值为undefined，const/let 声明的变量没有赋值，不能提前使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 var 变量与函数同名，则在这个阶段，以函数值为准，在下一个阶段，函数值会被变量值覆盖。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo); &lt;span class=&quot;comment&quot;&gt;// function foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;function foo&#39;&lt;/span&gt;) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 上例的执行顺序为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 首先将所有函数声明放入变量对象中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;function foo&#39;&lt;/span&gt;) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 其次将所有变量声明放入变量对象中，但是因为foo已经存在同名函数，此时以函数值为准，而不会被undefined覆盖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// var foo = undefined;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 然后开始执行阶段代码的执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo); &lt;span class=&quot;comment&quot;&gt;// function foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5ec81c9f94.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根据这个规则，理解变量提升就变得十分简单了。在很多文章中虽然提到了变量提升，但是具体是怎么回事还真的很多人都说不出来，以后在面试中用变量对象的创建过程跟面试官解释变量提升，简直逼格满满。&lt;/p&gt;
&lt;p&gt;在上面的规则中我们看出，function声明会比var声明优先级更高一点。为了帮助大家更好的理解变量对象，我们结合一些简单的例子来进行探讨。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test(); &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在上例中，我们直接从&lt;code&gt;test()&lt;/code&gt;的执行上下文开始理解。全局作用域中运行&lt;code&gt;test()&lt;/code&gt;时，&lt;code&gt;test()&lt;/code&gt;的执行上下文开始创建。为了便于理解，我们用如下的形式来表示：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;testEC = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 变量对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    VO: {},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scopeChain: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 因为本文暂时不详细解释作用域链，所以把变量对象专门提出来说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// VO 为 Variable Object的缩写，即变量对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VO = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;: {...},  &lt;span class=&quot;comment&quot;&gt;//注：在浏览器的展示中，函数的参数可能并不是放在arguments对象中，这里为了方便理解，我做了这样的处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo: &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;reference&lt;/span&gt;&amp;gt;&lt;/span&gt;  // 表示foo的地址引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;    a: undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;未进入执行阶段之前，变量对象中的属性都不能访问！但是进入执行阶段之后，变量对象转变为了活动对象，里面的属性都能被访问了，然后开始进行执行阶段的操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;变量对象和活动对象其实都是同一个对象，只是处于执行上下文的不同生命周期。不过只有处于函数调用栈栈顶的执行上下文中的变量对象，才会变成活动对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 执行阶段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VO -&amp;gt;  AO   &lt;span class=&quot;comment&quot;&gt;// Active Object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AO = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;: {...},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo: &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;reference&lt;/span&gt;&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;    a: 1,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;    this: Window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因此，上面的例子demo1，执行顺序就变成了这样。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test(); &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再来一个例子，巩固一下我们的理解。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(bar);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(foo);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;world&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建阶段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VO = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;: {...},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo: &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;reference&lt;/span&gt;&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;    bar: undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;// 这里有一个需要注意的地方，var声明的变量与函数同名，以函数为准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 执行阶段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VO -&amp;gt; AO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VO = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;: {...},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo: &lt;span class=&quot;string&quot;&gt;&#39;Hello&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bar: &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;reference&lt;/span&gt;&amp;gt;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;    this: Window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;全局上下文的变量对象&quot;&gt;&lt;a href=&quot;#全局上下文的变量对象&quot; class=&quot;headerlink&quot; title=&quot;全局上下文的变量对象&quot;&gt;&lt;/a&gt;全局上下文的变量对象&lt;/h2&gt;&lt;p&gt;以浏览器中为例，全局对象为&lt;code&gt;window&lt;/code&gt;。全局上下文有一个特殊的地方，它的变量对象，就是&lt;code&gt;window对象&lt;/code&gt;。而这个特殊，在&lt;code&gt;this&lt;/code&gt;指向上也同样适用，this也是指向window。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 以浏览器中为例，全局对象为window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 全局上下文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;windowEC = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    VO: Window,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scopeChain: {},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;: Window&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;除此之外，全局上下文的生命周期，与程序的生命周期一致，只要程序运行不结束，比如关掉浏览器窗口，全局上下文就会一直存在。其他所有的上下文环境，都能直接访问全局上下文的属性。&lt;/p&gt;
&lt;h2 id=&quot;let-const&quot;&gt;&lt;a href=&quot;#let-const&quot; class=&quot;headerlink&quot; title=&quot;let/const&quot;&gt;&lt;/a&gt;let/const&lt;/h2&gt;&lt;p&gt;let/const声明的变量，是否还会变量提升？&lt;/p&gt;
&lt;p&gt;我们来做个试验，验证一下这个问题：&lt;/p&gt;
&lt;p&gt;第一步，我们直接使用一个未定义的变量&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;报错信息如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5f4938e194.webp&quot; alt=&quot;not defined&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;not defined&lt;/span&gt;&lt;/div&gt;


&lt;p&gt;第二步，我们在let之前调用变量&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5f4caa1a60.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;不能在初始化之前访问a。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个报错说明了什么问题呢？变量定义了，但是没有初始化。&lt;/p&gt;
&lt;p&gt;所以在这里我们就可以得出结论：let/const声明的变量，仍然会提前被收集到变量对象中，但和var不同的是，let/const定义的变量，不会在这个时候给他赋值undefined。&lt;/p&gt;
&lt;p&gt;因为完全没有赋值，即使变量提升了，也不能在赋值之前调用它。这就是我们常说的 &lt;span class=&quot;p blue&quot;&gt;暂时性死区&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;最后，变量提升的现象确实会对我们的代码造成一些负面影响，因此，开发中的好习惯，尽量将变量声明放在最前面来写。&lt;/p&gt;
&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（二）：执行上下文详细图解</title>
    <link href="https://fe32.top/articles/jsnb9529/"/>
    <id>https://fe32.top/articles/jsnb9529/</id>
    <published>2022-06-12T11:15:19.000Z</published>
    <updated>2023-06-27T14:39:00.775Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;先引入一个JavaScript中最基础，但同时也是最重要的概念： &lt;span class=&quot;p blue&quot;&gt;执行上下文（Execution Context）&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;每次当控制器转到可执行代码的时候，就会进入一个执行上下文 。执行上下文可以理解为当前代码的执行环境，它会形成一个作用域。&lt;/p&gt;
&lt;p&gt;JavaScript中的运行环境大概包括三种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局环境：JavaScript代码运行起来会首先进入该环境&lt;/li&gt;
&lt;li&gt;函数环境：当函数被调用执行时，会进入当前函数中执行代码&lt;/li&gt;
&lt;li&gt;eval（不建议使用，可忽略）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此在一个JavaScript程序中，必定会产生多个执行上下文，在上一篇文章中也有提到，JavaScript引擎会以栈的方式来处理它们，这个栈，我们称其为&lt;span class=&quot;p blue&quot;&gt;函数调用栈(call stack)&lt;/span&gt;。栈底永远都是全局上下文，而栈顶就是当前正在执行的上下文。&lt;/p&gt;
&lt;p&gt;当代码在执行过程中，遇到以上三种情况，都会生成一个执行上下文，放入栈中，而处于栈顶的上下文执行完毕之后，就会自动出栈。为了更加清晰的理解这个过程，根据下面的例子，结合图示给大家展示。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;执行上下文可以理解为函数执行的环境，每一个函数执行时，都会给对应的函数创建这样一个执行环境。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; color = &lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;changeColor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; anotherColor = &lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swapColors&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tempColor = anotherColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    anotherColor = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    color = tempColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  swapColors();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;changeColor();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们用&lt;span class=&quot;p blue&quot;&gt;ECStack&lt;/span&gt; 来表示处理执行上下文组的堆栈。我们很容易知道，第一步，首先是全局上下文入栈。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5d6b13370b.webp&quot; alt=&quot;第一步：全局上下文入栈&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;第一步：全局上下文入栈&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;全局上下文入栈之后，其中的可执行代码开始执行，直到遇到了&lt;code&gt;changeColor()&lt;/code&gt;，这一句激活函数&lt;code&gt;changeColor&lt;/code&gt;创建它自己的执行上下文，因此第二步就是&lt;code&gt;changeColor&lt;/code&gt;的执行上下文入栈。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5d70bb4b17.webp&quot; alt=&quot;第二步：changeColor的执行上下文入栈&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;第二步：changeColor的执行上下文入栈&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;changeColor的上下文入栈之后，控制器开始执行其中的可执行代码，遇到&lt;code&gt;swapColors()&lt;/code&gt;之后又激活了一个执行上下文。因此第三步是swapColors的执行上下文入栈。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5d83cbba9f.webp&quot; alt=&quot;第三步：swapColors的执行上下文入栈&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;第三步：swapColors的执行上下文入栈&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;在swapColors的可执行代码中，再没有遇到其他能生成执行上下文的情况，因此这段代码顺利执行完毕，swapColors的上下文从栈中弹出。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5d70bb4b17.webp&quot; alt=&quot;第四步：swapColors的执行上下文出栈&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;第四步：swapColors的执行上下文出栈&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;swapColors的执行上下文弹出之后，继续执行changeColor的可执行代码，也没有再遇到其他执行上下文，顺利执行完毕之后弹出。这样，ECStack中就只剩下全局上下文了。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5d6b13370b.webp&quot; alt=&quot;第五步：changeColor的执行上下文出栈&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;第五步：changeColor的执行上下文出栈&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;全局上下文在浏览器窗口关闭后出栈。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：函数中，遇到return能直接终止可执行代码的执行，因此会直接将当前上下文弹出栈。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5d98300ac3.webp&quot; alt=&quot;整个过程&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;整个过程&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;详细了解了这个过程之后，我们就可以对执行上下文总结一些结论了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单线程。&lt;/li&gt;
&lt;li&gt;同步执行，只有栈顶的上下文处于执行中，其他上下文需要等待。&lt;/li&gt;
&lt;li&gt;全局上下文只有唯一的一个，它在浏览器关闭时出栈。&lt;/li&gt;
&lt;li&gt;函数的执行上下文的个数没有限制。&lt;/li&gt;
&lt;li&gt;每次某个函数被调用，就会有个新的执行上下文为其创建，即使是调用的自身函数，也是如此。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了巩固一下执行上下文的理解，我们再来绘制一个例子的演变过程，这是一个简单的闭包例子。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; f2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = f1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result(); &lt;span class=&quot;comment&quot;&gt;// 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因为f1中的函数f2在f1的可执行代码中，并没有被调用执行，因此执行f1时，f2不会创建新的上下文，而直到result执行时，才创建了一个新的。具体演变过程如下。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/12/62a5d985f3d3a.webp&quot; alt=&quot;上例演变过程&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;上例演变过程&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;最后留一个简单的例子，大家可以自己脑补一下这个例子在执行过程中执行上下文的变化情况。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&quot;window&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  name: &lt;span class=&quot;string&quot;&gt;&#39;Perter&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 利用变量保存的方式保证其访问的是p对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; self = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; getName = p.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _name = getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(_name);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端基础进阶（一）：内存空间详细图解</title>
    <link href="https://fe32.top/articles/jsnb9528/"/>
    <id>https://fe32.top/articles/jsnb9528/</id>
    <published>2022-06-09T16:57:34.000Z</published>
    <updated>2023-06-27T14:39:00.774Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/10/62a22e76dd651.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;在学习内存空间之前，我们需要对三种数据结构有一个清晰的理解。他们分别是 &lt;strong&gt;堆(heap)&lt;/strong&gt; ，&lt;strong&gt;栈(stack)&lt;/strong&gt; 与 &lt;strong&gt;队列(queue)&lt;/strong&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;栈数据结构&quot;&gt;&lt;a href=&quot;#栈数据结构&quot; class=&quot;headerlink&quot; title=&quot;栈数据结构&quot;&gt;&lt;/a&gt;栈数据结构&lt;/h2&gt;&lt;p&gt;与 C/C++ 不同，JavaScript中并没有严格意义上区分栈内存与堆内存。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般情况是基础数据类型，在栈内存中维护，引用数据类型，在堆内存中维护，栈内存和堆内存没有本质差别，但是栈内存是从地址高位开始分配，堆内存从地址低位开始分配，这里要结合函数调用栈来一起理解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是在某些场景，我们仍然需要基于 &lt;strong&gt;栈数据结构&lt;/strong&gt; 的思维来实现一些功能，比如 JavaScript 的 执行上下文（关于执行上下文会在下一篇文章中总结）。执行上下文的执行顺序借用了 &lt;strong&gt;栈数据结构&lt;/strong&gt; 的存取方式(也就是后面我们会经常提到的 &lt;strong&gt;函数调用栈&lt;/strong&gt;)。&lt;/p&gt;
&lt;p&gt;要简单理解栈的存取方式，我们可以通过类比乒乓球盒子来分析。如下图左侧。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/10/62a22e77d8d9b.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这种乒乓球的存放方式与栈中存取数据的方式如出一辙。处于盒子中最顶层的乒乓球5，它一定是最后被放进去，但可以最先被使用。而我们想要使用底层的乒乓球1，就必须将上面的4个乒乓球取出来，让乒乓球1处于盒子顶层。这就是栈空间 &lt;span class=&quot;p blue&quot;&gt;先进后出，后进先出&lt;/span&gt; 的特点。图中已经详细的表明了栈空间的存储原理。&lt;/p&gt;
&lt;h2 id=&quot;堆数据结构&quot;&gt;&lt;a href=&quot;#堆数据结构&quot; class=&quot;headerlink&quot; title=&quot;堆数据结构&quot;&gt;&lt;/a&gt;堆数据结构&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;堆数据结构&lt;/strong&gt;是一种&lt;strong&gt;树状结构&lt;/strong&gt;。它的存取数据的方式，则与书架与书非常相似。&lt;/p&gt;
&lt;p&gt;书虽然也整齐的存放在书架上，但是我们只要知道书的名字，就可以很方便的取出我们想要的书，而不用像从乒乓球盒子里取乒乓一样，非得将上面的所有乒乓球拿出来才能取到中间的某一个乒乓球。好比在JSON格式的数据中，我们存储的&lt;code&gt;key-value&lt;/code&gt;是可以无序的，因为顺序的不同并不影响我们的使用，我们只需要关心书的名字。&lt;/p&gt;
&lt;h2 id=&quot;队列&quot;&gt;&lt;a href=&quot;#队列&quot; class=&quot;headerlink&quot; title=&quot;队列&quot;&gt;&lt;/a&gt;队列&lt;/h2&gt;&lt;p&gt;在 JavaScript 中，理解队列数据结构的目的主要是为了清晰的明白 &lt;span class=&quot;p blue&quot;&gt;事件循环（Event Loop）&lt;/span&gt; 的机制到底是怎么回事。在后续的章节中会详细分析事件循环机制。&lt;/p&gt;
&lt;p&gt;队列是一种 &lt;span class=&quot;p blue&quot;&gt;先进先出（FIFO）&lt;/span&gt; 的数据结构。正如排队过安检一样，排在队伍前面的人一定是最先过检的人。用以下的图示可以清楚的理解队列的原理。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/10/62a22e803f547.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;变量对象与基础数据类型&quot;&gt;&lt;a href=&quot;#变量对象与基础数据类型&quot; class=&quot;headerlink&quot; title=&quot;变量对象与基础数据类型&quot;&gt;&lt;/a&gt;变量对象与基础数据类型&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在新的 ECMAScript 版本中，此处的变量对象，应该叫做环境记录对象更为标准，但变量对象更有利于简化理解内部机制，所以本系列文章不做更改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JavaScript 的 &lt;strong&gt;执行上下文&lt;/strong&gt; 生成之后，会创建一个叫做 &lt;strong&gt;变量对象&lt;/strong&gt; 的特殊对象（具体会在下一篇文章与执行上下文一起总结），JavaScript 的基础数据类型往往都会保存在变量对象中。&lt;/p&gt;
&lt;p&gt;基础数据类型都是一些简单的数据段，JavaScript 中有5种基础数据类型，分别是&lt;code&gt;Undefined&lt;/code&gt;、&lt;code&gt;Null&lt;/code&gt;、&lt;code&gt;Boolean&lt;/code&gt;、&lt;code&gt;Number&lt;/code&gt;、&lt;code&gt;String&lt;/code&gt;。基础数据类型都是按值访问，我们可以直接操作保存在变量中的实际值。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ES6 中新加了一种基础数据类型 Symbol，可以先不用考虑他。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;引用数据类型与堆内存&quot;&gt;&lt;a href=&quot;#引用数据类型与堆内存&quot; class=&quot;headerlink&quot; title=&quot;引用数据类型与堆内存&quot;&gt;&lt;/a&gt;引用数据类型与堆内存&lt;/h2&gt;&lt;p&gt;与其他语言不同，JS的引用数据类型，比如数组Array，它们值的大小是不固定的。引用数据类型的值是保存在堆内存中的对象。JavaScript不允许直接访问堆内存中的数据，因此我们不能直接操作对象的堆内存空间。在操作对象时，实际上是在操作对象的引用而不是实际的对象。因此，引用类型的值都是按引用访问的。这里的引用，我们可以理解为保存在变量对象中的一个地址，该地址与堆内存的实际值相关联。&lt;/p&gt;
&lt;p&gt;为了更好的搞懂变量对象与堆内存，我们可以结合以下例子与图解进行理解。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a1 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;   &lt;span class=&quot;comment&quot;&gt;// 变量对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a2 = &lt;span class=&quot;string&quot;&gt;&#39;this is string&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 变量对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a3 = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 变量对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = { &lt;span class=&quot;attr&quot;&gt;m&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; }; &lt;span class=&quot;comment&quot;&gt;// 变量b存在于变量对象中，{m: 20} 作为对象存在于堆内存中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;// 变量c存在于变量对象中，[1, 2, 3] 作为对象存在于堆内存中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/10/62a22e83b47e3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当我们要访问堆内存中的引用数据类型时，实际上我们首先是从变量对象中获取了该对象的地址引用（或者地址指针），然后再从堆内存中取得我们需要的数据。&lt;/p&gt;
&lt;p&gt;理解了JS的内存空间，我们就可以借助内存空间的特性来验证一下引用类型的一些特点。&lt;/p&gt;
&lt;p&gt;在前端面试中我们常常会遇到这样一个类似的题目。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo01.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这时a的值是多少？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// demo02.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = { &lt;span class=&quot;attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n = m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n.a = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这时m.a的值是多少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在变量对象中的数据发生复制行为时，系统会自动为新的变量分配一个新值。&lt;code&gt;var b = a&lt;/code&gt;执行之后，a与b虽然值都等于20，但是他们其实已经是相互独立互不影响的值了。具体如图。所以我们修改了b的值以后，a的值并不会发生变化。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/10/62a22e8594f0f.webp&quot; alt=&quot;demo01图解&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;demo01图解&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;在demo02中，我们通过&lt;code&gt;var n = m&lt;/code&gt;执行一次复制引用类型的操作。引用类型的复制同样也会为新的变量自动分配一个新的值保存在变量对象中，但不同的是，这个新的值，仅仅只是引用类型的一个地址指针。当地址指针相同时，尽管他们相互独立，但是在变量对象中访问到的具体对象实际上是同一个。如图所示。&lt;/p&gt;
&lt;p&gt;因此当我改变n时，m也发生了变化。这就是引用类型的特性。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/10/62a22e872e3f7.webp&quot; alt=&quot;demo02图解&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;demo02图解&lt;/span&gt;&lt;/div&gt;

&lt;h2 id=&quot;内存空间管理&quot;&gt;&lt;a href=&quot;#内存空间管理&quot; class=&quot;headerlink&quot; title=&quot;内存空间管理&quot;&gt;&lt;/a&gt;内存空间管理&lt;/h2&gt;&lt;p&gt;因为JavaScript具有自动垃圾收集机制，所以我们在开发时好像不用关心内存的使用问题，内存的分配与回收都完全实现了自动管理。&lt;/p&gt;
&lt;p&gt;JavaScript的内存生命周期：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分配你所需要的内存&lt;/li&gt;
&lt;li&gt;使用分配到的内存（读、写）&lt;/li&gt;
&lt;li&gt;不需要时将其释放、归还&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了便于理解，我们使用一个简单的例子来解释这个周期。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 在内存中给数值变量分配空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(a + &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 使用内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 使用完毕之后，释放内存空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;第一步和第二步我们都很好理解，JavaScript在定义变量时就完成了内存分配。第三步释放内存空间则是我们需要重点理解的一个点。&lt;/p&gt;
&lt;p&gt;JavaScript有自动垃圾收集机制，那么这个自动垃圾收集机制的原理是什么呢？其实很简单，就是 &lt;span class=&quot;p blue&quot;&gt;找出那些不再继续使用的值，然后释放其占用的内存。垃圾收集器会每隔固定的时间段就执行一次释放操作&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;在JavaScript中，最常用的是通过 &lt;span class=&quot;p blue&quot;&gt;标记清除&lt;/span&gt; 的算法来找到哪些对象是不再继续使用的，因此&lt;code&gt;a = null&lt;/code&gt;其实仅仅只是做了一个释放引用的操作，&lt;span class=&quot;p blue&quot;&gt;让 a 原本对应的值失去引用，脱离执行环境，这个值会在下一次垃圾收集器执行操作时被找到并释放&lt;/span&gt; 。而在适当的时候解除引用，是为页面获得更好性能的一个重要方式。&lt;/p&gt;
&lt;p&gt;需要注意的是，在局部作用域中，当函数执行完毕，局部变量也就没有存在的必要了，因此垃圾收集器很容易做出判断并回收。但是全局变量什么时候需要释放内存空间则很难判断，因此在我们的开发中，原则上应该避免使用全局变量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要详细了解垃圾收集机制，建议阅读《JavaScript高级编程》中的4.3节。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;note no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 核心进阶</title>
    <link href="https://fe32.top/articles/jsnb9527/"/>
    <id>https://fe32.top/articles/jsnb9527/</id>
    <published>2022-06-08T17:57:53.000Z</published>
    <updated>2023-06-27T14:39:00.777Z</updated>
    
    
    <summary type="html">本系列文章旨在带给读者地道的前端基础知识体系，深入底层原理，了解最权威的前端基础，循序渐进，带领读者领略正确学习方法的独特魅力。</summary>
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="前端进阶" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 从零开始搭建个人博客系列</title>
    <link href="https://fe32.top/articles/hexo1600/"/>
    <id>https://fe32.top/articles/hexo1600/</id>
    <published>2022-06-05T06:52:37.000Z</published>
    <updated>2023-06-27T14:39:00.835Z</updated>
    
    
    <summary type="html">Hexo + Butterfly 系列教程，手把手教你从零搭建属于自己的个人网站！</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 从零开始搭建个人博客（六）</title>
    <link href="https://fe32.top/articles/hexo1606/"/>
    <id>https://fe32.top/articles/hexo1606/</id>
    <published>2022-06-05T05:50:17.000Z</published>
    <updated>2023-06-27T14:39:00.817Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;阅读本篇前，请先阅读前几篇文章：&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;br&gt;&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，路径为【BlogRoot/_config.yml】。&lt;br&gt;&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，路径为【BlogRoot/_config.butterfly.yml】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;更新记录&quot;&gt;&lt;a href=&quot;#更新记录&quot; class=&quot;headerlink&quot; title=&quot;更新记录&quot;&gt;&lt;/a&gt;更新记录&lt;/h2&gt;&lt;div class=&quot;timeline&quot;&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2023-02-14&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#添加豆瓣插件&quot; target=&quot;_top&quot;&gt;更新【豆瓣插件】&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2023-01-13&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#自定义页脚&quot; target=&quot;_top&quot;&gt;新增【自定义页脚】原版教程&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#侧边栏公众号&quot; target=&quot;_top&quot;&gt;新增【侧边栏公众号】原版教程&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#文章加密插件&quot; target=&quot;_top&quot;&gt;新增【文章加密插件】&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#友链朋友圈&quot; target=&quot;_top&quot;&gt;新增【友链朋友圈】&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2022-11-12&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#哔哩哔哩番剧页面插件&quot; target=&quot;_top&quot;&gt;更新关于【哔哩哔哩番剧页面插件】跟主题懒加载冲突的问题&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#公告栏两个小人&quot; target=&quot;_top&quot;&gt;更新【公告栏两个小人】CDN（fastly.jsdelivr.net -&amp;gt; elemecdn）&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2022-11-12&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#侧边栏电子时钟&quot; target=&quot;_top&quot;&gt;更新【侧边栏电子时钟】教程&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2022-11-10&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#首页分类磁铁&quot; target=&quot;_top&quot;&gt;新增【分类磁铁】原版教程&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#自定义右键菜单&quot; target=&quot;_top&quot;&gt;新增【自定义右键菜单】教程&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#加载动画&quot; target=&quot;_top&quot;&gt;新增【加载动画】教程&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#评论弹幕&quot; target=&quot;_top&quot;&gt;新增【评论弹幕】教程&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#更换字体&quot; target=&quot;_top&quot;&gt;修改【字体CDN】&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#禁止右键及F12等事件&quot; target=&quot;_top&quot;&gt;更新【禁止右键及F12等事件】&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2022-06-05 持续优化&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#公告栏两个小人&quot; target=&quot;_top&quot;&gt;公告栏两个小人&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#星空背景和流星特效&quot; target=&quot;_top&quot;&gt;星空背景和流星特效&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2022-05-29 CDN替换方案&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;CDN解决方案：请参考&lt;a href=&quot;https://fe32.top/articles/hexo1605/#CDN&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2021-11-27 valine获取评论失败&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#valine获取评论失败&quot; target=&quot;_top&quot;&gt;新增【valine获取评论失败说明】&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2021-11-22 持续优化&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#禁止右键及F12等事件&quot; target=&quot;_top&quot;&gt;新增【禁止右键及F12等事件】说明&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#部分动效说明&quot; target=&quot;_top&quot;&gt;新增【部分动效说明】&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#部分页面插入视频&quot; target=&quot;_top&quot;&gt;新增【部分页面插入视频】&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2021-08-26 持续优化&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#首页分类磁铁&quot; target=&quot;_top&quot;&gt;新增【首页分类磁铁】&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#侧边栏电子时钟&quot; target=&quot;_top&quot;&gt;新增【侧边栏电子时钟】&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#更换字体&quot; target=&quot;_top&quot;&gt;更换字体&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#局部css优化&quot; target=&quot;_top&quot;&gt;对局部css进行了优化&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/#灯笼特效&quot; target=&quot;_top&quot;&gt;灯笼特效&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;timenode&quot;&gt;&lt;div class=&quot;meta&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2021-04-27 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;butterfly3.4.0 -&amp;gt; butterfly3.7.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;body&quot;&gt;&lt;ol&gt;&lt;li&gt;更新v3.7.1适配方案。&lt;/li&gt;&lt;li&gt;注意一点的是，butterfly_v3.6.0取消了缓存配置，转为完全默认，需要将&lt;code&gt;{cache:theme.fragment_cache}&lt;/code&gt; 改为 &lt;code&gt;{ cache:true }&lt;/code&gt;。如果安装的版本较新，可直接忽略这一步。&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;Butterfly主题美化&quot;&gt;&lt;a href=&quot;#Butterfly主题美化&quot; class=&quot;headerlink&quot; title=&quot;Butterfly主题美化&quot;&gt;&lt;/a&gt;Butterfly主题美化&lt;/h2&gt;&lt;h3 id=&quot;生成文章唯一链接&quot;&gt;&lt;a href=&quot;#生成文章唯一链接&quot; class=&quot;headerlink&quot; title=&quot;生成文章唯一链接&quot;&gt;&lt;/a&gt;生成文章唯一链接&lt;/h3&gt;&lt;p&gt;Hexo的默认文章链接格式是年，月，日，标题这种格式来生成的。如果你的标题是中文的话，那你的URL链接就会包含中文。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;permalink:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;:year/:month/:day/:title&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;前往你的Hexo博客根目录，打开cmd命令窗口执行&lt;code&gt;npm install hexo-abbrlink --save&lt;/code&gt;。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-abbrlink --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;中&lt;code&gt;permalink&lt;/code&gt;属性。&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;deletion&quot;&gt;- permalink: :year/:month/:day/:title/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#修改为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink: post/:abbrlink.html # post为自定义前缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;abbrlink:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alg: crc32   #算法： crc16(default) and crc32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rep: hex     #进制： dec(default) and hex&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;页面底部-footer-跳动的心&quot;&gt;&lt;a href=&quot;#页面底部-footer-跳动的心&quot; class=&quot;headerlink&quot; title=&quot;页面底部 footer 跳动的心&quot;&gt;&lt;/a&gt;页面底部 footer 跳动的心&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/1f4f6f6e7a7fb.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;编辑&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/footer.pug&lt;/code&gt;文件，&lt;/p&gt;&lt;p&gt;将以下内容&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;copy;${theme.footer.owner.since} - ${nowYear} By ${config.author}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;改为&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;copy;${theme.footer.owner.since} - ${nowYear + &#39; &#39;} &amp;lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&amp;gt;&amp;lt;/i&amp;gt; ${config.author}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;将以下内容&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;copy;${nowYear} By ${config.author} &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;改为&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;copy;${nowYear + &#39; &#39;} &amp;lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&amp;gt;&amp;lt;/i&amp;gt; ${config.author}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;将以下内容添加到 &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt;标签内：&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rel=&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://fastly.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;具体放置位置，可以参考下图：&lt;/p&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/05/629c7d29468ce.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;修改标题样式&quot;&gt;&lt;a href=&quot;#修改标题样式&quot; class=&quot;headerlink&quot; title=&quot;修改标题样式&quot;&gt;&lt;/a&gt;修改标题样式&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/19/62d6b17d2c3c5.jpg&quot; alt=&quot;回形针&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;回形针&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/19/62d6b7fda1799.jpg&quot; alt=&quot;旋转风车&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;旋转风车&lt;/span&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css&lt;/code&gt;文件下新建 css 文件，并命名为 &lt;code&gt;custom.css&lt;/code&gt;(命名按照自己喜好去命名，只需在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中引入对应的&lt;code&gt;css&lt;/code&gt;文件即可)，将以下代码复制到新建的&lt;code&gt;custom.css&lt;/code&gt;中。&lt;/p&gt;&lt;p&gt;如果想自行修改标题样式的话，将&lt;code&gt;content: &#39;\f0c1&#39;;&lt;/code&gt;中的内容换成自己想要的即可，如要添加动画，参考&lt;code&gt;animation: avatar_turn_around 1s linear infinite;&lt;/code&gt;。&lt;/p&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#post&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.post-outdate-notice&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.fontawesomeIcon&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.note&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:not(.no-icon)&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-variant&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Font Awesome 5 Free&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-rendering&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-font-smoothing&lt;/span&gt;: antialiased&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#f47466&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 回形针 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;\f0c1&#39;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-transition&lt;/span&gt;: all .&lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; ease-out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-moz-transition&lt;/span&gt;: all .&lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; ease-out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-o-transition&lt;/span&gt;: all .&lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; ease-out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-ms-transition&lt;/span&gt;: all .&lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; ease-out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transition&lt;/span&gt;: all .&lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; ease-out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 若要使用风车效果，请去掉下面的注释 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* content: &#39;\f863&#39;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    animation: avatar_turn_around 1s linear infinite; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.4rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;1.3rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - .&lt;span class=&quot;number&quot;&gt;5rem&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.6rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.3rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;9rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;1.4rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - .&lt;span class=&quot;number&quot;&gt;45rem&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;9rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.5rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.2rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;8rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - .&lt;span class=&quot;number&quot;&gt;4rem&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;1.2rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - .&lt;span class=&quot;number&quot;&gt;4rem&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;8rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.4rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.1rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;7rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;1rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - .&lt;span class=&quot;number&quot;&gt;35rem&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;7rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.3rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;6rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: -.&lt;span class=&quot;number&quot;&gt;8rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - .&lt;span class=&quot;number&quot;&gt;3rem&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;6rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.2rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;6rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: -.&lt;span class=&quot;number&quot;&gt;8rem&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; - .&lt;span class=&quot;number&quot;&gt;3rem&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;6rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#article-container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h6&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.2rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;添加豆瓣插件&quot;&gt;&lt;a href=&quot;#添加豆瓣插件&quot; class=&quot;headerlink&quot; title=&quot;添加豆瓣插件&quot;&gt;&lt;/a&gt;添加豆瓣插件&lt;/h3&gt;&lt;!-- 详情请看[传送门](https://github.com/mythsman/hexo-douban) --&gt;

&lt;blockquote&gt;
&lt;p&gt;如果出现了豆瓣爬取数据失败问题，建议安装较低的node版本(v12.18.0)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;1.安装豆瓣插件&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-2&quot;&gt;2.注入豆瓣内容&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-3&quot;&gt;3.主题中注入豆瓣&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-4&quot;&gt;4.执行Docs命令&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-5&quot;&gt;5.添加相关导航&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;-1&quot;&gt;&lt;p&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;npm install hexo-douban --save&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-douban --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;-2&quot;&gt;&lt;p&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，添加如下代码：&lt;/p&gt;
&lt;!-- douban:
#   user: ethan_tzy
#   builtin: false
#   book:
#     title: &#39;&#39;
#     quote: &#39;One who is filled with knowledge always behaves with elegance.&#39;
#   movie:
#     title: &#39;梦想与现实的碰撞&#39;
#     quote: &#39;The collision between dream and reality.&#39;
#   game:
#     title: &#39;诅咒中闪烁泪光，倾诉霜之哀伤。&#39;
#     quote: &#39;Tears flicker in the curse and pour out the sorrow of frost.&#39;
#   timeout: 10000 --&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;douban:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;228172215&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;builtin:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;item_per_page:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;book:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;books/index.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my book title&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;quote:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my book quote&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;movie:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;movies/index.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my movie title&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;quote:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my movie quote&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;game:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;games/index.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my game title&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;quote:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my game quote&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;song:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;songs/index.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my song title&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;quote:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;This is my song quote&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;option:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;timeout:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;id: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考 &lt;a href=&quot;https://www.zhihu.com/question/19634899&quot;&gt;怎样获取豆瓣的数字 ID&lt;/a&gt; ？&lt;/li&gt;
&lt;li&gt;builtin: 是否将 hexo douban 命令默认嵌入进 hexo g、hexo s，使其自动执行 hexo douban 命令。默认关闭。当你的豆瓣条目较多时，也建议关闭。&lt;/li&gt;
&lt;li&gt;item_per_page: 每页展示的条目数，默认 10 。&lt;/li&gt;
&lt;li&gt;path: 生成页面后的路径，默认生成在 //my-blog/books/index.html 等下面。如需自定义路径，则可以修改这里。&lt;/li&gt;
&lt;li&gt;title: 该页面的标题。&lt;/li&gt;
&lt;li&gt;quote: 写在页面开头的一段话,支持 html 语法。&lt;/li&gt;
&lt;li&gt;option: 该页面额外的 Front-matter 配置，参考 &lt;a href=&quot;https://hexo.io/docs/front-matter.html&quot;&gt;Hexo 文档&lt;/a&gt;。无特别需要，留空即可。&lt;/li&gt;
&lt;li&gt;timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- - user: 你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：https://www.douban.com/people/xxxxxx/ ，其中的”xxxxxx”就是你的个人ID了。
- builtin: 是否将生成页面的功能嵌入 hexo s 和 hexo g 中，默认是 false ，另一可选项为 true 。
- title: 该页面的标题。
- quote: 写在页面开头的一段话,支持html语法。
- timeout: 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。
- 如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。 --&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;-3&quot;&gt;&lt;p&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中配置以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 如果你有使用hexo-douban，可配置這個&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;douban:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;attr&quot;&gt;meta:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;attr&quot;&gt;movies_img:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://fastly.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/movie.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;attr&quot;&gt;books_img:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://fastly.jsdelivr.net/npm/blog-gallery@1.0.0/1/20200206161657.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#   games_img:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;-4&quot;&gt;&lt;p&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;hexo douban&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo douban&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等待命令执行完毕，出现下图所示内容即为成功。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/d579a68e2fd94.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;-5&quot;&gt;&lt;div class=&quot;note red icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-fan&quot;&gt;&lt;/i&gt;&lt;p&gt;请注意，我的butterfly主题版本不是最新的，导航菜单栏格式请按照最新的格式写。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;如下图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/badbd5bb7f80f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;添加访客地图&quot;&gt;&lt;a href=&quot;#添加访客地图&quot; class=&quot;headerlink&quot; title=&quot;添加访客地图&quot;&gt;&lt;/a&gt;添加访客地图&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/e391380d7db28.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;前往 &lt;a href=&quot;https://clustrmaps.com/&quot;&gt;clustrmaps&lt;/a&gt; 网站注册一个帐号。&lt;/p&gt;&lt;p&gt;找到&lt;code&gt;Free Tools&lt;/code&gt;下面的&lt;code&gt;Website Widget&lt;/code&gt;, 点击&lt;code&gt;Get Map Widget&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;输入你的博客网址，点击&lt;code&gt;Next&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;根据你自己的喜好选择样式&lt;code&gt;Map widget&lt;/code&gt;或&lt;code&gt;Globe Widget&lt;/code&gt;（本人使用后者）。&lt;/p&gt;&lt;p&gt;找到如下代码，记住 src (&lt;strong&gt;**&lt;/strong&gt; 的部分):&lt;/p&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; id=&lt;span class=&quot;string&quot;&gt;&quot;clstr_globe&quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;**********************&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在 &lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/widget&lt;/code&gt;文件夹新建&lt;code&gt;card_map.pug&lt;/code&gt;文件，文件内容如下：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.card-widget.card-map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .card-content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .item-headline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      i.fa.fa-globe-asia(aria-hidden=&quot;true&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span= _p(&#39;aside.card_map&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    script#clstr_globe(type=&quot;text/javascript&quot; defer=&quot;defer&quot; src=&quot;此处填入你自己的代码&quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;编辑 &lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug&lt;/code&gt;文件，在你想要显示的位置插入以下代码（注意格式）：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if theme.aside.card_map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        !=partial(&#39;includes/widget/card_map&#39;, {}, {cache:true})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;具体放置位置，可以参考下图：&lt;/p&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/05/629c845643925.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;编辑主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，在&lt;code&gt;card_webinfo&lt;/code&gt;下面添加一行&lt;code&gt;card_map: true&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;编辑&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/languages/zh-CN.yml&lt;/code&gt;文件 (请根据你的网站语言选择)，找到&lt;code&gt;card_announcement: 公告&lt;/code&gt; , 在下面添加一行&lt;code&gt;card_map: 访客地图&lt;/code&gt; (后面的文本可自定义),繁体字方法一样，修改&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/languages/zh-TW.yml&lt;/code&gt;文件就行。&lt;/p&gt;&lt;p&gt;如果不想显示，直接把主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中的&lt;code&gt;card_map: true&lt;/code&gt; 改为 &lt;code&gt;card_map: false&lt;/code&gt; 即可。&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;添加Pixiv日榜&quot;&gt;&lt;a href=&quot;#添加Pixiv日榜&quot; class=&quot;headerlink&quot; title=&quot;添加Pixiv日榜&quot;&gt;&lt;/a&gt;添加Pixiv日榜&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/b17aa37e6baa5.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ol&gt;&lt;li&gt;&lt;p&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/widget&lt;/code&gt;文件夹新建 &lt;code&gt;card_pixiv.pug&lt;/code&gt;文件，文件内容如下：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.card-widget.card-pixiv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; .card-content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .item-headline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i.fa.fa-image(aria-hidden=&quot;true&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    span= _p(&#39;aside.card_pixiv&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    iframe(src=&quot;https://cloud.mokeyjay.com/pixiv&quot; frameborder=&quot;0&quot;  style=&quot;width:99%;height:380px;margin:0;&quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://cloud.mokeyjay.com/pixiv&quot;&gt;https://cloud.mokeyjay.com/pixiv&lt;/a&gt; 使用的是 &lt;a href=&quot;https://www.mokeyjay.com/&quot;&gt;超能小紫&lt;/a&gt; 提供的服务，也可以自行搭建，搭建方式请看&lt;a href=&quot;https://www.mokeyjay.com/archives/1063&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;编辑&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug&lt;/code&gt; 文件，在你想要显示的位置插入以下代码：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if theme.aside.card_pixiv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    !=partial(&#39;includes/widget/card_pixiv&#39;, {}, {cache:true})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/05/629c85346ca23.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;编辑主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，在 &lt;code&gt;card_webinfo&lt;/code&gt; 下面添加一行 &lt;code&gt;card_pixiv: true&lt;/code&gt;，可以通过搜索关键词 &lt;code&gt;aside&lt;/code&gt;，找到对应位置添加即可。不想显示，直接把文件中的 &lt;code&gt;card_pixiv: true&lt;/code&gt; 改为 &lt;code&gt;card_pixiv: false&lt;/code&gt; 即可。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;编辑 &lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/languages/zh-CN.yml&lt;/code&gt;文件 (请根据你的网站语言选择)，找到&lt;code&gt;card_announcement: 公告&lt;/code&gt;，在下面添加一行&lt;code&gt;card_pixiv: Pixiv日榜Top50&lt;/code&gt;(后面的文本可自定义)。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;哔哩哔哩番剧页面插件&quot;&gt;&lt;a href=&quot;#哔哩哔哩番剧页面插件&quot; class=&quot;headerlink&quot; title=&quot;哔哩哔哩番剧页面插件&quot;&gt;&lt;/a&gt;哔哩哔哩番剧页面插件&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/f09072fc46848.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;details red=&quot;&quot;&gt;&lt;summary&gt; 关于图片加载相关问题 &lt;/summary&gt;              &lt;div class=&quot;content&quot;&gt;              &lt;p&gt;懒加载问题，此插件懒加载可能与你主题的懒加载存在冲突，以下为几种解决方法：&lt;/p&gt;&lt;p&gt;1.全站关闭懒加载，此插件启用/不启用懒加载均可正常运行；&lt;br&gt;2.如果主题提供单独页面的懒加载配置参数，可在插件配置的extra_option中配置为关。&lt;br&gt;3.[建议]关闭此插件的懒加载，并按照主题的懒加载图片格式配置srcValue和lazyloadAttrName，例butterfly主题：&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;bangumi:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;lazyload:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;srcValue:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;__image__&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更多详情可见：&lt;a href=&quot;https://github.com/HCLonely/hexo-bilibili-bangumi/issues/134&quot;&gt;关于图片加载相关问题&lt;/a&gt;&lt;/p&gt;              &lt;/div&gt;            &lt;/details&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;安装依赖&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-bilibili-bangumi --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;更新依赖库&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-bilibili-bangumi --update --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;注入哔哩哔哩番剧&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，添加如下代码：&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;bangumi:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;vmid:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;321638084&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;生命不息，追番不止。&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;quote:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Where there is life, there is life.&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;show:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;loading:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/img/bangumi-loading.gif&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt; 配置说明：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;enable: 是否启用&lt;/li&gt;&lt;li&gt;vmid: 哔哩哔哩番剧页面的 vmid(uid), 如何获取？&lt;/li&gt;&lt;li&gt;title: 该页面的标题&lt;/li&gt;&lt;li&gt;quote: 写在页面开头的一段话，支持 html 语法&lt;/li&gt;&lt;li&gt;show: 初始显示页面：0: 想看 , 1: 在看 , 2: 看过，默认为 1&lt;/li&gt;&lt;li&gt;loading: 图片加载完成前的 loading 图片&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;执行Docs命令&lt;br&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;hexo new page bangumis&lt;/code&gt;。&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page bangumis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;找到 &lt;code&gt;BlogRoot/source/bangumis/index.md&lt;/code&gt; 这个文件，修改这个文件，添加 &lt;code&gt;type: &quot;bangumis&quot;&lt;/code&gt;。&lt;/p&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: bangumis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2020-12-14 14:43:39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &quot;bangumis&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;防止请求次数过多插件不再自动获取番剧数据，所以请根据自己的需要在&lt;code&gt;hexo generate&lt;/code&gt;或&lt;code&gt;hexo deploy&lt;/code&gt;之前使用&lt;code&gt;hexo bangumi -u&lt;/code&gt;命令更新番剧数据。&lt;br&gt;删除数据命令: &lt;code&gt;hexo bangumi -d&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;获取 uid&lt;br&gt;登录哔哩哔哩后前往 &lt;a href=&quot;https://space.bilibili.com/&quot;&gt;https://space.bilibili.com/xxx&lt;/a&gt;，网址最后的一串数字就是 uid。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;添加卡通人物（看板娘）&quot;&gt;&lt;a href=&quot;#添加卡通人物（看板娘）&quot; class=&quot;headerlink&quot; title=&quot;添加卡通人物（看板娘）&quot;&gt;&lt;/a&gt;添加卡通人物（看板娘）&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/05/629cbe6848d9a.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;npm install --save hexo-helper-live2d&lt;/code&gt;。&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save hexo-helper-live2d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输入以下命令，下载相应的模型， 替换成你想要的模型名称即可，更多模型选择&lt;a href=&quot;https://github.com/xiazeyu/live2d-widget-models&quot;&gt;请点击此处&lt;/a&gt;，各个模型的预览请访问&lt;a href=&quot;https://huaji8.top/post/live2d-plugin-2.0/&quot;&gt;原作者&lt;/a&gt;&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save live2d-widget-model-shizuku&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，添加如下代码：&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;live2d:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;scriptFrom:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 默认&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;tagMode:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;debug:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 调试, 是否在控制台输出日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;model:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;use:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;live2d-widget-model-shizuku&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#模型选择&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;display:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;position:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;right&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#模型位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;#模型宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;height:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;#模型高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;hOffset:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;vOffset:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;show:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;#是否在手机端显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;重新编译运行，即可看到效果。&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;添加全局吸底APlayer&quot;&gt;&lt;a href=&quot;#添加全局吸底APlayer&quot; class=&quot;headerlink&quot; title=&quot;添加全局吸底APlayer&quot;&gt;&lt;/a&gt;添加全局吸底APlayer&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;https://butterfly.js.org/posts/507c070f/&quot;&gt;Butterfly添加全局吸底Aplayer教程&lt;/a&gt;&lt;br&gt;此步骤适用于安装了&lt;code&gt;hexo-tag-aplayer&lt;/code&gt;插件的人&lt;/p&gt;
&lt;/blockquote&gt;
&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/886d62deceb24.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ol&gt;&lt;li&gt;&lt;p&gt;前往博客根目录，打开cmd命令窗口执行以下命令：&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i hexo-tag-aplayer --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;关闭&lt;code&gt;asset_inject&lt;/code&gt;&lt;br&gt;由于需要全局都插入 aplayer 和 meting 资源，为了防止插入重复的资源，需要把 asset_inject 设为&lt;code&gt;false&lt;/code&gt;。&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，配置以下内容：&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;aplayer:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;meting:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;asset_inject:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开启主题的aplayerInject&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，将&lt;code&gt;enable&lt;/code&gt;设为&lt;code&gt;true&lt;/code&gt;和&lt;code&gt;per_page&lt;/code&gt;设为&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Inject the css and script (aplayer/meting)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;aplayerInject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;per_page:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;插入Aplayer html&lt;br&gt;为了适配&lt;code&gt;hexo-tag-aplayer&lt;/code&gt;，主题内置的&lt;code&gt;Meting js&lt;/code&gt;仍为1.2版本，并非最新的2.x版本。&lt;br&gt;Aplayer html 例子（示例中没有显示歌词）：&lt;/p&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;aplayer no-destroy&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;7427714271&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-server&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;netease&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;playlist&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-fixed&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-mini&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-listFolded&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-order&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;random&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-lrctype&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-preload&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-autoplay&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;muted&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数解释如下表：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;option&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;default&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;description&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-id&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;require&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;song id / playlist id / album id / search keyword&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-server&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;require&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;music platform: netease, tencent, kugou, xiami, baidu&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-type&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;require&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;song, playlist, album, search, artist&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-fixed&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;false&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;enable fixed mode&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-mini&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;false&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;enable mini mode&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-autoplay&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;false&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;audio autoplay&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-theme&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;#2980b9&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;main color&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-loop&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;all&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;player loop play, values: ‘all’, ‘one’, ‘none’&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-order&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;list&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;player play order, values: ‘list’, ‘random’&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-preload&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;auto&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;values: ‘none’, ‘metadata’, ‘auto’&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-volume&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;0.7&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;default volume, notice that player will remember user setting, default volume will not work after user set volume themselves&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-mutex&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;true&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;prevent to play multiple player at the same time, pause other players when this player start play&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-lrctype&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;0&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;lyric type&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-listfolded&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;false&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;indicate whether list should folded at first&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-listmaxheight&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;340px&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;list max height&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;data-storagename&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;metingjs&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;localStorage key that store player setting&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;&lt;code&gt;require&lt;/code&gt;代表着这些参数是必须要使用的，其它的参数则可以根据自己需要配置。&lt;br&gt;配置全局吸底，&lt;code&gt;data-fixed&lt;/code&gt;和&lt;code&gt;data-mini&lt;/code&gt;也必须配置，配置为&lt;code&gt;true&lt;/code&gt;。&lt;br&gt;如果使用Pjax，则在class里需添加&lt;code&gt;no-destroy&lt;/code&gt;，这样防止切换页面时Aplayer被销毁。&lt;/p&gt;&lt;/div&gt;将以下代码插入到主题配置文件（_config.butterfly.yml）的 “inject.bottom” 中&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;bottom:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;class=&quot;aplayer&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;no&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;-destroy&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-id=&quot;7427714271&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-server=&quot;netease&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-type=&quot;playlist&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-fixed=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-mini=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-listFolded=&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-order=&quot;random&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-lrctype=&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-preload=&quot;none&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-autoplay=&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;muted&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;运行Hexo就可以看到网页左下角出现了Aplayer。最后，如果你想切换页面时，音乐不会中断。请把主题配置文件的 “pjax” 设为 “true” 。&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;pjax:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;exclude:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;UI 调整&lt;/p&gt;&lt;ul&gt;&lt;li&gt;向上调整&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#toggle-sidebar&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/26dde2aeaa502.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;修改主题配置文件`_config.butterfly.yml`，将代码添加到 “inject.head” 中。&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;style type=&quot;text/css&quot;&amp;gt;#toggle-sidebar {bottom: 80px}&amp;lt;/style&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;向右调整&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#toggle-sidebar&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/5ef1e1245fc5a.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;修改主题配置文件（_config.butterfly.yml），将代码添加到 “inject.head” 中。&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;style type=&quot;text/css&quot;&amp;gt;#toggle-sidebar {left:100px}&amp;lt;/style&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;添加贡献日历&quot;&gt;&lt;a href=&quot;#添加贡献日历&quot; class=&quot;headerlink&quot; title=&quot;添加贡献日历&quot;&gt;&lt;/a&gt;添加贡献日历&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/4c1e9d34afcb9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;我的版本可能比较旧，贡献日历已经更新迭代了，所以直接参此教程：&lt;a href=&quot;https://akilar.top/posts/1f9c68c9/&quot;&gt;Gitcalendar&lt;/a&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;主页冒泡特效&quot;&gt;&lt;a href=&quot;#主页冒泡特效&quot; class=&quot;headerlink&quot; title=&quot;主页冒泡特效&quot;&gt;&lt;/a&gt;主页冒泡特效&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/38a0bd6cef409.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/js&lt;/code&gt;目录下创建一个&lt;code&gt;chocolate.js&lt;/code&gt;文件。&lt;/p&gt;&lt;p&gt;具体位置，请看下图所示：&lt;/p&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/13410b8cd419d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;直接复制导入如下代码：&lt;/p&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @Author: tzy1997&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @Date: 2020-12-15 20:55:25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @LastEditors: tzy1997&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @LastEditTime: 2021-01-12 19:02:25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 气泡&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&#39;#page-header&#39;&lt;/span&gt;).circleMagic({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            radius: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            density: &lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: &lt;span class=&quot;string&quot;&gt;&#39;rgba(255,255,255,.4)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            clearOffset: &lt;span class=&quot;number&quot;&gt;0.99&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }! &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;p&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p.fn.circleMagic = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;t&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o, a, n, r, e = !&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i = [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                d = p.extend({ &lt;span class=&quot;attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;rgba(255,0,0,.5)&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;density&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;clearOffset&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt; }, t),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ e = !(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.scrollTop &amp;gt; a) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ o = l.clientWidth, a = l.clientHeight, l.height = a &lt;span class=&quot;string&quot;&gt;&quot;px&quot;&lt;/span&gt;, n.width = o, n.height = a }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;h&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; r.clearRect(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, o, a), i) i[t].draw();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                requestAnimationFrame(h)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;e&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ t.pos.x = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * o, t.pos.y = a &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random(), t.alpha = &lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * d.clearOffset, t.scale = &lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random(), t.speed = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random(), &lt;span class=&quot;string&quot;&gt;&quot;random&quot;&lt;/span&gt; === d.color ? t.color = &lt;span class=&quot;string&quot;&gt;&quot;rgba(&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()) &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()) &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()) &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random().toPrecision(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt; : t.color = d.color }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                t.pos = {}, e(), &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.draw = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ t.alpha &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; e(), t.pos.y -= t.speed, t.alpha -= &lt;span class=&quot;number&quot;&gt;5e-4&lt;/span&gt;, r.beginPath(), r.arc(t.pos.x, t.pos.y, t.scale * d.radius, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), r.fillStyle = t.color, r.fill(), r.closePath() }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }! &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                o = l.offsetWidth, a = l.offsetHeight,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        t.id = &lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;, t.style.top = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, t.style.zIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, t.style.position = &lt;span class=&quot;string&quot;&gt;&quot;absolute&quot;&lt;/span&gt;, l.appendChild(t), t.parentElement.style.overflow = &lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }(), (n = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;)).width = o, n.height = a, r = n.getContext(&lt;span class=&quot;string&quot;&gt;&quot;2d&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; t &amp;lt; o * d.density; t++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; e = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    i.push(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }(), &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;scroll&quot;&lt;/span&gt;, c, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;resize&quot;&lt;/span&gt;, s, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }(jQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 调用气泡方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bubble();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后，在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中，引入&lt;code&gt;jquery.min.js&lt;/code&gt;和&lt;code&gt;chocolate.js&lt;/code&gt;。&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# - &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;bottom:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;data-pjax&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://npm.elemecdn.com/tzy-blog/lib/js/theme/chocolate.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/05/629cc712293d1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;鼠标样式&quot;&gt;&lt;a href=&quot;#鼠标样式&quot; class=&quot;headerlink&quot; title=&quot;鼠标样式&quot;&gt;&lt;/a&gt;鼠标样式&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/17/6283c365d20dd.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;将以下代码复制到&lt;code&gt;custom.css&lt;/code&gt;即可。&lt;/p&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;cursor&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(https://bu.dusays.com/&lt;span class=&quot;number&quot;&gt;2022&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;6283&lt;/span&gt;c365d20dd.png), auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.hide-block&lt;/span&gt;&amp;gt;&lt;span class=&quot;selector-class&quot;&gt;.hide-button&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.open&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.hide-inline&lt;/span&gt;&amp;gt;&lt;span class=&quot;selector-class&quot;&gt;.hide-button&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.open&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;button&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;cursor&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(https://bu.dusays.com/&lt;span class=&quot;number&quot;&gt;2022&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;6283&lt;/span&gt;c376afcfc.png), auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;鼠标-字跟随掉落效果&quot;&gt;&lt;a href=&quot;#鼠标-字跟随掉落效果&quot; class=&quot;headerlink&quot; title=&quot;鼠标 * 字跟随掉落效果&quot;&gt;&lt;/a&gt;鼠标 * 字跟随掉落效果&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/f9fc72341622b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/js&lt;/code&gt;目录下创建一个&lt;code&gt;cursor.js&lt;/code&gt;文件。&lt;/p&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Fairy Dust Cursor.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * - 90&#39;s cursors collection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * -- https://github.com/tholman/90s-cursor-effects&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * -- http://codepen.io/tholman/full/jWmZxZ/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fairyDustCursor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; possibleColors = [&lt;span class=&quot;string&quot;&gt;&quot;#D61C59&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;#E7D84B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;#1B8798&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; width = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; height = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cursor = { &lt;span class=&quot;attr&quot;&gt;x&lt;/span&gt;: width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;y&lt;/span&gt;: width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; particles = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bindEvents();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Bind events that are needed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bindEvents&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mousemove&#39;&lt;/span&gt;, onMouseMove);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;touchmove&#39;&lt;/span&gt;, onTouchMove);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;touchstart&#39;&lt;/span&gt;, onTouchMove);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;resize&#39;&lt;/span&gt;, onWindowResize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onWindowResize&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTouchMove&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.touches.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; e.touches.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                addParticle(e.touches[i].clientX, e.touches[i].clientY, possibleColors[&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * possibleColors.length)]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onMouseMove&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cursor.x = e.clientX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cursor.y = e.clientY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addParticle(cursor.x, cursor.y, possibleColors[&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * possibleColors.length)]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addParticle&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x, y, color&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; particle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Particle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        particle.init(x, y, color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        particles.push(particle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;updateParticles&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Updated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; particles.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            particles[i].update();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Remove dead particles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = particles.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (particles[i].lifeSpan &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                particles[i].die();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                particles.splice(i, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loop&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        requestAnimationFrame(loop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        updateParticles();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     * Particles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Particle&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.character = &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.lifeSpan = &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.initialStyles = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;position&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;fixed&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;top&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//必须加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;display&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;block&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;pointerEvents&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;z-index&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;10000000&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;fontSize&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;20px&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;will-change&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;transform&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Init, and set properties&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.init = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;x, y, color&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.velocity = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                x: (&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() &amp;lt; &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt; ? -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * (&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                y: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.position = { &lt;span class=&quot;attr&quot;&gt;x&lt;/span&gt;: x - &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;y&lt;/span&gt;: y - &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.initialStyles.color = color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.element = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;span&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.element.innerHTML = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.character;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            applyProperties(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.element, &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.initialStyles);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.update();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.update = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.position.x += &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.velocity.x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.position.y += &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.velocity.y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.lifeSpan--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.element.style.transform = &lt;span class=&quot;string&quot;&gt;&quot;translate3d(&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.position.x &lt;span class=&quot;string&quot;&gt;&quot;px,&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.position.y &lt;span class=&quot;string&quot;&gt;&quot;px,0) scale(&quot;&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.lifeSpan / &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.die = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.element.parentNode.removeChild(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Applies css `properties` to an element.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;applyProperties&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;target, properties&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; properties) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            target.style[key] = properties[key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后，在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中，引入&lt;code&gt;cursor.js&lt;/code&gt;文件。&lt;/p&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/05/629ccb16bb10b.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;滚动条&quot;&gt;&lt;a href=&quot;#滚动条&quot; class=&quot;headerlink&quot; title=&quot;滚动条&quot;&gt;&lt;/a&gt;滚动条&lt;/h3&gt;&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;将以下代码复制到&lt;code&gt;custom.css&lt;/code&gt;即可。&lt;/p&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar-track&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2em&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* background-color: rgba(73, 177, 245, .2); */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar-thumb&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgb&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; / .&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-image&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;-webkit-linear-gradient&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;45deg&lt;/span&gt;, rgba(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;25%&lt;/span&gt;, transparent &lt;span class=&quot;number&quot;&gt;25%&lt;/span&gt;, transparent &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;75%&lt;/span&gt;, transparent &lt;span class=&quot;number&quot;&gt;75%&lt;/span&gt;, transparent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2em&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-scrollbar-corner&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: transparent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;手机侧边栏默认不展开&quot;&gt;&lt;a href=&quot;#手机侧边栏默认不展开&quot; class=&quot;headerlink&quot; title=&quot;手机侧边栏默认不展开&quot;&gt;&lt;/a&gt;手机侧边栏默认不展开&lt;/h3&gt;&lt;p&gt;若主题版本大于 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.0.0&quot;&gt;v4.0.0&lt;/a&gt;，可直接在子目录里添加 &lt;code&gt;hide&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;menu:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Home:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-home&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Archives:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/archives/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-archive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Tags:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/tags/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Categories:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/categories/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-folder-open&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;List||fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-list||hide:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;Music:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/music/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-music&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;Movie:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/movies/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-video&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Link:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/link/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;About:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/about/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-heart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.0.0&quot;&gt;v3.7.1&lt;/a&gt; 版本中直接默认子目录是展开的，如果你想要隐藏，按下面步骤操作即可。&lt;/p&gt;
&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/5bf3d54f04dff.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/js&lt;/code&gt;文件下新建 js 文件，并命名为 &lt;code&gt;custom.js&lt;/code&gt;(命名按照自己喜好去命名，只需在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中引入对应的&lt;code&gt;js&lt;/code&gt;文件即可)，将以下代码复制到新建的&lt;code&gt;custom.js&lt;/code&gt;中。&lt;/p&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 手机侧边栏默认不展开 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mobile_sidebar_menus = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;sidebar-menus&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mobile_sidebar_menus) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; menus_item_child = mobile_sidebar_menus.getElementsByClassName(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;menus_item_child&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; menus_expand = mobile_sidebar_menus.getElementsByClassName(&lt;span class=&quot;string&quot;&gt;&quot;expand&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; menus_item_child.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        menus_item_child[i].style.display = &lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;图库&quot;&gt;&lt;a href=&quot;#图库&quot; class=&quot;headerlink&quot; title=&quot;图库&quot;&gt;&lt;/a&gt;图库&lt;/h3&gt;&lt;p&gt;图库页面只是普通的页面，你只需要hexo new page xxxxx 创建你的页面就行。&lt;/p&gt;
&lt;p&gt;然后使用标签外挂 &lt;a href=&quot;https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB&quot;&gt;galleryGroup&lt;/a&gt;，具体用法请查看对应的内容。&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;gallery-group-main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{% galleryGroup &#39;ACG&#39; &#39;那些二次元的故事&#39; &#39;/gallery/ACG&#39; https://bu.dusays.com/2022/11/26/638228a86935a.webp %}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{% galleryGroup &#39;岳阳&#39; &#39;2017年5月岳阳&#39; &#39;/gallery/YY&#39; https://bu.dusays.com/2022/11/27/63831b681e9f8.jpg %}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{% galleryGroup &#39;OH MY GIRL&#39; &#39;关于OH MY GIRL的图片&#39; &#39;/Gallery/ohmygirl&#39; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;gallery-group-main&quot;&gt;

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/26/638228a86935a.webp&quot; alt=&quot;Group Image Gallery&quot;&gt;
  &lt;figcaption&gt;
  &lt;div class=&quot;gallery-group-name&quot;&gt;ACG&lt;/div&gt;
  &lt;p&gt;那些二次元的故事&lt;/p&gt;
  &lt;a href=&quot;/@3.7.1/gallery/ACG&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;
  &lt;/figcaption&gt;
  &lt;/figure&gt;
  

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/27/63831b681e9f8.jpg&quot; alt=&quot;Group Image Gallery&quot;&gt;
  &lt;figcaption&gt;
  &lt;div class=&quot;gallery-group-name&quot;&gt;岳阳&lt;/div&gt;
  &lt;p&gt;2017年5月岳阳&lt;/p&gt;
  &lt;a href=&quot;/@3.7.1/gallery/YY&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;
  &lt;/figcaption&gt;
  &lt;/figure&gt;
  

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg&quot; alt=&quot;Group Image Gallery&quot;&gt;
  &lt;figcaption&gt;
  &lt;div class=&quot;gallery-group-name&quot;&gt;OH MY GIRL&lt;/div&gt;
  &lt;p&gt;关于OH MY GIRL的图片&lt;/p&gt;
  &lt;a href=&quot;/@3.7.1/Gallery/ohmygirl&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;
  &lt;/figcaption&gt;
  &lt;/figure&gt;
  
&lt;/div&gt;

&lt;h4 id=&quot;子页面&quot;&gt;&lt;a href=&quot;#子页面&quot; class=&quot;headerlink&quot; title=&quot;子页面&quot;&gt;&lt;/a&gt;子页面&lt;/h4&gt;&lt;p&gt;子页面也是普通的页面，你只需要hexo new page xxxxx 创建你的页面就行。&lt;/p&gt;
&lt;p&gt;然后使用标签外挂 &lt;a href=&quot;https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A&quot;&gt;gallery&lt;/a&gt;，具体用法请查看对应的内容。&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{% gallery %}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{% endgallery %}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;

&lt;div class=&quot;note pink icon flat&quot;&gt;&lt;i class=&quot;note-icon fas fa-fan&quot;&gt;&lt;/i&gt;&lt;p&gt;如果你想要使用&lt;code&gt;/photo/ohmygirl&lt;/code&gt;这样的链接显示你的图片内容&lt;/p&gt;
&lt;p&gt;你可以把创建好的&lt;code&gt;ohmygirl&lt;/code&gt;整个文件夹移到&lt;code&gt;photo&lt;/code&gt;文件夹里去&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;Valine评论邮件回复提醒&quot;&gt;&lt;a href=&quot;#Valine评论邮件回复提醒&quot; class=&quot;headerlink&quot; title=&quot;Valine评论邮件回复提醒&quot;&gt;&lt;/a&gt;Valine评论邮件回复提醒&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;由于 Valine 的国际版共享域名将于 2022 年 8 月 1 日起不再向中国大陆的最终用户提供服务，国际版共享域名仅服务于海外用户。本站已弃用 Valine ，改为 Twikoo。如果你更喜欢 Valine 的风格，你可以使用它的国区版。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;参考教程&quot;&gt;&lt;a href=&quot;#参考教程&quot; class=&quot;headerlink&quot; title=&quot;参考教程&quot;&gt;&lt;/a&gt;参考教程&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://www.zhaojun.im/hexo-valine-admin/&quot;&gt;Hexo 优化 — Valine 扩展之邮件通知&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.hclonely.com/posts/409d3090/&quot;&gt;Valine 添加验证码、博主标签及评论微信、QQ 通知&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;我的表情数据包&quot;&gt;&lt;a href=&quot;#我的表情数据包&quot; class=&quot;headerlink&quot; title=&quot;我的表情数据包&quot;&gt;&lt;/a&gt;我的表情数据包&lt;/h4&gt;&lt;p&gt;这里放上我的valine表情数据，展示如下图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/8cad934e780d0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下载请点击下面按钮：&lt;/p&gt;
&lt;div class=&quot;btns rounded grid5&quot;&gt;
            &lt;a class=&quot;button&quot; href=&quot;https://wwd.lanzoul.com/iMvtz05xlche&quot; title=&quot;下载表情文件&quot;&gt;&lt;i class=&quot;fas fa-download&quot;&gt;&lt;/i&gt;下载表情文件&lt;/a&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;改写-menhera-表情样式&quot;&gt;&lt;a href=&quot;#改写-menhera-表情样式&quot; class=&quot;headerlink&quot; title=&quot;改写 menhera 表情样式&quot;&gt;&lt;/a&gt;改写 menhera 表情样式&lt;/h4&gt;&lt;p&gt;去除了dark模式下评论者头像的 border 和 padding（我是默认dark，如果不喜欢，则将css中的第一段去掉）。&lt;/p&gt;
&lt;p&gt;因为 valine的默认宽度是 25px ， 对于 menhera-chan 表情根本无法看清，所以将它pc端评论后的表情加载设置成300px，设屏宽小于768px的，让它继承继承父元素的100%宽 - 30px ，30px是为了与右侧有一段细微间隔，下图可以看到手机端的时候，表情和盒子最右侧是有一定距离的。&lt;/p&gt;
&lt;p&gt;对于浏览选择 menhera-chan 表情时，宽度太小，看不清图片，所以这里调整为设备宽的 21%-22% 。QQ和B站表情保持不变，只对 menhera-chan 表情做出改善。&lt;/p&gt;
&lt;p&gt;将以下代码复制到&lt;code&gt;custom.css&lt;/code&gt;即可。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* valine 评论 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 去除了dark模式下头像border和padding */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-theme=&lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt;]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vcards&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vcard&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vimg&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-theme=&lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt;]&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#post&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vcontent&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.emoji&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemoji&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;vertical-align&lt;/span&gt;: text-bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vwrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemojis&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;260px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vwrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemojis&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[title|=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;22%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vwrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemojis&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt|=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vcontent&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.emoji&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt|=menhera]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vcontent&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemoji&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt|=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* vertical-align: middle; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: block &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1200px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vwrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemojis&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[title|=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;768px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vcontent&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.emoji&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt|=menhera]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vcontent&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemoji&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[alt|=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;) &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;576px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vwrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemojis&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vwrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemojis&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[title|=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.v&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-class=v]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vwrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.vemojis&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[title|=menhera]&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;21%&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/08/26/84d3e2911b8ec.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/08/26/24353a0e2da4f.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/987c04fdd05f6.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/396f32b981353.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/72321b1f63e2c.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/03/05/564b64b674298.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;添加-博主-小伙伴-访客-标签&quot;&gt;&lt;a href=&quot;#添加-博主-小伙伴-访客-标签&quot; class=&quot;headerlink&quot; title=&quot;添加[博主,小伙伴,访客]标签&quot;&gt;&lt;/a&gt;添加[博主,小伙伴,访客]标签&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug&lt;/code&gt;,按指示添加如下字段。&lt;/p&gt;
&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function initValine () {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const valine = new Valine(Object.assign({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        el: &#39;#vcomment&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        appId: &#39;#{theme.valine.appId}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        appKey: &#39;#{theme.valine.appKey}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        placeholder: &#39;#{theme.valine.placeholder}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        avatar: &#39;#{theme.valine.avatar}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        meta: &#39;#{theme.valine.guest_info }&#39;.split(&#39;,&#39;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pageSize: &#39;#{theme.valine.pageSize}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lang: &#39;#{theme.valine.lang}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        recordIP: #{theme.valine.recordIP},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        serverURLs: &#39;#{theme.valine.serverURLs}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        emojiCDN: &#39;#{theme.valine.emojiCDN}&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        emojiMaps: !{emojiMaps},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        enableQQ: #{theme.valine.enableQQ},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path: window.location.pathname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        requiredFields: [!{theme.valine.requiredFields ? JSON.stringify(theme.valine.requiredFields).split(&#39;,&#39;) : &#39;&#39;}],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      master: &#39;#{theme.valine.master}&#39;.split(&#39;,&#39;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      friends: &#39;#{theme.valine.friends}&#39;.split(&#39;,&#39;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      tagMeta: &#39;#{theme.valine.tagMeta || &quot;博主,小伙伴,访客&quot;}&#39;.split(&#39;,&#39;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      metaPlaceholder: !{JSON.stringify(theme.valine.metaPlaceholder || {})},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        visitor: #{theme.valine.visitor}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, !{JSON.stringify(theme.valine.option)}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/04/29/09fee55119095.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;的&lt;code&gt;valine&lt;/code&gt;属性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;valine配置项添加 md5加密的博主邮箱，小伙伴邮箱&lt;/p&gt;
&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# valine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# https://valine.js.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;valine:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  appId:  # leancloud application app id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  appKey:  # leancloud application app key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pageSize: 10 # comment list page size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  avatar: monsterid # gravatar style https://valine.js.org/#/avatar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  lang: zh-CN # i18n: zh-CN/zh-TW/en/ja&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  placeholder:  # valine comment input placeholder (like: Please leave your footprints)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  guest_info: nick,mail,link # valine comment header info (nick/mail/link)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  recordIP: false # Record reviewer IP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  serverURLs:  # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bg: # valine background&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  emojiCDN:  # emoji CDN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enableQQ: true # enable the Nickname box to automatically get QQ Nickname and QQ Avatar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  requiredFields: nick,mail # required fields (nick/mail)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;master: # md5加密后的博主邮箱&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - d4e7????????????44a14e9a94  #可添加多个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;friends: # md5加密后的小伙伴邮箱&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - 5c?????????????e268ad3819c #可添加多个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - 7c?????????????e2????3919c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tagMeta: &#39;博主,小伙伴,访客&#39; # 标签要显示的文字,默认&#39;博主,小伙伴,访客&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;metaPlaceholder:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  nick: 昵称/QQ号(必填)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mail: 邮箱(必填)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  link: 网址(https://)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/04/27/15d1c1b458da1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;的CDN配置项添加如下内容。将&lt;code&gt;Valine.min.js&lt;/code&gt;替换成魔改版本。&lt;/p&gt;
&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    CDN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      # comments&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      gitalk: https://fastly.jsdelivr.net/npm/gitalk@latest/dist/gitalk.min.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      gitalk_css: https://fastly.jsdelivr.net/npm/gitalk/dist/gitalk.min.css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;deletion&quot;&gt;-     valine: https://fastly.jsdelivr.net/npm/valine/dist/Valine.min.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    valine: https://fastly.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/valine_f/valine.min.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;valine获取评论失败&quot;&gt;&lt;a href=&quot;#valine获取评论失败&quot; class=&quot;headerlink&quot; title=&quot;valine获取评论失败&quot;&gt;&lt;/a&gt;valine获取评论失败&lt;/h4&gt;&lt;p&gt;如下图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/1d3723a5bf858.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里并没有加载和渲染 valine 评论数据 ， 但在 LeanCloud 数据存储中 是存在评论数据的。&lt;/p&gt;
&lt;div class=&quot;note red icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-bullhorn card-announcement-animation&quot;&gt;&lt;/i&gt;&lt;p&gt;原因 ：LeanCloud 国际版通用域名失效&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;打开控制台发现&lt;code&gt;https://us.avoscloud.com/1.1/classes/Comment?xxxxx&lt;/code&gt;已经请求失败（net::ERR_NAME_NOT_RESOLVED），域名也无法ping通。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/1f20328863e46.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解决办法：&lt;/p&gt;
&lt;p&gt;将 Valine 指定 自定义服务器URL。在主题配置里的 Valine 的 serverURLs 填入&lt;code&gt;https://xxxxxxxx.api.lncldglobal.com&lt;/code&gt;。自定义服务器的URL需要到 LeanCloud后台 查看。打开后台之后进入 Settings - App Keys ，Request domain 里面的&lt;code&gt;xxxxxxxx.api.lncldglobal.com&lt;/code&gt;就是你需要指定的服务器URL。xxxxxxxx 就是 AppID的前8位字符。&lt;/p&gt;
&lt;p&gt;如下图:&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/7a37bcaf7b976.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;经 postman 测试 ，&lt;code&gt;https://xxxxxxxx.api.lncldglobal.com/1.1/classes/Comment?x=x&amp;amp;xx=xx&lt;/code&gt;该接口会正常返回评论数据。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/a3545407baae3.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;关于valine评论，这里会抽空写一篇详细的教程，敬请期待。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;首页分类磁铁&quot;&gt;&lt;a href=&quot;#首页分类磁铁&quot; class=&quot;headerlink&quot; title=&quot;首页分类磁铁&quot;&gt;&lt;/a&gt;首页分类磁铁&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;原教程：&lt;a href=&quot;https://akilar.top/posts/a9131002/&quot;&gt;Categories Magnet&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/08/26/5f6c8366b5a94.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details red=&quot;&quot;&gt;&lt;summary&gt; 插件版教程（推荐👍） &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ol&gt;&lt;li&gt;安装依赖，前往博客根目录，打开cmd命令窗口执行如下命令：&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-butterfly-categories-card --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;添加配置信息，在站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;或者主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中添加&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;categoryBar:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 开关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;priority:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#过滤器优先权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable_page:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 应用页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;layout:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 挂载容器类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;recent-posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;index:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;column:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# odd：3列 | even：4列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;row:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#显示行数，默认两行，超过行数切换为滚动显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;message:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Ubuntu指南&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://assets.akilar.top/image/cover1.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;玩转Win10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://assets.akilar.top/image/cover2.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;长篇小说连载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://assets.akilar.top/image/cover3.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;个人日记&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://assets.akilar.top/image/cover4.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;诗词歌赋&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://assets.akilar.top/image/cover5.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;杂谈教程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://assets.akilar.top/image/cover6.webp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;custom_css:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://npm.elemecdn.com/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;参数意义&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;参数&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;备选值/类型&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;释义&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;priority&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;number&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】过滤器优先级，数值越小，执行越早，默认为10，选填&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;enable&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;true/false&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【必选】控制开关&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;enable_page&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;path/all&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填’all’，默认为’/‘&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;layout.type&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;id/class&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】挂载容器类型，填写id或class，不填则默认为id&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;layout.name&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;text&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【必选】挂载容器名称&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;layout.index&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;0和正整数&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;column&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;odd/even&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】显示列数，考虑到比例问题，只提供3列和4列，odd为3列， even为4列&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;row&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;number&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】显示行数，默认两行，超过行数切换为滚动显示&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;message.descr&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;text&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;分类描述,需要和你自己的文章分类一一对应。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;message.cover&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;url&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;分类背景,需要和你自己的文章分类一一对应。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;custom_css&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;url&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】自定义样式，会替换默认的css链接，可以下载文档给出的cdn链接后自主修改&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;
&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 旧版教程（不推荐） &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ol&gt;&lt;li&gt;修改&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/index.pug&lt;/code&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;extends includes/layout.pug&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;block content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  include ./includes/mixins/post-ui.pug&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #recent-posts.recent-posts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if theme.categoryBar.enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .recent-post-item(style=&#39;height:auto;width:100%;padding:0px;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      #categoryBar!= list_categories(site.categories,{class: &#39;categoryBar&#39;,depth: 1})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +postUI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    include includes/pagination.pug&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;新建&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css/_layout/categoryBar.styl&lt;/code&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if hexo-config(&#39;categoryBar.enable&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-id&quot;&gt;#categoryBar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-tag&quot;&gt;width&lt;/span&gt; 100%!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;margin&lt;/span&gt; 5&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 5&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 0 5&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;padding&lt;/span&gt; 0!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list-item&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;font-weight&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;bold&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;inline-block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;height&lt;/span&gt; 180&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;margin&lt;/span&gt; 5&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; .5% 0 .5%!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background-image&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;linear-gradient&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.4) 25%, &lt;span class=&quot;selector-tag&quot;&gt;rgba&lt;/span&gt;(16, 16, 16, 0) 100%)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;border-radius&lt;/span&gt; 10&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;padding&lt;/span&gt; 25&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 0 25&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 25&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;box-shadow&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;rgba&lt;/span&gt;(50, 50, 50, 0.3)  50&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 50&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 50&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 50&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;inset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;overflow&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;hidden&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background-size&lt;/span&gt; 100%!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background-position&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;center&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;background-size&lt;/span&gt; 110%!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;box-shadow&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;inset&lt;/span&gt; 500&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 50&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 50&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 50&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;rgba&lt;/span&gt;(50,50,50, 0.6)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;amp;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list-count&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;selector-tag&quot;&gt;transition&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;all&lt;/span&gt; .5&lt;span class=&quot;selector-tag&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;selector-tag&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;translate&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;-100&lt;/span&gt;%, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list-link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;white&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;font-size&lt;/span&gt; 20&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content &#39;|&#39;!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;white&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;font-size&lt;/span&gt; 20&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;&lt;span class=&quot;selector-pseudo&quot;&gt;:after&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content &#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;relative&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;width&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;bottom&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;height&lt;/span&gt; 3&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;border-radius&lt;/span&gt; 3&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;background-color&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;white&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;&lt;span class=&quot;selector-pseudo&quot;&gt;:after&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;selector-tag&quot;&gt;width&lt;/span&gt; 90%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;selector-tag&quot;&gt;left&lt;/span&gt; 1%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;selector-tag&quot;&gt;transition&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;all&lt;/span&gt; 0.5&lt;span class=&quot;selector-tag&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list-count&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;block&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;white&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;font-size&lt;/span&gt; 20&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content &#39;\f02d&#39;!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;padding-right&lt;/span&gt; 15&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;@extend&lt;/span&gt; .fontawesomeIcon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;::after&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        padding &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display block!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color white!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        font-size &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position relative&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        right -&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  covers = hexo-config(&lt;span class=&quot;string&quot;&gt;&#39;categoryBar.cover&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  for cover,i in covers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    li.&lt;span class=&quot;attribute&quot;&gt;categoryBar-list-item:&lt;/span&gt;nth-child({&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;+1})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;unquote&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;cover&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  descrs = hexo-config(&#39;categoryBar.descr&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-tag&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;descr&lt;/span&gt;,&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;descrs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    li.categoryBar-list-item:nth-child({i+1})&amp;gt;span::after&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;descr&lt;/span&gt;!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if hexo-config(&#39;categoryBar.column&#39;) == &#39;odd&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list-item&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;width&lt;/span&gt; 32.3%!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  else if hexo-config(&#39;categoryBar.column&#39;) == &#39;even&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list-item&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;width&lt;/span&gt; 24%!&lt;span class=&quot;selector-tag&quot;&gt;important&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;650px&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;amp;.categoryBar-list-item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width &lt;span class=&quot;number&quot;&gt;48%&lt;/span&gt;!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height &lt;span class=&quot;number&quot;&gt;150px&lt;/span&gt;!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1%&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1%&lt;/span&gt;!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $caterow =  hexo-config(&lt;span class=&quot;string&quot;&gt;&#39;categoryBar.row&#39;&lt;/span&gt;)?hexo-config(&lt;span class=&quot;string&quot;&gt;&#39;categoryBar.row&#39;&lt;/span&gt;):&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .categoryBar-list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    max-height &lt;span class=&quot;number&quot;&gt;190px&lt;/span&gt; * $caterow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    overflow auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;::-webkit-scrollbar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;!important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  @media screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;650px&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .categoryBar-list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      max-height &lt;span class=&quot;number&quot;&gt;160px&lt;/span&gt; * $caterow&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中添加配置项：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;categoryBar:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;column:&lt;/span&gt;  &lt;span class=&quot;string&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 显示列数,odd：3列 | even：4列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;row:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#显示行数，默认两行，超过行数切换为滚动显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Good&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;things&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;share&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Back&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;talk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;personal&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;diary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Front&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;serialization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Butterfly&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;theme&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Other&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;items&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;url(&#39;https://fastly.jsdelivr.net/npm/akilar-candyassets/image/cover1.webp&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;#abcdef&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# HEX格式色值需要用&#39;&#39;包裹，不然会被识别成注释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rgba(45,67,89,0.7)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;linear-gradient(rgba(0,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;%,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rgba(200,16&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;%)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;url(&#39;https://fastly.jsdelivr.net/npm/akilar-candyassets/image/cover5.webp&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;url(&#39;https://fastly.jsdelivr.net/npm/akilar-candyassets/image/cover6.webp&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;侧边栏电子时钟&quot;&gt;&lt;a href=&quot;#侧边栏电子时钟&quot; class=&quot;headerlink&quot; title=&quot;侧边栏电子时钟&quot;&gt;&lt;/a&gt;侧边栏电子时钟&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;tabs&quot; id=&quot;text-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#text--1&quot;&gt;新版效果&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#text--2&quot;&gt;旧版效果&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;text--1&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/12/636fa453ebfa1.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;text--2&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/08/26/84a75c812010f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details red=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 （新版，推荐👍） &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;✨可参考教程✨：&lt;a href=&quot;https://anzhiy.cn/posts/fc18.html&quot;&gt;给butterfly添加侧边栏电子钟&lt;/a&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果跑过下面旧版的教程，前往博客根目录，卸载原版电子钟插件，打开cmd命令窗口执行如下命令：&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm uninstall hexo-butterfly-clock&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;安装新的插件，前往博客根目录，打开cmd命令窗口执行如下命令：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-butterfly-clock-anzhiyu --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;在站点配置文件_config.yml 或 主题配置文件_config.butterfly.yml 中添加配置信息&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;electric_clock:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 开关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;priority:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#过滤器优先权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable_page:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 应用页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;exclude:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# - /posts/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# - /about/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;layout:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 挂载容器类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;sticky_layout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;index:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;loading:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/loading.gif&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#加载动画自定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;clock_css:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.css&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;clock_js:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;ip_api:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 和风天气key 默认是 b16a1fa0e63c46a4b8f28abfb06ae3fe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;qweather_key:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 你的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 高得地图web服务key 默认为 e2b04289e870b005374ee030148d64fd&amp;amp;s=rsv3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;gaud_map_key:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 你的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;default_rectangle:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 开启后将一直显示rectangle位置的天气，否则将获取访问者的地理位置与天气&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;rectangle:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;112.982279&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,28.19409&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 获取访问者位置失败时会显示该位置的天气，同时该位置为开启default_rectangle后的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;具体参数含义&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 点击查看具体参数 &lt;/summary&gt;           &lt;div class=&quot;content&quot;&gt;           &lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;参数&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;备选值/类型&lt;/th&gt;&lt;th align=&quot;center&quot;&gt;释义&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;priority&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;number&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】过滤器优先级，数值越小，执行越早，默认为 10，选填&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;enable&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;true/false&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【必选】控制开关&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;enable_page&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;path/all&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填’all’，默认为 all&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;exclude&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;path&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】填写想要屏蔽的页面，可以多个。写法见示例。原理是将屏蔽项的内容逐个放到当前路径去匹配，若当前路径包含任一屏蔽项，则不会挂载。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;layout.type&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;id/class&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】挂载容器类型，填写 id 或 class，不填则默认为 id&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;layout.name&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;text&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【必选】挂载容器名称&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;layout.index&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;0 和正整数&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】前提是 layout.type 为 class，因为同一页面可能有多个 class，此项用来确认究竟排在第几个顺位&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;loading&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;URL&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】电子钟加载动画的图片&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;clock_css&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;URL&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】电子钟样式 CDN 资源&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;clock_js&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;URL&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】电子钟执行脚本 CDN 资源&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;ip_api&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;URL&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】获取时钟 IP 的 API&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;qweather_key&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;text&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】和风天气 key&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;gaud_map_key&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;text&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】高得地图 web 服务 key&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;default_rectangle&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;text&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】开启后将一直显示 rectangle 位置的天气，否则将获取访问者的地理位置与天气&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;center&quot;&gt;rectangle&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;text&lt;/td&gt;&lt;td align=&quot;center&quot;&gt;【可选】获取访问者位置失败时会显示该位置的天气，同时该位置为开启 default_rectangle 后的位置&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;           &lt;/div&gt;         &lt;/details&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;note red icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-bullhorn&quot;&gt;&lt;/i&gt;&lt;p&gt;【qweather_key】和【gaud_map_key】建议自己申请。&lt;/p&gt;&lt;/div&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; qweather_key 申请流程 &lt;/summary&gt;              &lt;div class=&quot;content&quot;&gt;              &lt;ol&gt;&lt;li&gt; &lt;a href=&quot;https://id.qweather.com/#/login&quot;&gt;qweather_key 传送门&lt;/a&gt;&lt;/li&gt;&lt;li&gt;登录后进入控制台(可能要绑定邮箱和手机)&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/12/636fa9d74658e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;创建项目，项目名称(名字随意)、勾选【免费订阅】、适用平台【 Web API】、KEY的名称（随意填），最后点击【创建】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/12/636fad5a00726.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;可在项目管理中，到对应的【key】&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/12/636fb12960217.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;              &lt;/div&gt;            &lt;/details&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; gaud_map_key 申请流程 &lt;/summary&gt;              &lt;div class=&quot;content&quot;&gt;              &lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://lbs.amap.com/&quot;&gt;gaud_map_key 传送门&lt;/a&gt;&lt;/li&gt;&lt;li&gt;登录后完成一些认证（个人开发），进入控制台&lt;/li&gt;&lt;li&gt;创建应用，应用名称随意，类型选其他&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/12/636fae8a47c02.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;点击【添加】，【key名称】随便填，【服务平台】选择 Web服务，点击提交，就得到【key】了&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/12/636faf588e615.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/12/636faf7daca3d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;              &lt;/div&gt;            &lt;/details&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤（旧版，不建议） &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;✨参考教程✨: &lt;a href=&quot;https://akilar.top/posts/4e39cf4a/&quot;&gt;Sidebar Card Clock&lt;/a&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;安装依赖，前往博客根目录，打开cmd命令窗口执行如下命令：&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-butterfly-clock --save &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;在站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;添加配置项：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# electric_clock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;electric_clock:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 开关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;priority:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#过滤器优先权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable_page:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 应用页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;exclude:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# - /posts/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# - /about/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;layout:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 挂载容器类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;sticky_layout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;index:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;loading:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://fastly.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/theme_f/loading.gif&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#加载动画自定义 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;更换字体&quot;&gt;&lt;a href=&quot;#更换字体&quot; class=&quot;headerlink&quot; title=&quot;更换字体&quot;&gt;&lt;/a&gt;更换字体&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;添加下面这段css即可。&lt;/p&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@font-face&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;tzy&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 字体名自定义即可 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* src: url(&#39;https://cdn.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/font/ZhuZiAWan.woff2&#39;); */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;https://npm.elemecdn.com/ethan4116-blog/lib/font/ZhuZiAWan.ttf&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 字体文件路径 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-display&lt;/span&gt;: swap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.gitcalendar&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: tzy &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;局部css优化&quot;&gt;&lt;a href=&quot;#局部css优化&quot; class=&quot;headerlink&quot; title=&quot;局部css优化&quot;&gt;&lt;/a&gt;局部css优化&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 查看代码 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.categoryBar-list&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;max-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.clock-row&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-overflow&lt;/span&gt;: ellipsis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*3s为加载动画的时间，1为加载动画的次数，ease-in-out为动画效果*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#page-header&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#web_bg&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-animation&lt;/span&gt;: imgblur &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ease-in-out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;animation&lt;/span&gt;: imgblur &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ease-in-out;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@keyframes&lt;/span&gt; imgblur {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    0% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    100% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*适配使用-webkit内核的浏览器 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@-webkit-keyframes&lt;/span&gt; imgblur {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    0% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    100% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.table-wrap&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;6rem&lt;/span&gt; auto .&lt;span class=&quot;number&quot;&gt;1rem&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 标签外挂 网站卡片 start */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.site-card-group&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto .&lt;span class=&quot;number&quot;&gt;1rem&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.site-card-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-theme=&lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt;]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.site-card-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.site-card&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.title&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#f0f0f0&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-attr&quot;&gt;[data-theme=&lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt;]&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.site-card-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.site-card&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.desc&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, .&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;) &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.site-card-group&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.info&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.desc&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 代码块颜色 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.highlight&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.addition&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#00bf03&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;禁止右键及F12等事件&quot;&gt;&lt;a href=&quot;#禁止右键及F12等事件&quot; class=&quot;headerlink&quot; title=&quot;禁止右键及F12等事件&quot;&gt;&lt;/a&gt;禁止右键及F12等事件&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/e9a2228cf4291.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details red=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 （新版，推荐👍） &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;&lt;del&gt;旧版教程（已弃用）&lt;/del&gt;，对于高版本浏览器，可以先打开控制台再进入站点（亲测 Google Chrome v100），因此本站已弃用&lt;code&gt;forbidden_control()&lt;/code&gt;，可直接删除。引入的 &lt;code&gt;function.min.css&lt;/code&gt; 也可以删除。&lt;/p&gt;&lt;p&gt;下面开始新的教程，如果你不需要 &lt;del&gt;禁用控制台&lt;/del&gt; 以及 &lt;del&gt;禁用一些特殊 keyCode 事件&lt;/del&gt; ，可直接忽略。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;修改【BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/layout.pug】，根据图中位置添加以下 pug 代码（跟 &lt;code&gt;head&lt;/code&gt;、&lt;code&gt;body&lt;/code&gt;同级）。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/10/636d109016294.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;script.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ((function() {var callbacks = [],timeLimit = 50,open = false;setInterval(loop, 1);return {addListener: function(fn) {callbacks.push(fn);},cancleListenr: function(fn) {callbacks = callbacks.filter(function(v) {return v !== fn;});}}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  function loop() {var startTime = new Date();debugger;if (new Date() - startTime &amp;gt; timeLimit) {if (!open) {callbacks.forEach(function(fn) {fn.call(null);});}open = true;window.stop();alert(&#39;你真坏，请关闭控制台！&#39;);document.body.innerHTML = &quot;&quot;;} else {open = false;}}})()).addListener(function() {window.location.reload();});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  function toDevtools(){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let num = 0; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let devtools = new Date();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    devtools.toString = function() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (num &amp;gt; 1) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          alert(&#39;你真坏，请关闭控制台！&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          window.location.href = &quot;about:blank&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          blast();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&#39;&#39;, devtools);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  toDevtools();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;将以下代码复制到自定义的&lt;code&gt;custom.js&lt;/code&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.onkeydown = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt; == e.keyCode || (e.ctrlKey &amp;amp;&amp;amp; e.shiftKey &amp;amp;&amp;amp; (&lt;span class=&quot;number&quot;&gt;74&lt;/span&gt; === e.keyCode || &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt; === e.keyCode || &lt;span class=&quot;number&quot;&gt;67&lt;/span&gt; === e.keyCode)) || (e.ctrlKey &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt; === e.keyCode)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; btf.snackbarShow(&lt;span class=&quot;string&quot;&gt;&quot;你真坏，不能打开控制台喔!&quot;&lt;/span&gt;), event.keyCode = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, event.returnValue = !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;重新编译运行，即可看到效果。&lt;/li&gt;&lt;li&gt;注意: 如果自己调试阶段，可注释第一步和第二步中的代码，再进行编译，就可以打开控制台了。部署时放开注释，编译好再丢上去就OK了。&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 （旧版，已弃用） &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ol&gt;&lt;li&gt;&lt;p&gt;在 主题配置 的 inject 的 head 里 引入 这个 css。&lt;/p&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rel=&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://fastly.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/css/function.min.css&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将以下代码复制到自定义的&lt;code&gt;custom.js&lt;/code&gt;， 执行 forbidden_control() 执行即可看到效果。&lt;/p&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;forbidden_control&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.extend({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                title: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                message: &lt;span class=&quot;string&quot;&gt;&quot;操作成功&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time: &lt;span class=&quot;string&quot;&gt;&quot;3000&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                type: &lt;span class=&quot;string&quot;&gt;&quot;success&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                showClose: !&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                autoClose: !&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onClose: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;string&quot;&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; a &amp;amp;&amp;amp; (b.message = a), &lt;span class=&quot;string&quot;&gt;&quot;object&quot;&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; a &amp;amp;&amp;amp; (b = $.extend({}, b, a));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c, d, e, f = b.showClose ? &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div class=&quot;c-message--close&quot;&amp;gt;×&amp;lt;/div&amp;gt;&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                g = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; !== b.title ? &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;h2 class=&quot;c-message__title&quot;&amp;gt;&#39;&lt;/span&gt; b.title &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/h2&amp;gt;&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h = &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div class=&quot;c-message animated animated-lento slideInRight&quot;&amp;gt;&amp;lt;i class=&quot; c-message--icon c-message--&#39;&lt;/span&gt; b.type &lt;span class=&quot;string&quot;&gt;&#39;&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;div class=&quot;el-notification__group&quot;&amp;gt;&#39;&lt;/span&gt; g &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div class=&quot;el-notification__content&quot;&amp;gt;&#39;&lt;/span&gt; b.message &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt; f &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i = $(&lt;span class=&quot;string&quot;&gt;&quot;body&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j = $(h);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j.addClass(&lt;span class=&quot;string&quot;&gt;&quot;slideOutRight&quot;&lt;/span&gt;), j.one(&lt;span class=&quot;string&quot;&gt;&quot;webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    e()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }, e = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j.remove(), b.onClose(b), &lt;span class=&quot;built_in&quot;&gt;clearTimeout&lt;/span&gt;(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }, $(&lt;span class=&quot;string&quot;&gt;&quot;.c-message&quot;&lt;/span&gt;).remove(), i.append(j), j.one(&lt;span class=&quot;string&quot;&gt;&quot;webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j.removeClass(&lt;span class=&quot;string&quot;&gt;&quot;messageFadeInDown&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }), i.on(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;.c-message--close&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                d()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }), b.autoClose &amp;amp;&amp;amp; (c = &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                d()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }, b.time))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.onkeydown = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt; == e.keyCode || e.ctrlKey &amp;amp;&amp;amp; e.shiftKey &amp;amp;&amp;amp; (&lt;span class=&quot;number&quot;&gt;74&lt;/span&gt; === e.keyCode || &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt; === e.keyCode || &lt;span class=&quot;number&quot;&gt;67&lt;/span&gt; === e.keyCode) || (e.ctrlKey &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt; === e.keyCode)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $.message({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            message: &lt;span class=&quot;string&quot;&gt;&quot;采用本站js及css请注明来源，禁止商业使用！&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            title: &lt;span class=&quot;string&quot;&gt;&quot;你真坏，不能打开控制台喔!&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            type: &lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            autoHide: !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time: &lt;span class=&quot;string&quot;&gt;&quot;3000&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }), event.keyCode = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, event.returnValue = !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.oncontextmenu = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $.message({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            message: &lt;span class=&quot;string&quot;&gt;&quot;采用本站js及css请注明来源，禁止商业使用！&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            title: &lt;span class=&quot;string&quot;&gt;&quot;不能右键/长按喔！&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            type: &lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            autoHide: !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time: &lt;span class=&quot;string&quot;&gt;&quot;3000&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }), !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;部分动效说明&quot;&gt;&lt;a href=&quot;#部分动效说明&quot; class=&quot;headerlink&quot; title=&quot;部分动效说明&quot;&gt;&lt;/a&gt;部分动效说明&lt;/h3&gt;&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;请移步此博文 :   &lt;a href=&quot;https://fe32.top/articles/0xiipgum/#%E7%89%B9%E6%95%88%E6%A0%87%E7%AD%BE-wow&quot;&gt;特效标签 wow.js&lt;/a&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;部分页面插入视频&quot;&gt;&lt;a href=&quot;#部分页面插入视频&quot; class=&quot;headerlink&quot; title=&quot;部分页面插入视频&quot;&gt;&lt;/a&gt;部分页面插入视频&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/735570394b43e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;实际视频效果请移步: &lt;a href=&quot;https://fe32.top/comments/&quot;&gt;留言板&lt;/a&gt; 、 &lt;a href=&quot;https://fe32.top/link/&quot;&gt;友链&lt;/a&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;btns rounded grid5&quot;&gt;            &lt;a class=&quot;button&quot; href=&quot;https://wwe.lanzoui.com/iNoJiww30li&quot; title=&quot;下载文件&quot;&gt;&lt;i class=&quot;fas fa-download&quot;&gt;&lt;/i&gt;下载文件&lt;/a&gt;          &lt;/div&gt;&lt;ol&gt;&lt;li&gt;替换文件或修改文件。&lt;br&gt;如果你所使用的主题版本是 3.7.1 ，可直接下载文件，将&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css/_layout/head.styl&lt;/code&gt;替换成新下载的&lt;code&gt;head.styl&lt;/code&gt;，将&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/header/index.pug&lt;/code&gt;替换成新下载的&lt;code&gt;index.pug&lt;/code&gt;。&lt;br&gt;如果你所使用的主题版本跟本站（v3.7.1）有所出入，请对比一下两个文件（下载的文件和你的主题文件）之间的差异，可能需要你对&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css/_layout/head.styl&lt;/code&gt;该文件做出一些修改：&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;.not-home-page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  +maxWidth768()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14rem&lt;/span&gt; !important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#page-site-info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10rem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  padding: 0 .5rem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  +maxWidth768()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7rem&lt;/span&gt; !important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#post-info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ... ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;.has-video&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80vh&lt;/span&gt; !important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #page-site-info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt; !important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;1.425em&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    +maxWidth768()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7rem&lt;/span&gt; !important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  +maxWidth768()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14rem&lt;/span&gt; !important&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;.not-&lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;-img&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  margin-bottom: .5rem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ... ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;主要针对&lt;code&gt;not-home-page&lt;/code&gt;、&lt;code&gt;#page-site-info&lt;/code&gt;修改一些属性，并新增了一个名为&lt;code&gt;has-video&lt;/code&gt;的类。&lt;/li&gt;&lt;li&gt;在自定义 css 中加入以下样式。也可以直接将这段换成&lt;code&gt;style&lt;/code&gt;格式写进 &lt;code&gt;head.styl&lt;/code&gt;。&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#index-video&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80vh&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;object-fit&lt;/span&gt;: cover;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;only&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;768px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-id&quot;&gt;#index-video&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;only&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;min-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;768px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.bg-cover&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;background-image&lt;/span&gt;: none &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;在想插入视频的页面，一定要有某个属性 ，可自行配置 ，如果用 type , 则&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/header/index.pug&lt;/code&gt;中则根据对应的 type 类型去写逻辑即可。&lt;br&gt;比如我的 &lt;code&gt;BlogRoot/source/comment/index.md&lt;/code&gt; 配置如下：&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 留言板&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &#39;comment&#39; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;所以在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/header/index.pug&lt;/code&gt;中的第 23 行加入 &lt;code&gt;page.type == &#39;comment&#39;&lt;/code&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- var isHomeClass = is_home() ? &#39;full_page&#39; : (page.type == &#39;comment&#39; || page.type == &#39;link&#39; ) ? &#39;not-home-page has-video bg-cover&#39; : &#39;not-home-page&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;第 51 - 56 行 加入&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if page.type == &#39;comment&#39; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    video#index-video(autoplay=&#39;&#39; loop=&#39;&#39; muted=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        source(src=&#39;你的视频地址&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if page.type == &#39;link&#39; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    video#index-video(autoplay=&#39;&#39; loop=&#39;&#39; muted=&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        source(src=&#39;你的视频地址&#39;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;如果已经用了主页冒泡特效，请将下面这段代码替换之前的&lt;code&gt;chocolate.js&lt;/code&gt;。没有使用即可忽略这步。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @Author: tzy1997&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @Date: 2020-12-15 20:55:25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @LastEditors: tzy1997&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @LastEditTime: 2021-11-25 18:15:47&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// TODO 获取窗口高度  11-19&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b_h = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).height()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b_w = $(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).width()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 气泡&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bubble&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&#39;#page-header&#39;&lt;/span&gt;).circleMagic({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            radius: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            density: &lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: &lt;span class=&quot;string&quot;&gt;&#39;rgba(255,255,255,.4)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            clearOffset: &lt;span class=&quot;number&quot;&gt;0.99&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }! &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;p&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p.fn.circleMagic = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;t&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o, a, n, r, e = !&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i = [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                d = p.extend({ &lt;span class=&quot;attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;rgba(255,0,0,.5)&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;density&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;clearOffset&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt; }, t),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ e = !(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.scrollTop &amp;gt; a) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// TODO 获取窗口高度  ethan_tzy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a_c = l.clientHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($(&lt;span class=&quot;string&quot;&gt;&#39;#index-video&#39;&lt;/span&gt;).length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; b_w &amp;gt; &lt;span class=&quot;number&quot;&gt;768&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    a = b_h * &lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    a = a_c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// o = l.clientWidth, a = l.clientHeight, l.height = a &quot;px&quot;, n.width = o, n.height = a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                o = l.clientWidth, l.height = a &lt;span class=&quot;string&quot;&gt;&quot;px&quot;&lt;/span&gt;, n.width = o, n.height = a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;h&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; r.clearRect(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, o, a), i) i[t].draw();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                requestAnimationFrame(h)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;e&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ t.pos.x = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * o, t.pos.y = a &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random(), t.alpha = &lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * d.clearOffset, t.scale = &lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random(), t.speed = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random(), &lt;span class=&quot;string&quot;&gt;&quot;random&quot;&lt;/span&gt; === d.color ? t.color = &lt;span class=&quot;string&quot;&gt;&quot;rgba(&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()) &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()) &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()) &lt;span class=&quot;string&quot;&gt;&quot;, &quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random().toPrecision(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt; : t.color = d.color }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                t.pos = {}, e(), &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.draw = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ t.alpha &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; e(), t.pos.y -= t.speed, t.alpha -= &lt;span class=&quot;number&quot;&gt;5e-4&lt;/span&gt;, r.beginPath(), r.arc(t.pos.x, t.pos.y, t.scale * d.radius, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), r.fillStyle = t.color, r.fill(), r.closePath() }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }! &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// TODO 气泡的高度  11-19&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a_c = l.clientHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($(&lt;span class=&quot;string&quot;&gt;&#39;#index-video&#39;&lt;/span&gt;).length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; b_w &amp;gt; &lt;span class=&quot;number&quot;&gt;768&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    a = b_h * &lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    a = a_c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                o = l.offsetWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// o = l.offsetWidth, a = l.offsetHeight,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        t.id = &lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;, t.style.top = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, t.style.zIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, t.style.position = &lt;span class=&quot;string&quot;&gt;&quot;absolute&quot;&lt;/span&gt;, l.appendChild(t), t.parentElement.style.overflow = &lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }(), (n = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;)).width = o, n.height = a, r = n.getContext(&lt;span class=&quot;string&quot;&gt;&quot;2d&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; t &amp;lt; o * d.density; t++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; e = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    i.push(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }(), &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;scroll&quot;&lt;/span&gt;, c, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;resize&quot;&lt;/span&gt;, s, !&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }(jQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bubble();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;重新编译运行，即可看到效果。&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;公告栏两个小人&quot;&gt;&lt;a href=&quot;#公告栏两个小人&quot; class=&quot;headerlink&quot; title=&quot;公告栏两个小人&quot;&gt;&lt;/a&gt;公告栏两个小人&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/06/629cdcc58af14.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;在【BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug】下添加如下部分代码。&lt;/p&gt;&lt;p&gt;注意: 将代码复制到【card_announcement.pug】文件以后，不难发现会有重复的一段代码。你要做的一步操作是，&lt;span class=&quot;p blue&quot;&gt;删除重复的代码（优先保留你主题版本原有的代码），&lt;/span&gt; 这里之所以没用 Diff 代码块，是因为怕删除【+】号的时候在格式上特别容易出错。&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if theme.aside.card_announcement.enable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .card-widget.card-announcement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .item-headline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      i.fas.fa-bullhorn.card-announcement-animation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span= _p(&#39;aside.card_announcement&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .announcement_content!= theme.aside.card_announcement.content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .xpand(style=&#39;height:200px;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    canvas.illo(width=&#39;800&#39; height=&#39;800&#39; style=&#39;max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script(src=&#39;https://npm.elemecdn.com/ethan4116-blog/lib/js/other/two-people/twopeople1.js&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script(src=&#39;https://npm.elemecdn.com/ethan4116-blog/lib/js/other/two-people/zdog.dist.js&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script#rendered-js(src=&#39;https://npm.elemecdn.com/ethan4116-blog/lib/js/other/two-people/twopeople.js&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;style.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; .card-widget.card-announcement {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; margin: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; align-items: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; justify-content: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; text-align: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; canvas {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; margin: 0 auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; cursor: move;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;星空背景和流星特效&quot;&gt;&lt;a href=&quot;#星空背景和流星特效&quot; class=&quot;headerlink&quot; title=&quot;星空背景和流星特效&quot;&gt;&lt;/a&gt;星空背景和流星特效&lt;/h3&gt;&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ol&gt;&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/js&lt;/code&gt;目录下新建&lt;code&gt;universe.js&lt;/code&gt;，输入以下代码：&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dark&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame=&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame||&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.mozRequestAnimationFrame||&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.webkitRequestAnimationFrame||&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.msRequestAnimationFrame;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n,e,i,h,t=&lt;span class=&quot;number&quot;&gt;.05&lt;/span&gt;,s=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;universe&quot;&lt;/span&gt;),o=!&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,a=&lt;span class=&quot;string&quot;&gt;&quot;180,184,240&quot;&lt;/span&gt;,r=&lt;span class=&quot;string&quot;&gt;&quot;226,225,142&quot;&lt;/span&gt;,d=&lt;span class=&quot;string&quot;&gt;&quot;226,225,224&quot;&lt;/span&gt;,c=[];&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{n=&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerWidth,e=&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight,i=&lt;span class=&quot;number&quot;&gt;.216&lt;/span&gt;*n,s.setAttribute(&lt;span class=&quot;string&quot;&gt;&quot;width&quot;&lt;/span&gt;,n),s.setAttribute(&lt;span class=&quot;string&quot;&gt;&quot;height&quot;&lt;/span&gt;,e)}&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;u&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{h.clearRect(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,n,e);&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t=c.length,i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;t;i++){&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;y&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.reset=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.giant=m(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.comet=!&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.giant&amp;amp;&amp;amp;!o&amp;amp;&amp;amp;m(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x=l(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,n-&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y=l(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,e),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.r=l(&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2.6&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.dx=l(t,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;*t)+(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.comet+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)*t*l(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;)+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*t,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.dy=-l(t,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;*t)-(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.comet+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)*t*l(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingOut=&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingIn=!&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacityTresh=l(&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;.4&lt;/span&gt;*(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.comet+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.do=l(&lt;span class=&quot;number&quot;&gt;5e-4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;.002&lt;/span&gt;)+&lt;span class=&quot;number&quot;&gt;.001&lt;/span&gt;*(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.comet+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)},&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadeIn=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingIn&amp;amp;&amp;amp;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingIn=!(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity&amp;gt;&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacityTresh),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity+=&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.do)},&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadeOut=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingOut&amp;amp;&amp;amp;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingOut=!(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity-=&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.do/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x&amp;gt;n||&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;amp;&amp;amp;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingOut=!&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.reset()))},&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.draw=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(h.beginPath(),&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.giant)h.fillStyle=&lt;span class=&quot;string&quot;&gt;&quot;rgba(&quot;&lt;/span&gt;+a+&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity+&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;,h.arc(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI,!&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.comet){h.fillStyle=&lt;span class=&quot;string&quot;&gt;&quot;rgba(&quot;&lt;/span&gt;+d+&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity+&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;,h.arc(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y,&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI,!&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;t&amp;lt;&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;t++)h.fillStyle=&lt;span class=&quot;string&quot;&gt;&quot;rgba(&quot;&lt;/span&gt;+d+&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;+(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity-&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity/&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;*t)+&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;,h.rect(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x-&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.dx/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;*t,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y-&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.dy/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;*t-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),h.fill()}&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; h.fillStyle=&lt;span class=&quot;string&quot;&gt;&quot;rgba(&quot;&lt;/span&gt;+r+&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.opacity+&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;,h.rect(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.r,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.r);h.closePath(),h.fill()},&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.move=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x+=&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.dx,&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y+=&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.dy,!&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;===&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingOut&amp;amp;&amp;amp;&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.reset(),(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.x&amp;gt;n-n/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;||&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.y&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;amp;&amp;amp;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.fadingOut=!&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)},&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{o=!&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;},&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;)}&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;m&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;t&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;number&quot;&gt;1e3&lt;/span&gt;*&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random())+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;*t}&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;l&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;t,i&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()*(i-t)+t}f(),&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;resize&quot;&lt;/span&gt;,f,!&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{h=s.getContext(&lt;span class=&quot;string&quot;&gt;&quot;2d&quot;&lt;/span&gt;);&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; t=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;t&amp;lt;i;t++)c[t]=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; y,c[t].reset();u()}(),&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;t&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;html&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;data-theme&#39;&lt;/span&gt;)==&lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt;&amp;amp;&amp;amp;u(),&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame(t)}()};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dark()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css&lt;/code&gt;目录下新建&lt;code&gt;universe.css&lt;/code&gt;，输入以下代码：&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 背景宇宙星光  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#universe&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;outline&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;pointer-events&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;的&lt;code&gt;inject&lt;/code&gt;配置项中&lt;code&gt;bottom&lt;/code&gt;下填入：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;bottom:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;# 星空背景&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;id=&quot;universe&quot;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;/js/universe.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;的&lt;code&gt;inject&lt;/code&gt;配置项中&lt;code&gt;head&lt;/code&gt;下填入：&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;## 星空背景&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rel=&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;/css/universe.css&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;重新编译即可看到效果。&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;樱花飘落效果&quot;&gt;&lt;a href=&quot;#樱花飘落效果&quot; class=&quot;headerlink&quot; title=&quot;樱花飘落效果&quot;&gt;&lt;/a&gt;樱花飘落效果&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/06/629ce3b40d3aa.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;的&lt;code&gt;inject&lt;/code&gt;配置项中&lt;code&gt;bottom&lt;/code&gt;下引入&lt;code&gt;sakura.js&lt;/code&gt;即可。&lt;/p&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;inject:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bottom:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   # 樱花飘落效果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   # - &amp;lt;script async src=&quot;https://npm.elemecdn.com/tzy-blog/lib/js/other/sakura.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;灯笼特效&quot;&gt;&lt;a href=&quot;#灯笼特效&quot; class=&quot;headerlink&quot; title=&quot;灯笼特效&quot;&gt;&lt;/a&gt;灯笼特效&lt;/h3&gt;&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;Hexo-悬挂灯笼&quot; href=&quot;https://fe32.top/articles/Ha5487ng/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/01/626e8a2063be4.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;Hexo-悬挂灯笼&lt;/p&gt;&lt;p class=&quot;url&quot;&gt;https://fe32.top/articles/Ha5487ng/&lt;/p&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h3 id=&quot;外挂标签&quot;&gt;&lt;a href=&quot;#外挂标签&quot; class=&quot;headerlink&quot; title=&quot;外挂标签&quot;&gt;&lt;/a&gt;外挂标签&lt;/h3&gt;&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;基于Butterfly的外挂标签引入&quot; href=&quot;https://fe32.top/articles/0xiipgum/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/01/626e8d500f25f.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;基于Butterfly的外挂标签引入&lt;/p&gt;&lt;p class=&quot;url&quot;&gt;https://fe32.top/articles/0xiipgum/&lt;/p&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h3 id=&quot;添加github徽标&quot;&gt;&lt;a href=&quot;#添加github徽标&quot; class=&quot;headerlink&quot; title=&quot;添加github徽标&quot;&gt;&lt;/a&gt;添加github徽标&lt;/h3&gt;&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;添加github徽标&quot; href=&quot;https://fe32.top/articles/kfwr2gpa/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/02/626eb40f87b02.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;添加github徽标&lt;/p&gt;&lt;p class=&quot;url&quot;&gt;https://fe32.top/articles/kfwr2gpa/&lt;/p&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h3 id=&quot;自定义右键菜单&quot;&gt;&lt;a href=&quot;#自定义右键菜单&quot; class=&quot;headerlink&quot; title=&quot;自定义右键菜单&quot;&gt;&lt;/a&gt;自定义右键菜单&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;参考方向&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;教程原贴&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;TZY&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608&quot;&gt;Hexo Butterfly 自定义右键菜单（基础）&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;ZHHEO&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://blog.zhheo.com/p/5e931b65.html&quot;&gt;Butterfly 魔改：自定义右键菜单&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;LYX&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://yisous.xyz/posts/11eb4aac/&quot;&gt;博客自定义右键菜单升级版&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&quot;加载动画&quot;&gt;&lt;a href=&quot;#加载动画&quot; class=&quot;headerlink&quot; title=&quot;加载动画&quot;&gt;&lt;/a&gt;加载动画&lt;/h3&gt;&lt;p&gt;可参考 &lt;a href=&quot;https://akilar.top/posts/3d221bf2/&quot;&gt;Loading Animation&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;评论弹幕&quot;&gt;&lt;a href=&quot;#评论弹幕&quot; class=&quot;headerlink&quot; title=&quot;评论弹幕&quot;&gt;&lt;/a&gt;评论弹幕&lt;/h3&gt;&lt;p&gt;参考教程 &lt;a href=&quot;https://yisous.xyz/posts/69707535/&quot;&gt;Butterfly 主题的留言弹幕界面增强版（支持 Twikoo、Waline、Valine）&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;自定义页脚&quot;&gt;&lt;a href=&quot;#自定义页脚&quot; class=&quot;headerlink&quot; title=&quot;自定义页脚&quot;&gt;&lt;/a&gt;自定义页脚&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/11/6395f7970a3bb.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看教程 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;Hexo + Butterfly 自定义页脚&quot; href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/12/11/6395eec4c51ed.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/p&gt;&lt;p class=&quot;url&quot;&gt;https://fe32.top/articles/hexo1617/&lt;/p&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;侧边栏公众号&quot;&gt;&lt;a href=&quot;#侧边栏公众号&quot; class=&quot;headerlink&quot; title=&quot;侧边栏公众号&quot;&gt;&lt;/a&gt;侧边栏公众号&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;center&gt;&lt;img no-lazy=&quot;&quot; class=&quot;inline&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/01/05/63b6d7e812c3f.jpg&quot; style=&quot;height:120px;&quot;&gt;&lt;span style=&quot;margin:0 2px&quot;&gt;&lt;/span&gt;&lt;img no-lazy=&quot;&quot; class=&quot;inline&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/01/05/63b6d7e96e93c.jpg&quot; style=&quot;height:120px;&quot;&gt;&lt;/center&gt;&lt;center&gt;&lt;img no-lazy=&quot;&quot; class=&quot;inline&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/01/05/63b6da843dbae.jpg&quot; style=&quot;height:120px;&quot;&gt;&lt;span style=&quot;margin:0 2px&quot;&gt;&lt;/span&gt;&lt;img no-lazy=&quot;&quot; class=&quot;inline&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/01/05/63b6da85c9ba4.jpg&quot; style=&quot;height:120px;&quot;&gt;&lt;/center&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看教程 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;Hexo + Butterfly 侧边栏公众号&quot; href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2023/01/05/63b6cb1a2bab2.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/p&gt;&lt;p class=&quot;url&quot;&gt;https://fe32.top/articles/hexo1618/&lt;/p&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;文章加密插件&quot;&gt;&lt;a href=&quot;#文章加密插件&quot; class=&quot;headerlink&quot; title=&quot;文章加密插件&quot;&gt;&lt;/a&gt;文章加密插件&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;点击 &lt;a href=&quot;https://mhexo.github.io/&quot;&gt;Demo Page&lt;/a&gt; , 所有的密码都是 【hello】。&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看教程 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;详见开源地址：&lt;a href=&quot;https://github.com/D0n9X1n/hexo-blog-encrypt&quot;&gt;hexo-blog-encrypt&lt;/a&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在根目录执行以下命令&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save hexo-blog-encrypt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;Front matter配置方法&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: Hello World&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; 作为日记加密&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-03-30 21:12:21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;password: mikemessi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;abstract: 有东西被加密了, 请输入密码查看.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;message: 您好, 这里需要密码.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: xray&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wrong&lt;span class=&quot;emphasis&quot;&gt;_pass_&lt;/span&gt;message: 抱歉, 这个密码看着不太对, 请再试试.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wrong&lt;span class=&quot;emphasis&quot;&gt;_hash_&lt;/span&gt;message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;可以在线挑选你喜欢的主题,并应用到你的博客中: &lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Default/&quot;&gt;default&lt;/a&gt;、&lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Blink/&quot;&gt;blink&lt;/a&gt;、&lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Shrink/&quot;&gt;shrink&lt;/a&gt;、&lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Flip/&quot;&gt;flip&lt;/a&gt;、&lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Up/&quot;&gt;up&lt;/a&gt;、&lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Surge/&quot;&gt;surge&lt;/a&gt;、&lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Wave/&quot;&gt;wave&lt;/a&gt;、&lt;a href=&quot;https://mhexo.github.io/2020/12/23/Theme-Test-Xray/&quot;&gt;xray&lt;/a&gt;&lt;/li&gt;&lt;li&gt;重新编译项目并进入对应的文章页即可看到加密效果&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h3 id=&quot;友链朋友圈&quot;&gt;&lt;a href=&quot;#友链朋友圈&quot; class=&quot;headerlink&quot; title=&quot;友链朋友圈&quot;&gt;&lt;/a&gt;友链朋友圈&lt;/h3&gt;&lt;details cyan=&quot;&quot;&gt;&lt;summary&gt; 效果预览 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;p&gt;效果请移步：&lt;a href=&quot;https://fe32.top/frdcenter/&quot;&gt;朋友圈&lt;/a&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看教程 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ul&gt;&lt;li&gt;部署教程：&lt;a href=&quot;https://fcircle-doc.yyyzyyyz.cn/&quot;&gt;文档&lt;/a&gt; 、&lt;a href=&quot;https://fcircle-doc.is-a.dev/&quot;&gt;备用地址&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blog.zhheo.com/p/4e18a507.html&quot;&gt;友链朋友圈5 - 我的部署历程与主题样式分享&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;!-- ### 评论表情包放大 ###

请移步教程：[评论表情包放大功能，超实用](https://blog.leonus.cn/2022/owo-big.html)

### 评论输入提醒 ###

请移步教程：[给你的评论添加一个输入提醒吧](https://blog.leonus.cn/2022/inputAlert.html) --&gt;

&lt;!-- ## 遇到问题

&lt;div class=&quot;tip faa-horizontal&quot;&gt;&lt;p&gt;如果在搭建博客中遇到什么问题  ，请在 &lt;span class=&#39;p yellow&#39;&gt;评论区&lt;/span&gt; 留言 ，我会在第一时间内帮助您解决问题 。&lt;/p&gt;
&lt;/div&gt;</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 从零开始搭建个人博客（五）</title>
    <link href="https://fe32.top/articles/hexo1605/"/>
    <id>https://fe32.top/articles/hexo1605/</id>
    <published>2022-05-29T15:41:28.000Z</published>
    <updated>2023-06-27T14:39:00.822Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;阅读本篇前，请先阅读前几篇文章：&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;br&gt;&lt;br&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，路径为【BlogRoot/_config.yml】。&lt;br&gt;&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;，路径为【BlogRoot/_config.butterfly.yml】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;语言&quot;&gt;&lt;a href=&quot;#语言&quot; class=&quot;headerlink&quot; title=&quot;语言&quot;&gt;&lt;/a&gt;语言&lt;/h2&gt;&lt;p&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，默认语言是 en 。&lt;/p&gt;
&lt;p&gt;主题支持三种语言：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;default(en)&lt;/li&gt;
&lt;li&gt;zh-CN (简体中文)&lt;/li&gt;
&lt;li&gt;zh-TW (繁体中文)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;网站资料&quot;&gt;&lt;a href=&quot;#网站资料&quot; class=&quot;headerlink&quot; title=&quot;网站资料&quot;&gt;&lt;/a&gt;网站资料&lt;/h2&gt;&lt;p&gt;修改网站各种资料，例如标题、副标题和邮箱等个人资料，请修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;。部分参数如下，详细参数可参考官方的&lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration&quot;&gt;配置描述&lt;/a&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;参数&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;title&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;网站标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;subtitle&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;description&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;网站描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;keywords&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;网站的关键词。支持多个关键词。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;author&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;您的名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;language&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;timezone&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;网站时区。Hexo 默认使用您电脑的时区。请参考 时区列表 进行设置，如 America/New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia/Shanghai。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629500bfaecbf.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;导航菜单&quot;&gt;&lt;a href=&quot;#导航菜单&quot; class=&quot;headerlink&quot; title=&quot;导航菜单&quot;&gt;&lt;/a&gt;导航菜单&lt;/h2&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;menu:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Home:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-home&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Archives:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/archives/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-archive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Tags:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/tags/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Categories:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/categories/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-folder-open&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;List||fas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;fa-list:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;Music:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/music/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-music&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;Movie:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/movies/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-video&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Link:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/link/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;About:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/about/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-heart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;必须是 &lt;code&gt;/xxx/&lt;/code&gt;，后面&lt;code&gt;||&lt;/code&gt;分开，然后写图标名。&lt;/p&gt;
&lt;p&gt;如果不希望显示图标，图标名可不写。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.0.0&quot;&gt;v3.7.1&lt;/a&gt; 版本中直接默认子目录是展开的，如果你想要隐藏，后续在魔改中会提到。&lt;br&gt;若主题版本大于 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.0.0&quot;&gt;v4.0.0&lt;/a&gt;，可以直接在子目录里添加 &lt;code&gt;hide&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;menu:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Home:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-home&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Archives:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/archives/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-archive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Tags:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/tags/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Categories:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/categories/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-folder-open&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;List||fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-list||hide:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;Music:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/music/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-music&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;Movie:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/movies/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-video&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;Link:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/link/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;About:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/about/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-heart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;注意： 导航的文字可自行更改&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;menu:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;首页:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-home&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;时间轴:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/archives/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-archive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;标签:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/tags/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;分类:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/categories/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-folder-open&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;清单||fa&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;fa-heartbeat:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;音乐:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/music/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-music&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;照片:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/Gallery/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-images&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;电影:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/movies/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-video&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;友链:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/link/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;关于:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/about/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fas&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-heart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629500c26a299.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;代码块中的所有功能只适用于 Hexo 自带的代码渲染。&lt;br&gt;如果使用第三方的渲染器，不一定会有效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;代码高亮主题&quot;&gt;&lt;a href=&quot;#代码高亮主题&quot; class=&quot;headerlink&quot; title=&quot;代码高亮主题&quot;&gt;&lt;/a&gt;代码高亮主题&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Butterfly&lt;/code&gt;支持 6 种代码高亮样式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;darker&lt;/li&gt;
&lt;li&gt;pale night&lt;/li&gt;
&lt;li&gt;light&lt;/li&gt;
&lt;li&gt;ocean&lt;/li&gt;
&lt;li&gt;mac&lt;/li&gt;
&lt;li&gt;mac light&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。中的&lt;code&gt;highlight_theme&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;highlight_theme:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;light&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;darker&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;pale night&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;light&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--4&quot;&gt;ocean&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--5&quot;&gt;mac&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--6&quot;&gt;mac light&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/62962018a84e7.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/62961859b9e8c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629617b3de088.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--4&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/6296188b7c513.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--5&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629618f4b4847.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--6&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629618cb37ff7.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;


&lt;h3 id=&quot;代码复制&quot;&gt;&lt;a href=&quot;#代码复制&quot; class=&quot;headerlink&quot; title=&quot;代码复制&quot;&gt;&lt;/a&gt;代码复制&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。中的&lt;code&gt;highlight_copy&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;highlight_copy:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629502e4c3233.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;代码框展开-关闭&quot;&gt;&lt;a href=&quot;#代码框展开-关闭&quot; class=&quot;headerlink&quot; title=&quot;代码框展开/关闭&quot;&gt;&lt;/a&gt;代码框展开/关闭&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。中的&lt;code&gt;highlight_shrink&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;highlight_shrink:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#代码框不展开，需点击 &#39;&amp;gt;&#39; 打开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在默认情况下，代码框自动展开，可设置是否所有代码框都关闭状态，点击&lt;code&gt;&amp;gt;&lt;/code&gt;可展开代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;true 全部代码框不展开，需点击&lt;code&gt;&amp;gt;&lt;/code&gt;打开&lt;/li&gt;
&lt;li&gt;false 代码框展开，有&lt;code&gt;&amp;gt;&lt;/code&gt;点击按钮&lt;/li&gt;
&lt;li&gt;none 不显示&lt;code&gt;&amp;gt;&lt;/code&gt;按钮&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;true&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;false&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;none&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629502e7751d9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629502e9cfdf7.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629502ec0db67.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;代码换行&quot;&gt;&lt;a href=&quot;#代码换行&quot; class=&quot;headerlink&quot; title=&quot;代码换行&quot;&gt;&lt;/a&gt;代码换行&lt;/h3&gt;&lt;p&gt;在默认情况下，Hexo 在编译的时候不会实现代码自动换行。如果你不希望在代码块的区域里有横向滚动条的话，那么你可以考虑开启这个功能。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。中的&lt;code&gt;code_word_wrap&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;code_word_wrap:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;代码高度限制&quot;&gt;&lt;a href=&quot;#代码高度限制&quot; class=&quot;headerlink&quot; title=&quot;代码高度限制&quot;&gt;&lt;/a&gt;代码高度限制&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.0&quot;&gt;v3.7.0&lt;/a&gt; 及以上支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可配置代码高度限制，超出的部分会隐藏，并显示展开按钮。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;highlight_height_limit:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# unit: px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单位是&lt;code&gt;px&lt;/code&gt;，直接添加数字，如 200&lt;/li&gt;
&lt;li&gt;实际限制高度为&lt;code&gt;highlight_height_limit + 30 px &lt;/code&gt;，多增加 30px 限制，目的是避免代码高度只超出highlight_height_limit 一点时，出现展开按钮，展开没内容。&lt;/li&gt;
&lt;li&gt;不适用于隐藏后的代码块（ css 设置 &lt;code&gt;display: none&lt;/code&gt;）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;社交图标&quot;&gt;&lt;a href=&quot;#社交图标&quot; class=&quot;headerlink&quot; title=&quot;社交图标&quot;&gt;&lt;/a&gt;社交图标&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Butterfly&lt;/code&gt;支持&lt;a href=&quot;https://fontawesome.com/icons?from=io&quot;&gt;font-awesome v6&lt;/a&gt;图标。&lt;/p&gt;
&lt;p&gt;书写格式：&lt;code&gt;图标名：url || 描述性文字&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;social:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;fab fa-github:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://github.com/xxxxx&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Github&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;fas fa-envelope:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;mailto:xxxxxx@gmail.com&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Email&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;顶部图&quot;&gt;&lt;a href=&quot;#顶部图&quot; class=&quot;headerlink&quot; title=&quot;顶部图&quot;&gt;&lt;/a&gt;顶部图&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果不要显示顶部图，可直接配置 &lt;code&gt;disable_top_img: true&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;配置&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;index_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;主页的 top_img&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;default_top_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;archive_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;归档页面的 top_img&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;tag_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;tag子页面 的 默认 top_img&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;tag_per_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;tag子页面的 top_img，可配置每个 tag 的 top_img&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;category_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;category 子页面 的 默认 top_img&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;category_per_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;category 子页面的 top_img，可配置每个 category 的 top_img&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;index_img:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;xxx.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其它页面 （tags/categories/自建页面）和文章页的&lt;code&gt;top_img&lt;/code&gt;，请到对应的 md 页面设置&lt;code&gt;front-matter&lt;/code&gt;中的&lt;code&gt;top_img&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;3.2.0 以下版本&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;3.2.0 以上版本&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.2.0&quot;&gt;3.2.0&lt;/a&gt; 以下版本的配置只支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;留空，true 和 false - 显示默认的颜色&lt;/li&gt;
&lt;li&gt;img链接 - 显示所配置的图片&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;配置的值&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;| 留空|     显示默认的top_img（如有），否则显示默认的颜色&lt;br&gt;（文章页top_img留空的话，会显示 cover 的值）|&lt;br&gt;| img链接|     图片的链接，显示所配置的图片|&lt;br&gt;| 颜色(&lt;br&gt;HEX值 - #0000FF&lt;br&gt;RGB值 - rgb(0,0,255)&lt;br&gt;颜色单词 - orange&lt;br&gt;渐变色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)&lt;br&gt;）|     对应的颜色|&lt;br&gt;| transparent|     透明|&lt;br&gt;| false|     不显示 top_img| &lt;/p&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;p&gt;&lt;code&gt;tag_per_img&lt;/code&gt;和&lt;code&gt;category_per_img&lt;/code&gt;是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.2.0&quot;&gt;v3.2.0&lt;/a&gt; 新增的内容，可对 tag 和 category 进行单独的配置。&lt;/p&gt;
&lt;p&gt;并不推荐为每个 tag 和每个 category 都配置不同的顶部图，因为配置太多会拖慢生成速度。&lt;/p&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;tag_per_img：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;aplayer:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://xxxxxx.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;android:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ddddddd.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;category_per_img：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;随想:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;hdhdh.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;推荐:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ddjdjdjd.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;文章置顶&quot;&gt;&lt;a href=&quot;#文章置顶&quot; class=&quot;headerlink&quot; title=&quot;文章置顶&quot;&gt;&lt;/a&gt;文章置顶&lt;/h2&gt;&lt;p&gt;【推荐】&lt;code&gt;hexo-generator-index&lt;/code&gt;从 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/2.0.0&quot;&gt;v2.0.0&lt;/a&gt; 开始，已经支持文章置顶功能。你可以直接在文章的&lt;code&gt;front-matter&lt;/code&gt;区域里添加&lt;code&gt;sticky: 1&lt;/code&gt;属性来把这篇文章置顶。数值越大，置顶的优先级越大。&lt;/p&gt;
&lt;h2 id=&quot;文章封面&quot;&gt;&lt;a href=&quot;#文章封面&quot; class=&quot;headerlink&quot; title=&quot;文章封面&quot;&gt;&lt;/a&gt;文章封面&lt;/h2&gt;&lt;p&gt;文章的markdown文档上，在&lt;code&gt;Front-matter&lt;/code&gt;添加&lt;code&gt;cover&lt;/code&gt;，并填上要显示的图片地址。如果不配置&lt;code&gt;cover&lt;/code&gt;，可以设置显示默认的&lt;code&gt;cover&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果不想在首页显示cover，可以设置为&lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;cover:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 是否显示文章封面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;index_enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;aside_enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;archives_enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 封面显示的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 三个值可配置 left , right , both&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;position:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;both&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 当没有设置cover时，默认的封面显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;default_cover:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当配置多张图片时，会随机选择一张作为cover，此时写法应为：&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;default_cover:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://bu.dusays.com/2022/06/05/629c5257753d1.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://bu.dusays.com/2022/05/29/62939662553c9.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://bu.dusays.com/2022/05/26/628fa0426213d.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/62962526c257f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;文章页相关配置&quot;&gt;&lt;a href=&quot;#文章页相关配置&quot; class=&quot;headerlink&quot; title=&quot;文章页相关配置&quot;&gt;&lt;/a&gt;文章页相关配置&lt;/h2&gt;&lt;h3 id=&quot;文章meta显示&quot;&gt;&lt;a href=&quot;#文章meta显示&quot; class=&quot;headerlink&quot; title=&quot;文章meta显示&quot;&gt;&lt;/a&gt;文章meta显示&lt;/h3&gt;&lt;p&gt;&lt;code&gt;post_meta&lt;/code&gt;这个属性用于显示文章的相关信息的。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;post_meta:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;page:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;date_type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;both&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# created or updated or both 主页文章日期是创建日或者更新日或都显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;date_format:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;relative&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# date/relative 显示日期还是相对日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;categories:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# true or false 主页是否显示分类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;tags:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# true or false 主页是否显示标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;label:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# true or false 显示描述性文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;post:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;date_type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;both&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# created or updated or both 文章页日期是创建日或者更新日或都显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;date_format:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;relative&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# date/relative 显示日期还是相对日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;categories:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# true or false 文章页是否显示分类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;tags:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# true or false 文章页是否显示标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;label:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# true or false 显示描述性文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;文章版权和协议许可&quot;&gt;&lt;a href=&quot;#文章版权和协议许可&quot; class=&quot;headerlink&quot; title=&quot;文章版权和协议许可&quot;&gt;&lt;/a&gt;文章版权和协议许可&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;post_copyright:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;decode:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;author_href:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;license:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;CC&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;BY-NC-SA&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;license_url:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://creativecommons.org/licenses/by-nc-sa/4.0/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由于&lt;code&gt;Hexo 4.1&lt;/code&gt;开始，默认对网址进行解码，以至于如果是中文网址，会被解码，可设置&lt;code&gt;decode: true&lt;/code&gt;来显示中文网址。&lt;/p&gt;
&lt;p&gt;如果有文章（例如：转载文章）不需要显示版权，可以在文章页&lt;code&gt;Front-matter&lt;/code&gt;中单独设置。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;copyright:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;从&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.0.0&quot;&gt;v3.0.0&lt;/a&gt; 开始，支持对单独文章设置版权信息，可以在文章Front-matter单独设置。&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;post&lt;span class=&quot;emphasis&quot;&gt;_copyright:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;copyright_&lt;/span&gt;author: xxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright&lt;span class=&quot;emphasis&quot;&gt;_author_&lt;/span&gt;href: https://xxxxxx.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright&lt;span class=&quot;emphasis&quot;&gt;_url: https://xxxxxx.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;copyright_&lt;/span&gt;info: 此文章版权归xxxxx所有，如有转载，请註明来自原作者&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/629628278eee0.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;文章打赏&quot;&gt;&lt;a href=&quot;#文章打赏&quot; class=&quot;headerlink&quot; title=&quot;文章打赏&quot;&gt;&lt;/a&gt;文章打赏&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;reward:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;QR_code:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;img:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/img/wechat.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;link:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;text:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;wechat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;img:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/img/alipay.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;link:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;text:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;alipay&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/31/62962b52a1419.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;


&lt;h3 id=&quot;TOC&quot;&gt;&lt;a href=&quot;#TOC&quot; class=&quot;headerlink&quot; title=&quot;TOC&quot;&gt;&lt;/a&gt;TOC&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;toc:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;post:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;page:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;number:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;expand:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;style_simple:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# for post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;属性&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;post&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;文章页是否显示 TOC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;page&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;普通页面是否显示 TOC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;number&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否显示章节数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;expand&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否展开 TOC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;style_simple&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;简洁模式（侧边栏只显示 TOC, 只对文章页有效 ）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&quot;相关文章推荐&quot;&gt;&lt;a href=&quot;#相关文章推荐&quot; class=&quot;headerlink&quot; title=&quot;相关文章推荐&quot;&gt;&lt;/a&gt;相关文章推荐&lt;/h3&gt;&lt;p&gt;相关文章推荐的原理是根据文章tags的比重来推荐。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;related_post:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;limit:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 显示推荐文章数目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;date_type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;created&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# or created or updated 文章日期显示创建日或者更新日&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/629648ad74ec2.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;文章锚点&quot;&gt;&lt;a href=&quot;#文章锚点&quot; class=&quot;headerlink&quot; title=&quot;文章锚点&quot;&gt;&lt;/a&gt;文章锚点&lt;/h3&gt;&lt;p&gt;开启文章锚点后，当你在文章页进行滚动时，文章链接会根据标题ID进行替换。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意: 每替换一次，会留下一个歷史记录。所以如果一篇文章有很多锚点的话，网页的歷史记录会很多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# anchor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# when you scroll in post , the url will update according to header id.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;anchor:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;文章过期提醒&quot;&gt;&lt;a href=&quot;#文章过期提醒&quot; class=&quot;headerlink&quot; title=&quot;文章过期提醒&quot;&gt;&lt;/a&gt;文章过期提醒&lt;/h3&gt;&lt;p&gt;可设置是否显示文章过期提醒，以更新时间为基准。&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;# Displays outdated notice for a post (文章过期提醒)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;noticeOutdate:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  style: flat # style: simple/flat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  limit&lt;span class=&quot;emphasis&quot;&gt;_day: 365 # When will it be shown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;  position: top # position: top/bottom&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;  message_&lt;/span&gt;prev: It has been&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  message&lt;span class=&quot;emphasis&quot;&gt;_next: days since the last update, the content of the article may be outdated.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;limit_day&lt;/code&gt;： 距离更新时间多少天才显示文章过期提醒。&lt;br&gt;&lt;code&gt;message_prev&lt;/code&gt; ： 天数之前的文字。&lt;br&gt;&lt;code&gt;message_next&lt;/code&gt;：天数之后的文字。&lt;/p&gt;
&lt;h3 id=&quot;文章分页按钮&quot;&gt;&lt;a href=&quot;#文章分页按钮&quot; class=&quot;headerlink&quot; title=&quot;文章分页按钮&quot;&gt;&lt;/a&gt;文章分页按钮&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# post_pagination (分页)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# value: 1 || 2 || false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 1: The &#39;next post&#39; will link to old post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 2: The &#39;next post&#39; will link to new post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# false: disable pagination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;post_pagination:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;参数&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;post_pagination: false&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;关闭分页按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;post_pagination: 1&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;下一篇显示的是旧文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;post_pagination: 2&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;下一篇显示的是新文章&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/6296486226891.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;头像&quot;&gt;&lt;a href=&quot;#头像&quot; class=&quot;headerlink&quot; title=&quot;头像&quot;&gt;&lt;/a&gt;头像&lt;/h2&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;avatar:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;img:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://bu.dusays.com/2022/05/02/626f92e193879.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;effect:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 头像会一直转圈&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/629648341b408.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;图片描述&quot;&gt;&lt;a href=&quot;#图片描述&quot; class=&quot;headerlink&quot; title=&quot;图片描述&quot;&gt;&lt;/a&gt;图片描述&lt;/h2&gt;&lt;p&gt;可开启图片&lt;code&gt;Figcaption&lt;/code&gt;描述文字显示，优先显示图片的&lt;code&gt;title&lt;/code&gt;属性，然后是&lt;code&gt;alt&lt;/code&gt;属性。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;photofigcaption:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;文章内容复制相关配置&quot;&gt;&lt;a href=&quot;#文章内容复制相关配置&quot; class=&quot;headerlink&quot; title=&quot;文章内容复制相关配置&quot;&gt;&lt;/a&gt;文章内容复制相关配置&lt;/h2&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;# copy settings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;# copyright: Add the copyright information after copied content (复制的内容后面加上版权信息)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  copyright:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    enable: true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    limit_count: 50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;配置&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;enable&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否开启网站复制权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;copyright&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;复制的内容后面加上版权信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;enable&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是否开启复制版权信息添加&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;limit_count&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;字数限制，当复制文字大于这个字数限制时，将在复制的内容后面加上版权信息&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;添加版权后的效果：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;gallery-group-main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{% galleryGroup &#39;壁纸&#39; &#39;收藏的一些壁纸&#39; &#39;/Gallery/wallpaper&#39; https://bu.dusays.com/2021/03/06/38a2c5cd8b44e.jpg %}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{% galleryGroup &#39;漫威&#39; &#39;关于漫威的图片&#39; &#39;/Gallery/marvel&#39; https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{% galleryGroup &#39;OH MY GIRL&#39; &#39;关于OH MY GIRL的图片&#39; &#39;/Gallery/ohmygirl&#39; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;作者: Ethan.Tzy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;链接: https://fe32.top/articles/hexo541u/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;来源: 唐志远の博客&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Footer-设置&quot;&gt;&lt;a href=&quot;#Footer-设置&quot; class=&quot;headerlink&quot; title=&quot;Footer 设置&quot;&gt;&lt;/a&gt;Footer 设置&lt;/h2&gt;&lt;h3 id=&quot;博客年份&quot;&gt;&lt;a href=&quot;#博客年份&quot; class=&quot;headerlink&quot; title=&quot;博客年份&quot;&gt;&lt;/a&gt;博客年份&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;footer:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;owner:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;since:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;# 站点起始时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;页脚自定义文本&quot;&gt;&lt;a href=&quot;#页脚自定义文本&quot; class=&quot;headerlink&quot; title=&quot;页脚自定义文本&quot;&gt;&lt;/a&gt;页脚自定义文本&lt;/h3&gt;&lt;p&gt;&lt;code&gt;custom_text&lt;/code&gt;是一个给你用来在页脚自定义文本的选项。通常你可以在这里写声明文本等。支持 HTML。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;本人的页脚如下，若你在配置时没有出现github徽章，请参考教程&lt;a href=&quot;https://fe32.top/articles/kfwr2gpa/&quot;&gt;添加Github徽标&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;custom_text:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;wish&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;become&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;own&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;sun,&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;need&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rely&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;who&#39;s&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;light.&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;target=&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://hexo.io/&quot;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;amp;logo=hexo&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title=&quot;博客框架为Hexo&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;target=&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://butterfly.js.org/&quot;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;amp;logo=bitdefender&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title=&quot;主题采用butterfly&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;target=&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://www.jsdelivr.com/&quot;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://img.shields.io/badge/CDN-jsDelivr-orange?style=flat&amp;amp;logo=jsDelivr&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title=&quot;本站使用JsDelivr为静态资源提供CDN加速&quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;amp;nbsp;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;target=&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://vercel.com/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;lt;img src=&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;https://img.shields.io/badge/Hosted-Vervel-brightgreen?style=flat&amp;amp;logo=Vercel&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title=&quot;本站采用双线部署，默认线路托管于Vercel&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;target=&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://vercel.com/&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;lt;img src=&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;https://img.shields.io/badge/Hosted-Coding-0cedbe?style=flat&amp;amp;logo=Codio&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title=&quot;本站采用双线部署，联通线路托管于Coding&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;target=&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;https://github.com/&quot;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;amp;logo=GitHub&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title=&quot;本站项目由Gtihub托管&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;amp;nbsp;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;target=&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;amp;logo=Claris&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;title=&quot;本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可&quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/6296491902973.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于部分人需要写 ICP 的，也可以写在&lt;code&gt;custom_text&lt;/code&gt;里。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;custom_text:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;icp链接&quot;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;class=&quot;icp-icon&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;icp图片&quot;&amp;gt;&amp;lt;span&amp;gt;备案号：xxxxxx&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;右下角按钮&quot;&gt;&lt;a href=&quot;#右下角按钮&quot; class=&quot;headerlink&quot; title=&quot;右下角按钮&quot;&gt;&lt;/a&gt;右下角按钮&lt;/h2&gt;&lt;h3 id=&quot;简繁转换&quot;&gt;&lt;a href=&quot;#简繁转换&quot; class=&quot;headerlink&quot; title=&quot;简繁转换&quot;&gt;&lt;/a&gt;简繁转换&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;translate:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 默认按钮显示文字(网站是简体，应设置为&#39;default: 繁&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;default:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;繁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 网站默认语言，1: 繁体中文, 2: 简体中文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;defaultEncoding:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Time delay 延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;translateDelay:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 当文字是简体时，按钮显示的文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;msgToTraditionalChinese:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;繁&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 当文字是繁体时，按钮显示的文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;msgToSimplifiedChinese:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;簡&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;夜间模式&quot;&gt;&lt;a href=&quot;#夜间模式&quot; class=&quot;headerlink&quot; title=&quot;夜间模式&quot;&gt;&lt;/a&gt;夜间模式&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# dark mode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;darkmode:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# dark 和 light 两种模式切换按钮&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;button:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Switch dark/light mode automatically (自動切換 dark mode和 light mode)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# autoChangeMode: 1  Following System Settings, if the system doesn&#39;t support dark mode, it will switch dark mode between 6 pm to 6 am&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# autoChangeMode: 2  Switch dark mode between 6 pm to 6 am&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# autoChangeMode: false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;autoChangeMode:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/2.0.0&quot;&gt;v2.0.0&lt;/a&gt; 开始增加一个选项，可开启自动切换light mode 和 dark mode。&lt;br&gt;autoChangeMode: 1 跟随系统而变化，不支持的浏览器/系统将按照时间晚上6点到早上6点之间切换为 dark mode。&lt;br&gt;autoChangeMode: 2 只按照时间 晚上6点到早上6点之间切换为 dark mode,其余时间为light mode。&lt;br&gt;autoChangeMode: false 取消自动切换。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;阅读模式&quot;&gt;&lt;a href=&quot;#阅读模式&quot; class=&quot;headerlink&quot; title=&quot;阅读模式&quot;&gt;&lt;/a&gt;阅读模式&lt;/h3&gt;&lt;p&gt;阅读模式下会去掉除文章外的内容，避免干扰阅读。只会出现在文章页面，右下角会有阅读模式按钮。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;readmode:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/629649534ee1a.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;侧边栏设置&quot;&gt;&lt;a href=&quot;#侧边栏设置&quot; class=&quot;headerlink&quot; title=&quot;侧边栏设置&quot;&gt;&lt;/a&gt;侧边栏设置&lt;/h2&gt;&lt;h3 id=&quot;侧边排版&quot;&gt;&lt;a href=&quot;#侧边排版&quot; class=&quot;headerlink&quot; title=&quot;侧边排版&quot;&gt;&lt;/a&gt;侧边排版&lt;/h3&gt;&lt;p&gt;可自行决定哪个项目需要显示，可决定位置，也可以设置不显示侧边栏。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;aside:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;hide:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;button:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 手机页面（ 显示宽度 &amp;lt; 768px ）是否显示aside内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;position:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# left or right &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_author:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 关于博主的一些信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;description:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;button:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;icon:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fab&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;fa-github&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;text:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Follow&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Me&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;link:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://github.com/xxxxxx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_announcement:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 公告信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;content:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Blog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_recent_post:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 最新文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;limit:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# if set 0 will show all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;sort:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# date or updated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;sort_order:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Don&#39;t modify the setting unless you know how it works&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_categories:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 文章分类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;limit:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# if set 0 will show all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;expand:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# none/true/false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;sort_order:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Don&#39;t modify the setting unless you know how it works&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_tags:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 文章标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;limit:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# if set 0 will show all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;color:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;sort_order:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Don&#39;t modify the setting unless you know how it works&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_archives:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 文章归档&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;monthly&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# yearly or monthly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;format:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;MMMM&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;YYYY&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# eg: YYYY年MM月&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;order:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Sort of order. 1, asc for ascending; -1, desc for descending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;limit:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# if set 0 will show all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;sort_order:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Don&#39;t modify the setting unless you know how it works&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;card_webinfo:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 网站信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;post_count:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;last_push_date:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;sort_order:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Don&#39;t modify the setting unless you know how it works&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;访问人数-UV-和-PV&quot;&gt;&lt;a href=&quot;#访问人数-UV-和-PV&quot; class=&quot;headerlink&quot; title=&quot;访问人数(UV 和 PV)&quot;&gt;&lt;/a&gt;访问人数(UV 和 PV)&lt;/h3&gt;&lt;p&gt;详细信息请查看&lt;a href=&quot;http://busuanzi.ibruce.info/&quot;&gt;busuanzi官方网站&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;busuanzi:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;site_uv:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 本站总访客数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;site_pv:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 本站总访问量 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;page_pv:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 本文总阅读量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;运行时间&quot;&gt;&lt;a href=&quot;#运行时间&quot; class=&quot;headerlink&quot; title=&quot;运行时间&quot;&gt;&lt;/a&gt;运行时间&lt;/h3&gt;&lt;p&gt;网页已运行时间。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;runtimeshow:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;publish_date:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;/7/2018&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;:00:00&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;##网页开通时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#格式: 月/日/年 时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;#也可以写成 年/月/日 时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/62964967422c1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;最新评论&quot;&gt;&lt;a href=&quot;#最新评论&quot; class=&quot;headerlink&quot; title=&quot;最新评论&quot;&gt;&lt;/a&gt;最新评论&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.1.0&quot;&gt;v3.1.0&lt;/a&gt; 以上支持。如果未配置任何评论，前先不要开启该功能。&lt;br&gt;最新评论只会在刷新时才会去读取，并不会实时变化。&lt;br&gt;由于 API 有 访问次数限制，为了避免调用太多，主题默认存取期限为 10 分鐘。也就是説，调用后资料会存在 localStorage 里，10分鐘内刷新网站只会去 localStorage 读取资料。 10 分鐘期限一过，刷新页面时才会去调取 API 读取新的数据。（ 3.6.0 新增了 storage 配置，可自行配置缓存时间）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Aside widget - Newest Comments&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;newest_comments:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;sort_order:&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Don&#39;t modify the setting unless you know how it works&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;limit:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 显示的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;storage:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 设置缓存时间，单位 分钟 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;avatar:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 是否显示头像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/01/62964981292d6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;网站背景&quot;&gt;&lt;a href=&quot;#网站背景&quot; class=&quot;headerlink&quot; title=&quot;网站背景&quot;&gt;&lt;/a&gt;网站背景&lt;/h2&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 图片格式 url(http://xxxxxx.com/xxx.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 颜色（HEX值/RGB值/颜色单词/渐变色)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 留空 不显示背景&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;background:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;如果你的网站根目录不是’/‘，使用本地图片时，需加上你的根目录。&lt;br&gt;例如：网站是 &lt;code&gt;https://yoursite.com/blog&lt;/code&gt;，引用一张img/xx.png图片，则设置background为 `url(/blog/img/xx.png)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;打字效果&quot;&gt;&lt;a href=&quot;#打字效果&quot; class=&quot;headerlink&quot; title=&quot;打字效果&quot;&gt;&lt;/a&gt;打字效果&lt;/h2&gt;&lt;p&gt;传送门：&lt;a href=&quot;https://github.com/disjukr/activate-power-mode&quot;&gt;activate-power-mode&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Typewriter Effect (打字效果)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://github.com/disjukr/activate-power-mode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;activate_power_mode:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;colorful:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# open particle animation (冒光特效)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;shake:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#  open shake (抖動特效)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/13/6370e4439260e.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;footer-背景&quot;&gt;&lt;a href=&quot;#footer-背景&quot; class=&quot;headerlink&quot; title=&quot;footer 背景&quot;&gt;&lt;/a&gt;footer 背景&lt;/h2&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# footer是否显示图片背景(与top_img一致)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;footer_bg:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;配置的值&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;留空/false&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;显示默认的颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;img链接&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;图片的链接，显示所配置的图片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;颜色： &lt;br&gt;  HEX值 - #0000FF &lt;br&gt; RGB值 - rgb(0,0,255)&lt;br&gt; 颜色单词 - orange &lt;br&gt;渐变色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;对应的颜色&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;true&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;显示跟 top_img 一样&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/02/629793c0c616c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;背景特效&quot;&gt;&lt;a href=&quot;#背景特效&quot; class=&quot;headerlink&quot; title=&quot;背景特效&quot;&gt;&lt;/a&gt;背景特效&lt;/h2&gt;&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;静止彩带&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;动态彩带&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;canvas_nest&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;p&gt;可设置每次刷新更换彩带，或者每次点击更换彩带。详细配置可查看&lt;a href=&quot;https://github.com/hustcc/ribbon.js&quot;&gt;canvas_ribbon&lt;/a&gt;。&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;canvas_ribbon:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;size:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;alpha:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;zIndex:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;click_to_change:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#設置是否每次點擊都更換彩带&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# false 手機端不顯示 true 手機端顯示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/13/6370e38d4a270.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;p&gt;好看的彩带背景，会飘动。&lt;br&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;canvas_fluttering_ribbon:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# false 手机端不显示 true 手机端显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/13/6370e41b8070a.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;canvas_nest:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;color:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;0,0,255&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#color of lines, default: &#39;0,0,0&#39;; RGB values: (R,G,B).(&lt;span class=&quot;doctag&quot;&gt;note:&lt;/span&gt; use &#39;,&#39; to separate.)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;opacity:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# the opacity of line (0~1), default: 0.5.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;zIndex:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# z-index property of the background, default: -1.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;count:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# the number of lines, default: 99.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# false 手機端不顯示 true 手機端顯示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/13/6370e60740d1a.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;鼠标点击效果&quot;&gt;&lt;a href=&quot;#鼠标点击效果&quot; class=&quot;headerlink&quot; title=&quot;鼠标点击效果&quot;&gt;&lt;/a&gt;鼠标点击效果&lt;/h2&gt;&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;&lt;i class=&quot;fas fa-fire-alt&quot;&gt;&lt;/i&gt;烟花&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;&lt;i class=&quot;fas fa-heart&quot;&gt;&lt;/i&gt;爱心&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;&lt;i class=&quot;fab fa-amilia&quot;&gt;&lt;/i&gt;文字&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;p&gt;&lt;code&gt;zIndex&lt;/code&gt;建议只在&lt;code&gt;-1&lt;/code&gt;和&lt;code&gt;9999&lt;/code&gt;上选。&lt;br&gt;&lt;code&gt;-1&lt;/code&gt; 代表烟火效果在底部。&lt;br&gt;&lt;code&gt;9999&lt;/code&gt; 代表烟火效果在前面。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;fireworks:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;zIndex:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;9999&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# -1 or 9999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/13/6370e635f16d5.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 点击出現爱心&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;click_heart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/13/6370e65628a0e.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 点击出现文字，文字可自行修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;ClickShowText:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;text:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;LOVE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;YOU&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;fontSize:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;15px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;random:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 文字随机显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;mobile:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/13/6370e671d8174.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;自定义字体和字体大小&quot;&gt;&lt;a href=&quot;#自定义字体和字体大小&quot; class=&quot;headerlink&quot; title=&quot;自定义字体和字体大小&quot;&gt;&lt;/a&gt;自定义字体和字体大小&lt;/h2&gt;&lt;h3 id=&quot;全局字体&quot;&gt;&lt;a href=&quot;#全局字体&quot; class=&quot;headerlink&quot; title=&quot;全局字体&quot;&gt;&lt;/a&gt;全局字体&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中的&lt;code&gt;font-family&lt;/code&gt;属性即可，如不需要配置，请留空。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Global font settings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Don&#39;t modify the following settings unless you know how they work (非必要不要修改)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;font:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;global-font-size:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;code-font-size:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;font-family:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;-apple-system,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;BlinkMacSystemFont,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Segoe UI&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Helvetica Neue&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Lato,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Roboto,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;PingFang SC&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Microsoft JhengHei&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Microsoft YaHei&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;sans-serif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;code-font-family:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;consolas,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Menlo,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;PingFang SC&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Microsoft JhengHei&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Microsoft YaHei&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;sans-serif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;Blog-标题字体&quot;&gt;&lt;a href=&quot;#Blog-标题字体&quot; class=&quot;headerlink&quot; title=&quot;Blog 标题字体&quot;&gt;&lt;/a&gt;Blog 标题字体&lt;/h3&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中的&lt;code&gt;blog_title_font&lt;/code&gt;属性即可，如不需要配置，请留空。&lt;br&gt;如不需要使用网络字体，只需要把font_link留空就行。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Font settings for the site title and site subtitle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 左上角网站名字 主页居中网站名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;blog_title_font:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;font_link:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://fonts.googleapis.com/css?family=Titillium+Web&amp;amp;display=swap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;font-family:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Titillium&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Web,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;PingFang SC&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Hiragino Sans GB&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Microsoft JhengHei&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Microsoft YaHei&#39;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;sans-serif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;网站副标题&quot;&gt;&lt;a href=&quot;#网站副标题&quot; class=&quot;headerlink&quot; title=&quot;网站副标题&quot;&gt;&lt;/a&gt;网站副标题&lt;/h2&gt;&lt;p&gt;可设置主页中显示的网站副标题或者喜欢的座右铭。&lt;/p&gt;
&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中的&lt;code&gt;subtitle&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Site&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;subtitle:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Typewriter Effect (打字效果)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;effect:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# loop (循環打字)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;loop:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source調用第三方服務&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source: false 關閉調用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source: 1  調用搏天api的隨機語錄（簡體）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source: 2  調用一言網的一句話（簡體）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source: 3  調用一句網（簡體）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source: 4  調用今日詩詞（簡體）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# subtitle 會先顯示 source , 再顯示 sub 的內容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;source:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 如果有英文逗號&#39; , &#39;,請使用轉義字元 &amp;amp;#44;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 如果有英文雙引號&#39; &quot; &#39;,請使用轉義字元 &amp;amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 開頭不允許轉義字元，如需要，請把整個句子用雙引號包住&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 如果關閉打字效果，subtitle只會顯示sub的第一行文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;sub:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;窗外有月色和雨&amp;amp;#44;而我在想你。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;There&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;moonlight&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rain&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;outside&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;window,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;miss&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;you.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;预览效果见本站主页：&lt;a href=&quot;https://fe32.top/&quot;&gt;唐志远の博客&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;页面加载动画preloader&quot;&gt;&lt;a href=&quot;#页面加载动画preloader&quot; class=&quot;headerlink&quot; title=&quot;页面加载动画preloader&quot;&gt;&lt;/a&gt;页面加载动画preloader&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;主题版本 &amp;lt; 5.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当进入网页时，因为加载速度的问题，可能会导致top_img图片出现断层显示，或者网页加载不全而出现等待时间，开启preloader后，会显示加载动画，等页面加载完，加载动画会消失。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 加载动画 Loading Animation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;preloader:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;主题版本 &amp;gt;= 5.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;preloader 设置更改，增加 &lt;a href=&quot;https://codebyzach.github.io/pace/&quot;&gt;pace.js&lt;/a&gt; 加载动画条&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 加载动画 Loading Animation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;preloader:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 1. fullpage-loading&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 2. pace (progress bar)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;source:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# pace theme (see https://codebyzach.github.io/pace/)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;pace_css_url:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;字数统计&quot;&gt;&lt;a href=&quot;#字数统计&quot; class=&quot;headerlink&quot; title=&quot;字数统计&quot;&gt;&lt;/a&gt;字数统计&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装插件：在你的博客根目录，打开cmd命令窗口执行&lt;code&gt;npm install hexo-wordcount --save&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;开启配置：修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中的&lt;code&gt;wordcount&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;wordcount:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;post_wordcount:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;min2read:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;total_wordcount:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;图片大图查看模式&quot;&gt;&lt;a href=&quot;#图片大图查看模式&quot; class=&quot;headerlink&quot; title=&quot;图片大图查看模式&quot;&gt;&lt;/a&gt;图片大图查看模式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;只能开启一个。&lt;br&gt;如果你并不想为某张图片添加大图查看模式，你可以使用 html 格式引用图片，并为图片添加 &lt;code&gt;no-lightbox&lt;/code&gt; class 名，例如：&lt;code&gt;&amp;lt;img src=&quot;xxxx.jpg&quot; class=&quot;no-lightbox&quot;&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;fancybox（推荐）&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;medium_zoom&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中&lt;code&gt;fancybox&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# fancybox http://fancyapps.com/fancybox/3/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;fancybox:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;p&gt;修改主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中&lt;code&gt;medium_zoom&lt;/code&gt;属性。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;medium_zoom:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Pjax&quot;&gt;&lt;a href=&quot;#Pjax&quot; class=&quot;headerlink&quot; title=&quot;Pjax&quot;&gt;&lt;/a&gt;Pjax&lt;/h2&gt;&lt;p&gt;当用户点击链接，通过 &lt;strong&gt;ajax&lt;/strong&gt; 更新页面需要变化的部分，然后使用 &lt;strong&gt;HTML5&lt;/strong&gt; 的 &lt;strong&gt;pushState&lt;/strong&gt; 修改浏览器的 &lt;strong&gt;URL&lt;/strong&gt;   地址。&lt;/p&gt;
&lt;p&gt;这样可以不用重复加载相同的资源（css/js）， 从而提升网页的加载速度。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Pjax [Beta]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# It may contain bugs and unstable, give feedback when you find the bugs.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# https://github.com/MoOx/pjax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;pjax:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 对于一些第三方插件，有些并不支持 pjax 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 你可以把网页加入到 exclude 里，这个网页会被 pjax 排除在外。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 点击该网页会重新加载网站。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;exclude:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/music/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/no-pjax/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;使用 pjax 后，一些自己DIY的js可能会无效，跳转页面时需要重新调用，请参考&lt;a href=&quot;https://github.com/MoOx/pjax&quot;&gt;Pjax文档&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Inject&quot;&gt;&lt;a href=&quot;#Inject&quot; class=&quot;headerlink&quot; title=&quot;Inject&quot;&gt;&lt;/a&gt;Inject&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/2.3.0&quot;&gt;v2.3.0&lt;/a&gt;以上支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如想添加额外的 js/css/meta 等等东西，可以在 Inject 里添加，head(&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;标签之前)， bottom(&lt;code&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;标签之前)。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Inject&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Insert the code to head (before &#39;&amp;lt;/head&amp;gt;&#39; tag) and the bottom (before &#39;&amp;lt;/body&amp;gt;&#39; tag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 插入代码到头部 &amp;lt;/head&amp;gt; 之前 和 底部 &amp;lt;/body&amp;gt; 之前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;inject:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;head:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;rel=&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;href=&quot;/xxx.css&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;bottom:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;script&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;src=&quot;xxxx&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;CDN&quot;&gt;&lt;a href=&quot;#CDN&quot; class=&quot;headerlink&quot; title=&quot;CDN&quot;&gt;&lt;/a&gt;CDN&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;建议先&lt;code&gt;ping&lt;/code&gt;一下&lt;code&gt;cdn.jsdelivr.net&lt;/code&gt;，如果能&lt;code&gt;ping&lt;/code&gt;通，可忽略此步。&lt;br&gt;自从jsd官方的ICP被吊销以后，很多资源都无法访问，请自行配置CDN，配置后请确认链接是否能访问。&lt;br&gt;为了博客能正常访问，本文列出几种解决方法（防止&lt;code&gt;cdn.jsdelivr.net&lt;/code&gt;再次出现幺蛾子）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;手动替换CDN&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;gulp-replace全局替换&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;注意：如果下面三种 CDN 也存在问题，可以找一找国内的一些 CDN ，如知乎、字节、饿了么等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以参考如下教程：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/VariatioZbw/article/details/107822562&quot;&gt;常用CDN网站汇总&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.zhheo.com/p/790087d9.html&quot;&gt;张洪：Butterfly CDN链接更改指南，替换jsdelivr提升访问速度&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://anzhiy.cn/posts/fe76.html&quot;&gt;安知鱼：目前可用cdn整理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中的&lt;code&gt;https://cdn.jsdelivr.net&lt;/code&gt;替换成下面任意一种CDN即可。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;https://fastly.jsdelivr.net&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://testingcf.jsdelivr.net&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://gcore.jsdelivr.net&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/05/629b8b6a9bfe8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;另外将上图中所出现的&lt;code&gt;https://cdn.jsdelivr.net&lt;/code&gt;文件换成可用的CDN。&lt;/p&gt;
&lt;p&gt;Valine评论相关（如果用的不是Valine，可跳过此步）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;node_modules\hexo-theme-butterfly\layout\includes\third-party\newest-comments\valine.pug&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;node_modules\hexo-theme-butterfly\layout\includes\third-party\newest-comments\leancloud.pug&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;电子时钟相关（如果未引用电子时钟，可跳过此步）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;node_modules\hexo-butterfly-clock\index.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;node_modules\hexo-butterfly-clock\lib\clock.css&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其他文件也按照同样的方法修改即可。&lt;/p&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;ol&gt;
&lt;li&gt;前往博客根目录，打开cmd命令窗口执行如下命令安装 gulp 及 gulp-replace。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install gulp-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install gulp -D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install --save-dev gulp-replace&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;前往博客根目录，创建文件&lt;code&gt;gulpfile.js&lt;/code&gt;，填写以下代码。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;//如果之前有gulp相关插件，请删除此行代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; replace = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-replace&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;templates&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;public/**/*.*&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(replace(&lt;span class=&quot;string&quot;&gt;&#39;这里填写jsd官方域名&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;目标cdn地址&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;public/&#39;&lt;/span&gt;)),  { &lt;span class=&quot;attr&quot;&gt;overwrite&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&quot;default&quot;&lt;/span&gt;, gulp.parallel(&lt;span class=&quot;string&quot;&gt;&#39;templates&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;前往博客根目录，打开cmd命令窗口执行&lt;code&gt;gulp&lt;/code&gt;。&lt;pre&gt;&lt;code class=&quot;BASH&quot;&gt;gulp&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;搜索系统&quot;&gt;&lt;a href=&quot;#搜索系统&quot; class=&quot;headerlink&quot; title=&quot;搜索系统&quot;&gt;&lt;/a&gt;搜索系统&lt;/h2&gt;&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;基于 Hexo 键入搜索功能&quot; href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/30/62bdbf2939508.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;基于 Hexo 键入搜索功能&lt;/p&gt;&lt;p class=&quot;url&quot;&gt;https://fe32.top/articles/hexo1607/&lt;/p&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;分享&quot;&gt;&lt;a href=&quot;#分享&quot; class=&quot;headerlink&quot; title=&quot;分享&quot;&gt;&lt;/a&gt;分享&lt;/h2&gt;&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;基于 Hexo 键入分享功能&quot; href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/06/30/62bdbf2939508.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;基于 Hexo 键入分享功能&lt;/p&gt;&lt;p class=&quot;url&quot;&gt;https://fe32.top/articles/hexo1609/&lt;/p&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;在线聊天&quot;&gt;&lt;a href=&quot;#在线聊天&quot; class=&quot;headerlink&quot; title=&quot;在线聊天&quot;&gt;&lt;/a&gt;在线聊天&lt;/h2&gt;&lt;div class=&quot;tag link&quot;&gt;&lt;a class=&quot;link-card&quot; title=&quot;基于 Hexo 键入在线聊天功能&quot; href=&quot;https://fe32.top/articles/hexo1610/&quot;&gt;&lt;div class=&quot;left&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/07/17/62d3a15f8bcf7.png&quot;&gt;&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;&lt;p class=&quot;text&quot;&gt;基于 Hexo 键入在线聊天功能&lt;/p&gt;&lt;p</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 从零开始搭建个人博客（四）</title>
    <link href="https://fe32.top/articles/hexo1604/"/>
    <id>https://fe32.top/articles/hexo1604/</id>
    <published>2022-05-26T15:38:14.000Z</published>
    <updated>2023-06-27T14:39:00.823Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;阅读本篇前，请先阅读前几篇文章：&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;博客搭建过程遇到任何问题，优先在本页面搜索，检查是否已经有该配置教程。&lt;/li&gt;
&lt;li&gt;遇到问题可以优先在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到站长的回复。&lt;/li&gt;
&lt;li&gt;实在解决不了的问题可添加博主 Wechat ，添加好友时请备注自己的姓名+专业，如 张三 计算机科学与技术。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Front-matter&quot;&gt;&lt;a href=&quot;#Front-matter&quot; class=&quot;headerlink&quot; title=&quot;Front-matter&quot;&gt;&lt;/a&gt;Front-matter&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Front-matter&lt;/strong&gt; 是 &lt;strong&gt;markdown&lt;/strong&gt;  文件最上方以&lt;code&gt;---&lt;/code&gt;分隔的区域，用于指定个别档案的变数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Page Front-matter 用于页面配置&lt;/li&gt;
&lt;li&gt;Post Front-matter 用于文章页配置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;note pink no-icon flat&quot;&gt;&lt;p&gt;如果标注可选的参数，可根据自己需要添加，不用全部都写在markdown里&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;Page-Front-matter&quot;&gt;&lt;a href=&quot;#Page-Front-matter&quot; class=&quot;headerlink&quot; title=&quot;Page Front-matter&quot;&gt;&lt;/a&gt;Page Front-matter&lt;/h3&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;updated:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comments:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;keywords:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;top&lt;span class=&quot;emphasis&quot;&gt;_img:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;mathjax:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;katex:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;aside:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;aplayer:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;highlight_&lt;/span&gt;shrink:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;写法&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;title&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【必需】页面标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;date&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【必需】页面创建日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;type&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【必需】标籤、分类和友情链接三个页面需要配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;updated&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】页面更新日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;description&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】页面描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;keywords&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】页面关键字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;comments&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示页面评论模块(默认 true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;top_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】页面顶部图片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;mathjax&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;katex&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;aside&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示侧边栏 (默认 true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;aplayer&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;highlight_shrink&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&quot;Post-Front-matter&quot;&gt;&lt;a href=&quot;#Post-Front-matter&quot; class=&quot;headerlink&quot; title=&quot;Post Front-matter&quot;&gt;&lt;/a&gt;Post Front-matter&lt;/h3&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;updated:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;keywords:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;top&lt;span class=&quot;emphasis&quot;&gt;_img:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;comments:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;cover:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;toc:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;toc_&lt;/span&gt;number:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;toc&lt;span class=&quot;emphasis&quot;&gt;_style_&lt;/span&gt;simple:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright&lt;span class=&quot;emphasis&quot;&gt;_author:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;copyright_&lt;/span&gt;author&lt;span class=&quot;emphasis&quot;&gt;_href:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;copyright_&lt;/span&gt;url:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright&lt;span class=&quot;emphasis&quot;&gt;_info:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;mathjax:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;katex:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;aplayer:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;highlight_&lt;/span&gt;shrink:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;aside:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;写法&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;title&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【必需】文章标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;date&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【必需】文章创建日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;updated&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章更新日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;tags&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章标籤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;categories&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章分类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;keywords&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章关键字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;description&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;top_img&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章顶部图片&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;cover&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;comments&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示文章评论模块(默认 true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;toc&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示文章TOC(默认为设置中toc的enable配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;toc_number&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示toc_number(默认为设置中toc的number配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;toc_style_simple&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示 toc 简洁模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;copyright&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;copyright_author&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章版权模块的文章作者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;copyright_author_href&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章版权模块的文章作者链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;copyright_url&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章版权模块的文章连结链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;copyright_info&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】文章版权模块的版权声明文字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;mathjax&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;katex&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;aplayer&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;highlight_shrink&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;aside&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;【可选】显示侧边栏 (默认 true)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：我的博客根目录路径为 【G:/hexo-blog/blog-demo】，下文所说的根目录都是此路径，将用&lt;code&gt;[BlogRoot]&lt;/code&gt;代替。如果不清楚根目录路径，请回到教程 &lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;，查看你执行&lt;code&gt;hexo init xxx&lt;/code&gt;这条命令时所选择的路径，例如我选择的路径是【G:/hexo-blog】，我的博客根目录即为【G:/hexo-blog/xxx】。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;标签页&quot;&gt;&lt;a href=&quot;#标签页&quot; class=&quot;headerlink&quot; title=&quot;标签页&quot;&gt;&lt;/a&gt;标签页&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;前往你的Hexo博客根目录，打开cmd命令窗口执行&lt;code&gt;hexo new page tags&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在【BlogRoot/source/】会生成一个含有&lt;code&gt;index.md&lt;/code&gt;文件的&lt;code&gt;tags&lt;/code&gt;文件夹。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/29/62937c8344bbb.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;修改【BlogRoot/source/tags/index.md】，添加&lt;code&gt;type: &quot;tags&quot;&lt;/code&gt;。&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2022-05-29 21:42:56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &quot;tags&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;分类页&quot;&gt;&lt;a href=&quot;#分类页&quot; class=&quot;headerlink&quot; title=&quot;分类页&quot;&gt;&lt;/a&gt;分类页&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;前往你的Hexo博客根目录，打开cmd命令窗口执行&lt;code&gt;hexo new page categories&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在【BlogRoot/source/】会生成一个含有&lt;code&gt;index.md&lt;/code&gt;文件的&lt;code&gt;categories&lt;/code&gt;文件夹。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/29/62937c8627deb.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;修改【BlogRoot/source/categories/index.md】，添加&lt;code&gt;type: &quot;categories&quot;&lt;/code&gt;。&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2022-05-29 21:57:07&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &quot;categories&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;友情链接&quot;&gt;&lt;a href=&quot;#友情链接&quot; class=&quot;headerlink&quot; title=&quot;友情链接&quot;&gt;&lt;/a&gt;友情链接&lt;/h2&gt;&lt;h3 id=&quot;创建友情链接页面&quot;&gt;&lt;a href=&quot;#创建友情链接页面&quot; class=&quot;headerlink&quot; title=&quot;创建友情链接页面&quot;&gt;&lt;/a&gt;创建友情链接页面&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;前往你的Hexo博客根目录，打开cmd命令窗口执行&lt;code&gt;hexo new page link&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在【BlogRoot/source/】会生成一个含有&lt;code&gt;index.md&lt;/code&gt;文件的&lt;code&gt;link&lt;/code&gt;文件夹。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/29/629385dc3918c.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;修改【BlogRoot/source/link/index.md】，添加&lt;code&gt;type: &quot;link&quot;&lt;/code&gt;。&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: link&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2022-05-29 22:03:35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &quot;link&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;友情链接页面添加友链信息&quot;&gt;&lt;a href=&quot;#友情链接页面添加友链信息&quot; class=&quot;headerlink&quot; title=&quot;友情链接页面添加友链信息&quot;&gt;&lt;/a&gt;友情链接页面添加友链信息&lt;/h3&gt;&lt;p&gt;前往Hexo博客目录（【BlogRoot/source/_data】）创建一个文件&lt;code&gt;link.yml&lt;/code&gt;（如果沒有 _data 文件夹，请自行创建）。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/29/629385e182b48.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;友情链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;class_desc:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;那些人，那些事&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;link_list:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;唐志远の博客&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;link:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://fe32.top/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;avatar:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://bu.dusays.com/2022/01/14/cd5ffd485f867.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;网站&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;class_desc:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;值得推荐的网站&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;link_list:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;Twitter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;link:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://twitter.com/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;avatar:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;descr:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;社交分享平台&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;class_name&lt;/code&gt;和&lt;code&gt;class_desc&lt;/code&gt;支持 html 格式，如不需要，也可以留空。&lt;/p&gt;
&lt;p&gt;如果你想设置成本站友链页的效果，请参考教程：&lt;a href=&quot;https://fe32.top/articles/0xiipgum/&quot;&gt;基于Butterfly的外挂标签引入&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;图库&quot;&gt;&lt;a href=&quot;#图库&quot; class=&quot;headerlink&quot; title=&quot;图库&quot;&gt;&lt;/a&gt;图库&lt;/h2&gt;&lt;p&gt;图库页面只是普通的页面，你只需要&lt;code&gt;hexo new page xxxxx&lt;/code&gt;创建你的页面就行。&lt;/p&gt;
&lt;p&gt;然后使用标签外挂 &lt;a href=&quot;https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB&quot;&gt;galleryGroup&lt;/a&gt;，具体用法请查看对应的内容。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;class=&quot;gallery-group-main&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;span class=&quot;string&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;galleryGroup&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;ACG&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;那些二次元的故事&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/gallery/ACG&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://bu.dusays.com/2022/11/26/638228a86935a.webp&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;%&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;span class=&quot;string&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;galleryGroup&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;岳阳&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;2017年5月岳阳&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/gallery/YY&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://bu.dusays.com/2022/11/27/63831b681e9f8.jpg&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;%&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;span class=&quot;string&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;galleryGroup&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;OH MY GIRL&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;关于OH MY GIRL的图片&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/Gallery/ohmygirl&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;%&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;gallery-group-main&quot;&gt;

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/26/638228a86935a.webp&quot; alt=&quot;Group Image Gallery&quot;&gt;
  &lt;figcaption&gt;
  &lt;div class=&quot;gallery-group-name&quot;&gt;ACG&lt;/div&gt;
  &lt;p&gt;那些二次元的故事&lt;/p&gt;
  &lt;a href=&quot;/@3.7.1/gallery/ACG&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;
  &lt;/figcaption&gt;
  &lt;/figure&gt;
  

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/11/27/63831b681e9f8.jpg&quot; alt=&quot;Group Image Gallery&quot;&gt;
  &lt;figcaption&gt;
  &lt;div class=&quot;gallery-group-name&quot;&gt;岳阳&lt;/div&gt;
  &lt;p&gt;2017年5月岳阳&lt;/p&gt;
  &lt;a href=&quot;/@3.7.1/gallery/YY&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;
  &lt;/figcaption&gt;
  &lt;/figure&gt;
  

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg&quot; alt=&quot;Group Image Gallery&quot;&gt;
  &lt;figcaption&gt;
  &lt;div class=&quot;gallery-group-name&quot;&gt;OH MY GIRL&lt;/div&gt;
  &lt;p&gt;关于OH MY GIRL的图片&lt;/p&gt;
  &lt;a href=&quot;/@3.7.1/Gallery/ohmygirl&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;
  &lt;/figcaption&gt;
  &lt;/figure&gt;
  
&lt;/div&gt;

&lt;h3 id=&quot;子页面&quot;&gt;&lt;a href=&quot;#子页面&quot; class=&quot;headerlink&quot; title=&quot;子页面&quot;&gt;&lt;/a&gt;子页面&lt;/h3&gt;&lt;p&gt;子页面也是普通的页面，你只需要&lt;code&gt;hexo new page xxxxx&lt;/code&gt;创建你的页面就行。&lt;/p&gt;
&lt;p&gt;然后使用标签外挂 &lt;a href=&quot;https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A&quot;&gt;gallery&lt;/a&gt;，具体用法请查看对应的内容。&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{&lt;span class=&quot;string&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;gallery&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;%&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;span class=&quot;string&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;endgallery&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;%&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;

&lt;div class=&quot;note pink icon flat&quot;&gt;&lt;i class=&quot;note-icon fas fa-fan&quot;&gt;&lt;/i&gt;&lt;p&gt;如果你想要使用 &lt;code&gt;/photo/ohmygirl&lt;/code&gt; 这样的链接显示你的图片内容&lt;/p&gt;
&lt;p&gt;你可以把创建好的 &lt;code&gt;ohmygirl&lt;/code&gt;整个文件夹移到 &lt;code&gt;photo&lt;/code&gt;文件夹里去&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;404页面&quot;&gt;&lt;a href=&quot;#404页面&quot; class=&quot;headerlink&quot; title=&quot;404页面&quot;&gt;&lt;/a&gt;404页面&lt;/h2&gt;&lt;p&gt;主題內置了一个简单的404页面，可在设置中开放。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如需本地预览，请访问 &lt;a href=&quot;http://localhost:4000/404.html&quot;&gt;http://localhost:4000/404.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# A simple 404 page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;error_404:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;enable:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;subtitle:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;页面沒有找到&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;background:&lt;/span&gt;</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 从零开始搭建个人博客（三）</title>
    <link href="https://fe32.top/articles/hexo1603/"/>
    <id>https://fe32.top/articles/hexo1603/</id>
    <published>2022-05-25T17:37:23.000Z</published>
    <updated>2023-06-27T14:39:00.824Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;阅读本篇前，请确保已经完成下面两篇文章的步骤：&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;博客搭建过程遇到任何问题，优先在本页面搜索，检查是否已经有该配置教程。&lt;/li&gt;
&lt;li&gt;遇到问题可以优先在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到站长的回复。&lt;/li&gt;
&lt;li&gt;实在解决不了的问题可添加博主 Wechat ，添加好友时请备注自己的姓名+专业，如 张三 计算机科学与技术。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;安装主题&quot;&gt;&lt;a href=&quot;#安装主题&quot; class=&quot;headerlink&quot; title=&quot;安装主题&quot;&gt;&lt;/a&gt;安装主题&lt;/h2&gt;&lt;p&gt;本站基于&lt;code&gt;Hexo&lt;/code&gt;搭建，用的 🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 主题 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt;，请注意最新的🦋 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly.git&quot;&gt;hexo-theme-butterfly&lt;/a&gt; 版本已经更新到 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.3.0&quot;&gt;v4.3.0&lt;/a&gt; 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你是 &lt;a href=&quot;https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/3.7.1&quot;&gt;v3.7.1&lt;/a&gt; 之外的版本，可能有些地方会有出入，请留意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本人用的是&lt;code&gt;npm&lt;/code&gt;方式安装的 &lt;code&gt;hexo-theme-butterfly&lt;/code&gt;，后续魔改时更改的文件都是【G:/hexo-blog/blog-demo/node_modules/hexo-theme-butterfly】文件夹中的文件。如果你是&lt;code&gt;git clone&lt;/code&gt;克隆方式安装的主题，请在【G:/hexo-blog/blog-demo/themes/butterfly】文件夹下修改对应的文件。&lt;/p&gt;
&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;&lt;i class=&quot;fab fa-npm&quot;&gt;&lt;/i&gt;npm安装（推荐）&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;&lt;i class=&quot;fab fa-github-square&quot;&gt;&lt;/i&gt;Git安装 (Github)&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--3&quot;&gt;&lt;i class=&quot;fab fa-git-square&quot;&gt;&lt;/i&gt;Git安装 (Gitee)&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;blockquote&gt;&lt;p&gt;此方法只支持 Hexo 5.0.0以上版本&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;在你的博客根目录（我这里路径为【G:/hexo-blog/blog-demo】）打开cmd命令窗口执行&lt;code&gt;npm i hexo-theme-butterfly@3.7.1&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装最新主题版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i hexo-theme-butterfly&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;安装指定主题版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i hexo-theme-butterfly@3.7.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628f966a256e9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!-- &lt;details cyan&gt;&lt;summary&gt; 查看截图 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;p&gt; –&amp;gt;&lt;/p&gt;&lt;!-- 
              &lt;/div&gt;
            &lt;/details&gt; --&gt;

&lt;p&gt;安装成功后可在【G:/hexo-blog/blog-demo/node_modules】文件夹下找到&lt;code&gt;hexo-theme-butterfly&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628f9689c193e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!-- &lt;details cyan&gt;&lt;summary&gt; 查看截图 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;p&gt; –&amp;gt;&lt;/p&gt;&lt;!-- 
              &lt;/div&gt;
            &lt;/details&gt; --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div class=&quot;note info no-icon flat&quot;&gt;&lt;p&gt;升级方法：在博客根目录下，运行 &lt;code&gt;npm update hexo-theme-butterfly&lt;/code&gt;。&lt;br&gt;升级前请将&lt;code&gt;hexo-theme-butterfly&lt;/code&gt;文件夹备份，npm更新会直接覆盖成新的包。&lt;/p&gt;
&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;p&gt;在你的博客根目录里（我这里路径为【G:/hexo-blog/blog-demo】），打开Git工具，执行命令即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装最新主题版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;安装指定主题版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; -b 3.7.1 https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628f988e1737b.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628f9890f1042.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装成功后可在【G:/hexo-blog/blog-demo/themes】文件夹下找到&lt;code&gt;butterfly&lt;/code&gt;，可以将&lt;code&gt;landscape&lt;/code&gt;文件夹删掉。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628f989404550.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;note info no-icon flat&quot;&gt;&lt;p&gt;升级方法：在主题目录下，运行&lt;code&gt;git pull&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--3&quot;&gt;&lt;p&gt;在你的博客根目录里【我这里路径为【G:/hexo-blog/blog-demo】），打开Git工具，执行命令即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装最新主题版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://gitee.com/iamjerryw/hexo-theme-butterfly.git themes/butterfly &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;安装指定主题版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; -b 3.7.1 https://gitee.com/iamjerryw/hexo-theme-butterfly.git themes/butterfly &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note info no-icon flat&quot;&gt;&lt;p&gt;升级方法：在主题目录下，运行&lt;code&gt;git pull&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;应用主题&quot;&gt;&lt;a href=&quot;#应用主题&quot; class=&quot;headerlink&quot; title=&quot;应用主题&quot;&gt;&lt;/a&gt;应用主题&lt;/h2&gt;&lt;p&gt;修改站点配置文件&lt;code&gt;_config.yml&lt;/code&gt;，把主题改为&lt;code&gt;butterfly&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;theme:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;butterfly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h2&gt;&lt;p&gt;如果你没有&lt;code&gt;pug&lt;/code&gt;以及&lt;code&gt;stylus&lt;/code&gt;的渲染器，请下载安装：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-renderer-pug hexo-renderer-stylus --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;升级建议&quot;&gt;&lt;a href=&quot;#升级建议&quot; class=&quot;headerlink&quot; title=&quot;升级建议&quot;&gt;&lt;/a&gt;升级建议&lt;/h2&gt;&lt;p&gt;为了减少升级主题后带来的不便，请使用以下方法（&lt;strong&gt;建议，可以不做&lt;/strong&gt;）。&lt;/p&gt;
&lt;div class=&quot;tabs&quot; id=&quot;span-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--1&quot;&gt;_config.butterfly.yml&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#span--2&quot;&gt;butterfly.yml&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;span--1&quot;&gt;&lt;p&gt;把主题文件夹中的 &lt;code&gt;_config.yml&lt;/code&gt; 复制到 Hexo 根目录里，同时重新命名为 &lt;code&gt;_config.butterfly.yml&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;以后只需要在 &lt;code&gt;_config.butterfly.yml&lt;/code&gt;进行配置就行。&lt;/p&gt;
&lt;p&gt;Hexo会自动合併主题中的&lt;code&gt;_config.yml&lt;/code&gt;和 &lt;code&gt;_config.butterfly.yml&lt;/code&gt;里的配置，如果存在同名配置，会使用&lt;code&gt;_config.butterfly.yml&lt;/code&gt;的配置，其优先度较高。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/cf493023d33ff.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;span--2&quot;&gt;&lt;div class=&quot;note pink no-icon flat&quot;&gt;&lt;p&gt;从 3.3.0 开始，这种方法不再支持&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;del&gt;为了减少升级主题后带来的不便, &lt;code&gt;Butterfly&lt;/code&gt; 使用了 &lt;a href=&quot;https://hexo.io/docs/data-files.html&quot;&gt;data files&lt;/a&gt; 特性。&lt;/del&gt;&lt;br&gt;&lt;del&gt;推荐把主题默认的配置文件&lt;code&gt;_config.yml&lt;/code&gt; 复製到 Hexo 根目录下的&lt;code&gt;source/_data/&lt;/code&gt; 目录下，然后将文件名改为 &lt;code&gt;butterfly.yml&lt;/code&gt;（如果&lt;code&gt;source/_data/&lt;/code&gt; 的目录不存在就创建一个）。&lt;/del&gt; &lt;/p&gt;
&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;&lt;del&gt;注意，如果你创建了 &lt;code&gt;butterfly.yml&lt;/code&gt;, 它将会替换主题默认配置文件&lt;code&gt;_config.yml&lt;/code&gt;里的配置项 (不是合併而是替换，3.1.0开始将会是合併) 採用&lt;code&gt;butterfly.yml&lt;/code&gt;的目的是，因为升级主题的时候，有可能会覆盖到配置文件，以至于每次更新的时候都需要重新配置文件。如果使用&lt;code&gt;butterfly.yml&lt;/code&gt;，就算主题目录下的&lt;code&gt;_config.yml&lt;/code&gt;被覆盖，主题只会去&lt;code&gt;butterfly.yml&lt;/code&gt;读取配置。 由于主题在添加功能或者修復Bugs的情况下，可能会涉及到配置文件的修改。这时候，如果升级主题，需要把新增加的配置添加到&lt;code&gt;butterfly.yml&lt;/code&gt;去，不然很大机会会出现报错。（ 3.1.0 之后，应该不会出现这种情况）&lt;/del&gt;&lt;/p&gt;
&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 从零开始搭建个人博客（二）</title>
    <link href="https://fe32.top/articles/hexo1602/"/>
    <id>https://fe32.top/articles/hexo1602/</id>
    <published>2022-05-24T16:51:23.000Z</published>
    <updated>2023-06-27T14:39:00.829Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;阅读本篇前，请先配置好相应的环境，请仔细阅读教程 &lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;博客搭建过程遇到任何问题，优先在本页面搜索，检查是否已经有该配置教程。&lt;/li&gt;
&lt;li&gt;遇到问题可以优先在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到站长的回复。&lt;/li&gt;
&lt;li&gt;实在解决不了的问题可添加博主 Wechat ，添加好友时请备注自己的姓名+专业，如 张三 计算机科学与技术。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;初始化-Hexo-项目&quot;&gt;&lt;a href=&quot;#初始化-Hexo-项目&quot; class=&quot;headerlink&quot; title=&quot;初始化 Hexo 项目&quot;&gt;&lt;/a&gt;初始化 Hexo 项目&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在目标路径（我这里选的路径为【G:/hexo-blog】）打开cmd命令窗口，执行&lt;code&gt;hexo init&lt;/code&gt;初始化项目。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init blog-demo(项目名)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628f9b8d1f815.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!-- &gt; 若出现`spawn failed`的问题，请自行百度，有很多教程。 --&gt;&lt;/li&gt;
&lt;li&gt;进入&lt;code&gt;blog-demo&lt;/code&gt; ，输入&lt;code&gt;npm i&lt;/code&gt;安装相关依赖。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; blog-demo  //进入blog-demo文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/25/628e4950c04ea.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;初始化项目后，&lt;code&gt;blog-demo&lt;/code&gt;有如下结构：&lt;br&gt;【node_modules】：依赖包&lt;br&gt;【scaffolds】：生成文章的一些模板&lt;br&gt;【source】：用来存放你的文章&lt;br&gt;【themes】：主题&lt;br&gt;【.npmignore】：发布时忽略的文件（可忽略）&lt;br&gt;【_config.landscape.yml】：主题的配置文件&lt;br&gt;【_config.yml】：博客的配置文件&lt;br&gt;【package.json】：项目名称、描述、版本、运行和开发等信息&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/25/628e495733539.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入&lt;code&gt;hexo server&lt;/code&gt;或者&lt;code&gt;hexo s&lt;/code&gt;。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628e54121d098.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;打开浏览器，输入地址：&lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt; ，看到下面的效果，说明你的博客已经构建成功了。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628e5423df640.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;将静态博客挂载到-GitHub-Pages&quot;&gt;&lt;a href=&quot;#将静态博客挂载到-GitHub-Pages&quot; class=&quot;headerlink&quot; title=&quot;将静态博客挂载到 GitHub Pages&quot;&gt;&lt;/a&gt;将静态博客挂载到 GitHub Pages&lt;/h2&gt;&lt;p&gt;上一篇文章中，我们已经完成了对 GitHub 账户的注册以及 Github Pages 的创建，并且为 GitHub 配置了 SSH key, 我们将博客部署到 GitHub Pages 上即可。&lt;/p&gt;
&lt;h3 id=&quot;安装-hexo-deployer-git&quot;&gt;&lt;a href=&quot;#安装-hexo-deployer-git&quot; class=&quot;headerlink&quot; title=&quot;安装 hexo-deployer-git&quot;&gt;&lt;/a&gt;安装 hexo-deployer-git&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;修改-config-yml-文件&quot;&gt;&lt;a href=&quot;#修改-config-yml-文件&quot; class=&quot;headerlink&quot; title=&quot;修改 _config.yml 文件&quot;&gt;&lt;/a&gt;修改 _config.yml 文件&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;blog-demo&lt;/code&gt;目录下的&lt;code&gt;_config.yml&lt;/code&gt;，就是整个&lt;code&gt;Hexo框架&lt;/code&gt;的配置文件了。可以在里面修改大部分的配置。详细可参考官方的&lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration&quot;&gt;配置描述&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;修改最后一行的配置，将repository修改为你自己的github项目地址即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;请检查自己的默认分支是不是&lt;code&gt;master&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;deploy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;repository:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;git@github.com:tzy13755126023/tzy13755126023.github.io.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;branch:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;部署项目到-GitHub&quot;&gt;&lt;a href=&quot;#部署项目到-GitHub&quot; class=&quot;headerlink&quot; title=&quot;部署项目到 GitHub&quot;&gt;&lt;/a&gt;部署项目到 GitHub&lt;/h3&gt;&lt;p&gt;修改好配置后，运行如下命令，将代码部署到 GitHub。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。&lt;/li&gt;
&lt;li&gt;hexo generate：生成静态文章，可以用&lt;code&gt;hexo g&lt;/code&gt;缩写&lt;/li&gt;
&lt;li&gt;hexo deploy：部署文章，可以用&lt;code&gt;hexo d&lt;/code&gt;缩写&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628e5ef06d42a.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：deploy时可能要你输入 username 和 password。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果出现&lt;code&gt;Deploy done&lt;/code&gt;，则说明部署成功了。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628e5f017030e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;打开浏览器访问：&lt;a href=&quot;https://tzy13755126023.github.io/&quot;&gt;https://tzy13755126023.github.io&lt;/a&gt; ，这时候我们就可以看到博客内容了。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628e5f7360e9c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;如果出现了本地 css 样式正常，部署到 github 上样式错乱，请移步 &lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt; 一文，其中提到过关于 本地样式正常，部署后就样式错乱的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;设置个人域名&quot;&gt;&lt;a href=&quot;#设置个人域名&quot; class=&quot;headerlink&quot; title=&quot;设置个人域名&quot;&gt;&lt;/a&gt;设置个人域名&lt;/h2&gt;&lt;p&gt;现在你的个人网站的地址是 &lt;code&gt;yourname.github.io&lt;/code&gt;。如果觉得不够定制化，可以购买一个专属域名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这一步不是必要的，如果目前还不想买域名可以先跳过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;腾讯云、阿里云等都是不错的选择，博主选择的阿里云的&lt;code&gt;.com&lt;/code&gt;。购买域名后，实名认证进入阿里云控制台，点云解析进去，找到你刚买的域名，点进去添加两条解析记录，记录值 请填写&lt;code&gt;&amp;lt;用户名&amp;gt;.github.io&lt;/code&gt;，如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/26/628e6464cee7b.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以我的域名&lt;code&gt;fe32.top&lt;/code&gt;为例，进行如下说明：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;主机记录&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;www&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;解析后的域名为 &lt;a href=&quot;http://www.fe32.top/&quot;&gt;www.fe32.top&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;@&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;直接解析主域名 yafine-blog.cn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;*&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;泛解析，匹配其他所有域名 *.yafine-blog.cn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;mail&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;将域名解析为 mail.yafine-blog.cn，通常用于解析邮箱服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;二级域名&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;如 abc.yafine-blog.cn，填写 abc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;手机网站&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;如 m.yafine-blog.cn，填写 m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;显性URL&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;不支持泛解析（泛解析：将所有子域名解析到同一地址）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;将域名指向云服务器，请选择「A」； 将域名指向另一个域名，请选择「CNAME」； 建立邮箱请选择「MX」，根据邮箱服务商提供的 MX 记录填写。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;记录类型&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;A&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;用来指定域名的 IPv4 地址（如 8.8.8.8），如果需要将域名指向一个 IP 地址，就需要添加 A 记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;CNAME&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;如果需要将域名指向另一个域名，再由另一个域名提供 IP 地址，就需要添加 CNAME 记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;MX&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;如果需要设置邮箱，让邮箱能收到邮件，就需要添加 MX 记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;TXT&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;在这里可以填写任何东西，长度限制 255。绝大多数的 TXT 记录是用来做 SPF 记录（反垃圾邮件）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;NS&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;域名服务器记录，如果需要将子域名交给其他 DNS 服务商解析，就需要添加 NS 记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;AAAA&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;用来指定主机名（或域名）对应的 IPv6 地址（例如：ff06:0:0:0:0:0:0:c3）记录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;SRV&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;记录了哪台计算机提供了哪个服务。格式为：服务的名字、点、协议的类型，例如：_xmpp-server_tcp。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;显性 URL&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;从一个地址 301 重定向到另一个地址的时候，就需要添加显性 URL 记录（注：DNSPod 目前只支持 301 重定向）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;隐性 URL&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;类似于显性 URL，区别在于隐性 URL 不会改变地址栏的域名。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;这时候你的项目根目录应该会出现一个名为&lt;code&gt;CNAME&lt;/code&gt;的文件。如果没有的话，打开博客&lt;code&gt;/source&lt;/code&gt;目录，我的是&lt;code&gt;G:/hexo-blog/blog-demo/source&lt;/code&gt;，新建&lt;code&gt;CNAME&lt;/code&gt;文件，注意没有后缀。然后在里面写上你的域名(例如：fe32.top)，保存。最后运行&lt;code&gt;hexo g&lt;/code&gt;、&lt;code&gt;hexo d&lt;/code&gt;上传到&lt;code&gt;github&lt;/code&gt;。这样到最后当你在地址栏输入&lt;code&gt;xxx.github.io&lt;/code&gt;时，才会自动跳转到你的域名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开你的&lt;code&gt;github&lt;/code&gt;博客项目，点击&lt;code&gt;settings&lt;/code&gt;，点击&lt;code&gt;Pages&lt;/code&gt;，拉到下面&lt;code&gt;Custom domain&lt;/code&gt;处，填上你自己的域名 ，保存。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot;</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Web页面全链路性能优化指南</title>
    <link href="https://fe32.top/articles/we0522bs/"/>
    <id>https://fe32.top/articles/we0522bs/</id>
    <published>2022-05-22T15:30:06.000Z</published>
    <updated>2023-06-27T14:39:00.718Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;性能优化不单指优化一个页面的打开速度，在开发环境将一个项目的启动时间缩短使开发体验更好也属于性能优化，大文件上传时为其添加分片上传、断点续传也属于性能优化。在项目开发以及用户使用的过程中，能够让任何一个链路快一点，都可以被叫做性能优化。&lt;/p&gt;
&lt;p&gt;本文会对web页面的全链路进行完整的讲解并针对每一步找到能做的性能优化点，本文的目标是极致的性能优化。&lt;/p&gt;
&lt;p&gt;本文的大致流程为先讲理论知识，比如如何评价一个页面的性能好与不好、如果获取性能指标，如何使用各种性能相关工具，浏览器如何获取并渲染页面。&lt;/p&gt;
&lt;p&gt;接下来我们会进入性能优化环节，在这个环节我会详细讲解在页面的整个流程中，哪些地方可以做哪些优化。&lt;/p&gt;
&lt;h1 id=&quot;浏览器渲染原理&quot;&gt;&lt;a href=&quot;#浏览器渲染原理&quot; class=&quot;headerlink&quot; title=&quot;浏览器渲染原理&quot;&gt;&lt;/a&gt;浏览器渲染原理&lt;/h1&gt;&lt;p&gt;我们需要知道浏览器是如何渲染一个页面的，我们才能知道如何对页面进行性能优化，所以这里我们对一些基础知识进行讲解。&lt;/p&gt;
&lt;h2 id=&quot;进程与线程&quot;&gt;&lt;a href=&quot;#进程与线程&quot; class=&quot;headerlink&quot; title=&quot;进程与线程&quot;&gt;&lt;/a&gt;进程与线程&lt;/h2&gt;&lt;p&gt;浏览器有多种进程，其中最主要的5种进程如下。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/23/628b96c2e0bec.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;浏览器进程 负责界面展示、用户交互、子进程管理、提供存储等&lt;/li&gt;
&lt;li&gt;渲染进程 每个页面都有一个单独的渲染进程，用于渲染页面，包含webworker线程&lt;/li&gt;
&lt;li&gt;网络进程 主要处理网络资源加载（HTML、CSS、JS、IMAGE、AJAX等）&lt;/li&gt;
&lt;li&gt;GPU进程 3D绘制，提高性能&lt;/li&gt;
&lt;li&gt;插件进程 chrome插件，每个插件占用一个进程&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;输入url到页面展示完整过程&quot;&gt;&lt;a href=&quot;#输入url到页面展示完整过程&quot; class=&quot;headerlink&quot; title=&quot;输入url到页面展示完整过程&quot;&gt;&lt;/a&gt;输入url到页面展示完整过程&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/23/628b9dcaedcbd.jpg&quot; alt=&quot;图1&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;图1&lt;/span&gt;&lt;/div&gt;

&lt;h3 id=&quot;用户输入&quot;&gt;&lt;a href=&quot;#用户输入&quot; class=&quot;headerlink&quot; title=&quot;用户输入&quot;&gt;&lt;/a&gt;用户输入&lt;/h3&gt;&lt;p&gt;用户在&lt;code&gt;浏览器进程&lt;/code&gt;输入并按下回车健后，浏览器判断用户输入的url是否为正确的url，如果不是，则使用默认的搜索引擎将该关键字拼接成url。&lt;/p&gt;
&lt;h3 id=&quot;卸载原页面并重定向到新页面&quot;&gt;&lt;a href=&quot;#卸载原页面并重定向到新页面&quot; class=&quot;headerlink&quot; title=&quot;卸载原页面并重定向到新页面&quot;&gt;&lt;/a&gt;卸载原页面并重定向到新页面&lt;/h3&gt;&lt;p&gt;然后浏览器会将现有页面卸载掉并重定向到用户新输入的url页面，也就是图中【Process Unload Event】和【Redirect】流程。&lt;/p&gt;
&lt;p&gt;此时浏览器会准备一个&lt;code&gt;渲染进程&lt;/code&gt;用于渲染即将到来的页面，和一个&lt;code&gt;网络进程&lt;/code&gt;用于发送网络请求。&lt;/p&gt;
&lt;h3 id=&quot;处理Service-Worker&quot;&gt;&lt;a href=&quot;#处理Service-Worker&quot; class=&quot;headerlink&quot; title=&quot;处理Service Worker&quot;&gt;&lt;/a&gt;处理Service Worker&lt;/h3&gt;&lt;p&gt;如果当前页面注册了Service Worker那么它可以拦截当前网站所有的请求，进行判断是否需要向远程发送网络请求。也就是图中【Service Worker Init】与【Service Worker Fecth Event 】步骤&lt;/p&gt;
&lt;p&gt;如果不需要发送网络请求，则取本地文件。如果需要则进行下一步。&lt;/p&gt;
&lt;h3 id=&quot;网络请求&quot;&gt;&lt;a href=&quot;#网络请求&quot; class=&quot;headerlink&quot; title=&quot;网络请求&quot;&gt;&lt;/a&gt;网络请求&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;OSI网络七层模型：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层&lt;br&gt;在实际应用中物理层、数据链路层被统称为物理层，会话层、表示层、应用层被统称为应用层，所以实际使用时通常分为4个层级：&lt;br&gt;【物理层】&amp;gt;【网络层(IP)】&amp;gt;【传输层(TCP/UDP)】&amp;gt;【应用层(HTTP)】&lt;br&gt;也就是图中【HTTP Cache】、【DNS】、【TCP】、【Request】、【Response】步骤&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/23/628b99a83152f.webp&quot; alt=&quot;图2&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;图2&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;浏览器会拿着url通过网络进程进行如下步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据url查询本地是否已经有强制缓存，如果有则判断缓存是否过期，如果没过期则直接返回缓存内容，也就是图1中【HTTP Cache】步骤&lt;/li&gt;
&lt;li&gt;如果没有强制缓存或者缓存已过期，则将该请求加入队列进行排队准备发送网络请求，也就是图2中【正在排队】，然后进入DNS解析阶段，也就是图1中【DNS】以及图2中的【DNS查找】，DNS根据域名解析出对应的IP地址。(DNS基于UDP)。&lt;/li&gt;
&lt;li&gt;使用IP寻址找到对方，然后根据IP地址+端口号创建一个TCP连接(三次握手)，也就是图1中【TCP】以及图2中的【初始连接】创建完成后利用TCP连接来传输数据。(TCP会将数据拆分为多个数据包，进行有序传输，如果丢包会重发，TCP的特点是可靠、有序)&lt;/li&gt;
&lt;li&gt;判断当前协议是否为https，如果为https，则进行SSL协商，将数据进行加密，如果为http协议则不进行加密(明文传输)，也就是图2中的【SSL】。&lt;/li&gt;
&lt;li&gt;开始发送http请求(请求行/请求头/请求体)，也就是图1中【Request】以及图2中的【已发送请求】。HTTP协议有多个版本，目前使用最多的版本为HTTP/1.1，HTTP/1.1发送完成后默认不会断开。keep-alive 默认打开，为了下次传输数据时复用上次创建的连接。每个域名最多同时建立6个TCP连接，所以同一时间最多发生6个请求。&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;HTTP协议&lt;/strong&gt;的各个版本特性如下：&lt;br&gt;&lt;code&gt;HTTP/0.9&lt;/code&gt;没有请求头和响应头，不区分传输的内容类型，因为当时只传输HTML。&lt;br&gt;&lt;code&gt;HTTP/1.0&lt;/code&gt;提供了请求头和响应头，可以传输不同类型的内容数据。根据请求响应头的不同来处理不同的资源，HTTP1.0每次发完请求都会断开TCP连接。有新的请求时再次创建TCP连接。&lt;br&gt;&lt;code&gt;HTTP/1.1&lt;/code&gt;默认开启了 keep-alive ，它能够让一个TCP连接中传输多个HTTP请求，也叫链路复用。但一个TCP连接同一时间只能发送一个HTTP请求，为了不阻塞多个请求，Chrome允许创建6个TCP连接，所以在HTTP/1.1中，最多能够同时发送6个网络请求。&lt;br&gt;&lt;code&gt;HTTP/2.0&lt;/code&gt;HTTP/2.0使用同一个TCP连接来发送数据，他把多个请求通过二进制分贞层实现了分贞，然后把数据传输给服务器。也叫&lt;code&gt;多路复用&lt;/code&gt;，多个请求复用同一个TCP连接。HTTP/2.0会将所有以:开头的请求头做一个映射表，然后使用&lt;code&gt;hpack&lt;/code&gt;进行压缩，使用这种方式会使请求头更小。服务器可主动推送数据给客户端。&lt;br&gt;&lt;code&gt;HTTP/3.0&lt;/code&gt;使用UDP实现，在UDP上一层加入一层&lt;code&gt;QUIC协议&lt;/code&gt;，解决了TCP协议中的队头阻塞问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;服务器收到数据后解析HTTP请求(请求行/请求头/请求体)，处理完成后生成状态码和HTTP响应(响应行/响应头/响应体)后返回给客户端，也就是图2的【等待中】在做的事情。&lt;/li&gt;
&lt;li&gt;客户端接收到HTTP响应后根据状态码进行对应的处理，如果状态码为304则直接代表协商缓存生效，直接取本地的缓存文件。如果不是则下载内容。也就是图1中【Response】以及图2中的【下载内容】步骤。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;服务端响应&quot;&gt;&lt;a href=&quot;#服务端响应&quot; class=&quot;headerlink&quot; title=&quot;服务端响应&quot;&gt;&lt;/a&gt;服务端响应&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;网络请求&lt;/code&gt;第&lt;code&gt;6&lt;/code&gt;步中，服务器收到HTTP请求后需要根据请求信息来进行解析，并返回给客户端想要的数据，这也就服务端响应。&lt;/p&gt;
&lt;p&gt;服务端可以响应并返回给客户端很多种类型的资源，这里主要介绍html类型。&lt;/p&gt;
&lt;p&gt;目前前端处理服务端响应html请求主要分为SSR服务端渲染与CSR客户端渲染，CSR就是返回一个空的HTML模版，然后浏览器加载js后通过js动态渲染页面。SSR是服务端在接受到请求时事先在服务端渲染好html返回给客户端后，客户端再进行客户端激活。&lt;/p&gt;
&lt;p&gt;在打开一个站点的首屏页的完整链路中，使用SSR服务端渲染时的速度要远大于CSR客户端渲染，并且SSR对SEO友好。所以对于首屏加载速度比较敏感或者需要优化SEO的站点来说，使用SSR是更好的选择。&lt;/p&gt;
&lt;h3 id=&quot;浏览器渲染详细流程&quot;&gt;&lt;a href=&quot;#浏览器渲染详细流程&quot; class=&quot;headerlink&quot; title=&quot;浏览器渲染详细流程&quot;&gt;&lt;/a&gt;浏览器渲染详细流程&lt;/h3&gt;&lt;p&gt;浏览器渲染详细流程主要在&lt;code&gt;网络请求&lt;/code&gt;中的地7步。浏览器下载完&lt;code&gt;html&lt;/code&gt;内容后进行解析何渲染页面的流程。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/23/628ba7881b1a8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;渲染流程分为4种情况，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTML中无任何CSS相关标签&lt;/li&gt;
&lt;li&gt;CSS相关标签在HTML最顶部，且在解析到内容标签（&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;）时已经解析完CSS相关标签&lt;/li&gt;
&lt;li&gt;CSS相关标签在HTML最顶部，但在解析到内容标签（&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;）时CSS相关标签尚未解析完&lt;/li&gt;
&lt;li&gt;CSS相关标签在HTML最底部&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面的流程是对上图的文字版解析。读者可将以上4种情况分别带入到如下的渲染流程中走一遍。就能理解浏览器的完整渲染过程了。&lt;/p&gt;
&lt;h4 id=&quot;【HTML】&quot;&gt;&lt;a href=&quot;#【HTML】&quot; class=&quot;headerlink&quot; title=&quot;【HTML】&quot;&gt;&lt;/a&gt;【HTML】&lt;/h4&gt;&lt;p&gt;浏览器收到html资源后先预扫描&lt;code&gt;&amp;lt;link /&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;并加载对应资源。&lt;/p&gt;
&lt;h4 id=&quot;【HTML-Parser】&quot;&gt;&lt;a href=&quot;#【HTML-Parser】&quot; class=&quot;headerlink&quot; title=&quot;【HTML Parser】&quot;&gt;&lt;/a&gt;【HTML Parser】&lt;/h4&gt;&lt;p&gt;对HTML字符串从上到下逐行解析，每解析完成一部分都会拿着解析结果进入下一步骤。&lt;/p&gt;
&lt;h4 id=&quot;【DOM-Tree】&quot;&gt;&lt;a href=&quot;#【DOM-Tree】&quot; class=&quot;headerlink&quot; title=&quot;【DOM Tree】&quot;&gt;&lt;/a&gt;【DOM Tree】&lt;/h4&gt;&lt;p&gt;&lt;code&gt;css&lt;/code&gt;相关标签跳过此步骤。&lt;/p&gt;
&lt;p&gt;如果当前解析结果为&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;相关标签，则生成DOM树&lt;code&gt;（window.document）&lt;/code&gt;后进入下一步。&lt;/p&gt;
&lt;p&gt;如果当前解析结果为&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;相关标签且并且没有添加异步属性，则先停止【HTML Parser】的进行，等待&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;资源加载完成后，然后按照以下2种情况处理，当处理完成后便停止当前&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;标签后续步骤的执行，并继续进行新标签【HTML Parser】步骤的解析。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果HTML从未解析到过&lt;code&gt;css&lt;/code&gt;相关节点则立即执行&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;。(此时页面会把&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;之前的内容都显示在页面上)&lt;/li&gt;
&lt;li&gt;如果HTML已经解析到过&lt;code&gt;css&lt;/code&gt;相关节点则等待&lt;code&gt;css&lt;/code&gt;相关节点解析完成后再执行&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;。(在CSS解析完的一瞬间会触发之前所有等待CSS资源解析的任务，假如在解析&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;之前还有&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;的话，理论上&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;应该在执行&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;之前被绘制到页面上，但因为Chrome是按照贞为单位来进行元素的绘制的，如果绘制&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;与执行&lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;的时间在一贞之内，则会因为在绘制&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;时被&lt;code&gt;js&lt;/code&gt;阻塞，所以实际上需要等&lt;code&gt;js&lt;/code&gt;执行完才会实际完成&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;的绘制)。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;【Style-Sheets】&quot;&gt;&lt;a href=&quot;#【Style-Sheets】&quot; class=&quot;headerlink&quot; title=&quot;【Style Sheets】&quot;&gt;&lt;/a&gt;【Style Sheets】&lt;/h4&gt;&lt;p&gt;&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;相关标签跳过此步骤。&lt;/p&gt;
&lt;p&gt;如果当前解析结果为&lt;code&gt;css&lt;/code&gt;相关标签，则等待其CSS资源加载完成，同时继续进行下一行的 【HTML Parser】。&lt;/p&gt;
&lt;h4 id=&quot;【CSS-Parser】&quot;&gt;&lt;a href=&quot;#【CSS-Parser】&quot; class=&quot;headerlink&quot; title=&quot;【CSS Parser】&quot;&gt;&lt;/a&gt;【CSS Parser】&lt;/h4&gt;&lt;p&gt;&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;相关标签跳过此步骤。&lt;/p&gt;
&lt;p&gt;当CSS资源加载完毕后，对CSS从上到下逐行解析。&lt;/p&gt;
&lt;h4 id=&quot;【Style-Rules】&quot;&gt;&lt;a href=&quot;#【Style-Rules】&quot; class=&quot;headerlink&quot; title=&quot;【Style Rules】&quot;&gt;&lt;/a&gt;【Style Rules】&lt;/h4&gt;&lt;p&gt;&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;相关标签跳过此步骤。&lt;/p&gt;
&lt;p&gt;当CSS解析完毕后，生成CSS规则树，也叫CSSOM，也就是&lt;code&gt;window.document.styleSheets&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;【Attachment】&quot;&gt;&lt;a href=&quot;#【Attachment】&quot; class=&quot;headerlink&quot; title=&quot;【Attachment】&quot;&gt;&lt;/a&gt;【Attachment】&lt;/h4&gt;&lt;p&gt;根据DOM树与CSS规则树计算出每个节点的具体样式。分为两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果当前节点为&lt;div&gt;相关节点&lt;br&gt;如果HTML从未解析到过css相关标签则使用HTML默认样式，如果已经解析到过css相关标签则阻塞等待css标签也完成【Attachment】步骤后才进入下一步。&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;如果当前节点为css相关节点&lt;br&gt;则需要根据是否在之前已经渲染过CSS资源中对应的DOM节点，如果已经渲染过则需要重绘。如果未渲染过任何相关DOM节点则此步骤为最后一步。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;【Render-Tree】&quot;&gt;&lt;a href=&quot;#【Render-Tree】&quot; class=&quot;headerlink&quot; title=&quot;【Render Tree】&quot;&gt;&lt;/a&gt;【Render Tree】&lt;/h4&gt;&lt;p&gt;生成渲染树，在此阶段已经可以将具体的某个&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;与对应的CSS样式对应起来了。有了渲染树后浏览器就能根据当前浏览器的状态计算出某个DOM节点的样式、大小、宽度、是否独占一行等信息。计算完成后把一些不需要显示出来的节点在渲染树中删掉。如&lt;code&gt;display: none&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;【Layout】&quot;&gt;&lt;a href=&quot;#【Layout】&quot; class=&quot;headerlink&quot; title=&quot;【Layout】&quot;&gt;&lt;/a&gt;【Layout】&lt;/h4&gt;&lt;p&gt;通过渲染树进行分层（根据定位属性、透明属性、transform属性、clip属性等）生成图层树。&lt;/p&gt;
&lt;h4 id=&quot;【Painting】&quot;&gt;&lt;a href=&quot;#【Painting】&quot; class=&quot;headerlink&quot; title=&quot;【Painting】&quot;&gt;&lt;/a&gt;【Painting】&lt;/h4&gt;&lt;p&gt;绘制所有图层，并转交给合成线程来最最终的合并所有图层的处理。&lt;/p&gt;
&lt;h4 id=&quot;【Display】&quot;&gt;&lt;a href=&quot;#【Display】&quot; class=&quot;headerlink&quot; title=&quot;【Display】&quot;&gt;&lt;/a&gt;【Display】&lt;/h4&gt;&lt;p&gt;最终生成页面并显示到浏览器上。&lt;/p&gt;
&lt;h2 id=&quot;浏览器处理每一帧的流程&quot;&gt;&lt;a href=&quot;#浏览器处理每一帧的流程&quot; class=&quot;headerlink&quot; title=&quot;浏览器处理每一帧的流程&quot;&gt;&lt;/a&gt;浏览器处理每一帧的流程&lt;/h2&gt;&lt;p&gt;浏览器在渲染完页面之后还需要不间断的处理很多内容的，比如动画、用户事件、定时器等。因此当浏览器渲染完页面后，还会在之后的每一帧到来时执行以下的流程。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628bb016bb39b.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;【Input events】处理用户事件，先处理【阻塞事件Blocking】包括&lt;code&gt;touch&lt;/code&gt;和&lt;code&gt;wheel&lt;/code&gt;事件，后处理【非阻塞事件Non-blocking】包括&lt;code&gt;click&lt;/code&gt;和&lt;code&gt;keypress&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;【JS】处理完用户事件后执行【定时器Timers】&lt;/li&gt;
&lt;li&gt;【Begin frame】处理完定时器后开始进行【每帧事件Per frame events】的处理，包括窗口大小改变、滚动、媒体查询的更改、动画事件。&lt;/li&gt;
&lt;li&gt;【rAF】处理完帧事件后执行&lt;code&gt;requestAnimationFrame&lt;/code&gt;回调函数和&lt;code&gt;IntersectionObserver&lt;/code&gt;回调函数。&lt;/li&gt;
&lt;li&gt;【Layout】然后【重新计算样式Recalc style】、【更新布局Update layout】、【调整Observer回调的大小Resize Observer callbacks】&lt;/li&gt;
&lt;li&gt;【Paint】然后【合成更新Compositing update】、【Paint invalidation】、【Record】&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Chrome性能优化相关工具&quot;&gt;&lt;a href=&quot;#Chrome性能优化相关工具&quot; class=&quot;headerlink&quot; title=&quot;Chrome性能优化相关工具&quot;&gt;&lt;/a&gt;Chrome性能优化相关工具&lt;/h1&gt;&lt;p&gt;了解完浏览器渲染原理，我们还需要知道根据哪些指标才能判断一个页面性能的好坏，在Chrome中这些指标应该怎么获取。以及Chrome都为我们提供了哪些性能相关的工具，如何使用。&lt;/p&gt;
&lt;h2 id=&quot;Chrome-Performance-性能&quot;&gt;&lt;a href=&quot;#Chrome-Performance-性能&quot; class=&quot;headerlink&quot; title=&quot;Chrome Performance(性能)&quot;&gt;&lt;/a&gt;Chrome Performance(性能)&lt;/h2&gt;&lt;p&gt;Performance既是一个Chrome工具，可用于性能检测。&lt;/p&gt;
&lt;p&gt;同样又是一套JS API，可在Chrome中执行。&lt;/p&gt;
&lt;h3 id=&quot;Chrome-Performance-工具的使用&quot;&gt;&lt;a href=&quot;#Chrome-Performance-工具的使用&quot; class=&quot;headerlink&quot; title=&quot;Chrome Performance 工具的使用&quot;&gt;&lt;/a&gt;Chrome Performance 工具的使用&lt;/h3&gt;&lt;p&gt;打开Chrome调试面板选择&lt;strong&gt;Performance&lt;/strong&gt;，中文版为&lt;strong&gt;性能&lt;/strong&gt;，点击刷新按钮，Performance会刷新并录制当前页面，然后我们就可以在面板中看到如下的各种性能相关细节。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628bb12aad445.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;Performance-API介绍&quot;&gt;&lt;a href=&quot;#Performance-API介绍&quot; class=&quot;headerlink&quot; title=&quot;Performance API介绍&quot;&gt;&lt;/a&gt;Performance API介绍&lt;/h3&gt;&lt;p&gt;js中存在Performance API，可用于性能检测，具体如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628bb154a5ffe.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/23/628b9dcaedcbd.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;【Process Unload Event】等待上一个页面卸载。在我们输入url后浏览器需要卸载上一个页面的内容然后再去执行navigationStart导航开始。&lt;/li&gt;
&lt;li&gt;【Redirect】浏览器卸载完上一个页面后会执行redirectStart然后将当前页面重定向到用户新输入的url页面。完成重定向后会执行redirectEnd&lt;/li&gt;
&lt;li&gt;【Service Worker Init】如果当前页面注册了Service Worker那么执行workerStart对Service Worker进行初始化操作。&lt;/li&gt;
&lt;li&gt;【Service Worker Fecth Event 】浏览器准备好发送请求，在发送之前会执行fetchStart&lt;/li&gt;
&lt;li&gt;【HTTP Cache】如果有缓存则直接取缓存，如果没有的话则继续解析&lt;/li&gt;
&lt;li&gt;【DNS】如果没有缓存则执行domainLookupStart 然后去解析DNS，解析完会执行domainLookupEnd&lt;/li&gt;
&lt;li&gt;【TCP】DNS解析完会执行contentStart，然后进行TCP三次握手，如果是HTTPS则执行secureConnectionStart进行SSL协商。完成后会执行contentEnd。&lt;/li&gt;
&lt;li&gt;【Request】TCP连接创建完成后执行requestStart，然后开始真正的发送请求&lt;/li&gt;
&lt;li&gt;【Response】请求被响应且首字节返回时会先执行responseStart，响应全部接收完毕后会执行responseEnd&lt;/li&gt;
&lt;li&gt;【Processing】响应完执行domLoading开始加载dom，dom加载完毕后执行domInteractive，此时dom已经可以交互。然后执行domContentLoadedEventStart，当dom整个节点全部加载完毕并执行完DOMContentLoaded事件后会触发domContentLoadedEventEnd简称DCL当dom整个加载完成会执行domComplete，此时页面资源已经全部加载完毕。&lt;/li&gt;
&lt;li&gt;【onLoad】当页面资源已经全部加载完毕后会执行loadEventStart，触发window.onload事件，load事件完成后会执行loadEventEnd。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用Performance-API获取性能相关指标&quot;&gt;&lt;a href=&quot;#使用Performance-API获取性能相关指标&quot; class=&quot;headerlink&quot; title=&quot;使用Performance API获取性能相关指标&quot;&gt;&lt;/a&gt;使用Performance API获取性能相关指标&lt;/h3&gt;&lt;p&gt;接下来我们来了解一下目前常用的性能指标，并且我们需要知道其中一些关键指标如何用Performance API获取。&lt;/p&gt;
&lt;h4 id=&quot;TTFB-首字节时间&quot;&gt;&lt;a href=&quot;#TTFB-首字节时间&quot; class=&quot;headerlink&quot; title=&quot;TTFB 首字节时间&quot;&gt;&lt;/a&gt;TTFB 首字节时间&lt;/h4&gt;&lt;p&gt;&lt;code&gt;TTFB（Time To First Byte）&lt;/code&gt;: 从发送请求到数据返回第一个字节所消耗的时间。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { responseStart, requestStart } = performance.timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TTFB = responseStart - requestStart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;FP-首次绘制&quot;&gt;&lt;a href=&quot;#FP-首次绘制&quot; class=&quot;headerlink&quot; title=&quot;FP 首次绘制&quot;&gt;&lt;/a&gt;FP 首次绘制&lt;/h4&gt;&lt;p&gt;&lt;code&gt;FP (First Paint) 首次绘制&lt;/code&gt;: 第一个像素绘制到页面上的时间。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; paint = performance.getEntriesByType(&lt;span class=&quot;string&quot;&gt;&#39;paint&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; FP = paint[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].startTime&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;FCP-首次内容绘制&quot;&gt;&lt;a href=&quot;#FCP-首次内容绘制&quot; class=&quot;headerlink&quot; title=&quot;FCP 首次内容绘制&quot;&gt;&lt;/a&gt;FCP 首次内容绘制&lt;/h4&gt;&lt;p&gt;&lt;code&gt;FCP (First Contentful Paint) 首次内容绘制&lt;/code&gt;: 标记浏览器渲染来自 DOM 第一位内容的时间点，该内容可能是&lt;strong&gt;文本&lt;/strong&gt;、&lt;strong&gt;图像&lt;/strong&gt;、&lt;strong&gt;SVG&lt;/strong&gt; 甚至 &lt;strong&gt;元素&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; paint = performance.getEntriesByType(&lt;span class=&quot;string&quot;&gt;&#39;paint&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; FCP = paint[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].startTime&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;FMP-首次有效绘制&quot;&gt;&lt;a href=&quot;#FMP-首次有效绘制&quot; class=&quot;headerlink&quot; title=&quot;FMP 首次有效绘制&quot;&gt;&lt;/a&gt;FMP 首次有效绘制&lt;/h4&gt;&lt;p&gt;&lt;code&gt;FMP(First Meaningful Paint) 首次有效绘制&lt;/code&gt;: 例如，在 YouTube 观看页面上，主视频就是主角元素。&lt;/p&gt;
&lt;p&gt;图片可以没加载完成，但整体的骨架已经加载完成了。&lt;/p&gt;
&lt;p&gt;1秒内完成FMP的概率超过80%，那就代表这个网站是一个性能较好的网站。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; FMP = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; performanceObserverFMP = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PerformanceObserver(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;entryList, observer&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; entries = entryList.getEntries()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  observer.disconnect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  FMP = entries[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].startTime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 需要在元素中添加 elementtiming=&quot;meaningful&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performanceObserverFMP.observe({ &lt;span class=&quot;attr&quot;&gt;entryTypes&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;element&#39;&lt;/span&gt;] })&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;TTI-可交互时间&quot;&gt;&lt;a href=&quot;#TTI-可交互时间&quot; class=&quot;headerlink&quot; title=&quot;TTI 可交互时间&quot;&gt;&lt;/a&gt;TTI 可交互时间&lt;/h4&gt;&lt;p&gt;&lt;code&gt;TTI (Time to Interactive) 可交互时间&lt;/code&gt; : DOM树构建完毕，可以绑定事件的时间&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { domInteractive, fetchStart } = performance.timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TTI = domInteractive - fetchStart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;LCP-最大内容渲染&quot;&gt;&lt;a href=&quot;#LCP-最大内容渲染&quot; class=&quot;headerlink&quot; title=&quot;LCP  最大内容渲染&quot;&gt;&lt;/a&gt;LCP  最大内容渲染&lt;/h4&gt;&lt;p&gt;&lt;code&gt;LCP (Largest Contentful Paint) 最大内容渲染&lt;/code&gt;: 代表在viewport中最大的页面元素加载的时间。LCP的数据会通过PerformanceEntry对象记录, 每次出现更大的内容渲染, 则会产生一个新的PerformanceEntry对象(2019年11月新增)。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; LCP = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; performanceObserverLCP = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PerformanceObserver(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;entryList, observer&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; entries = entryList.getEntries()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  observer.disconnect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  LCP = entries[entries.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].startTime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performanceObserverLCP.observe({ &lt;span class=&quot;attr&quot;&gt;entryTypes&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;largest-contentful-paint&#39;&lt;/span&gt;] })&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;DCL&quot;&gt;&lt;a href=&quot;#DCL&quot; class=&quot;headerlink&quot; title=&quot;DCL&quot;&gt;&lt;/a&gt;DCL&lt;/h4&gt;&lt;p&gt;&lt;code&gt;DCL (DomContentloaded)&lt;/code&gt;: 当 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，无需等待样式表、图像和子框架的完成加载。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { domContentLoadedEventEnd, fetchStart } = performance.timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DCL = domContentLoadedEventEnd - fetchStart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;L-全部加载完毕&quot;&gt;&lt;a href=&quot;#L-全部加载完毕&quot; class=&quot;headerlink&quot; title=&quot;L 全部加载完毕&quot;&gt;&lt;/a&gt;L 全部加载完毕&lt;/h4&gt;&lt;p&gt;&lt;code&gt;L (onLoad)&lt;/code&gt;, 当依赖的资源(图片、文件等), 全部加载完毕之后才会触发。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { loadEventStart, fetchStart } = performance.timing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; L = loadEventStart - fetchStart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;FID-首次输入延迟&quot;&gt;&lt;a href=&quot;#FID-首次输入延迟&quot; class=&quot;headerlink&quot; title=&quot;FID 首次输入延迟&quot;&gt;&lt;/a&gt;FID 首次输入延迟&lt;/h4&gt;&lt;p&gt;&lt;code&gt;FID (First Input Delay) 首次输入延迟&lt;/code&gt;: 指标衡量的是从用户首次与您的网站进行交互（即当他们单击链接，点击按钮等）到浏览器实际能够访问之间的时间。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; FID = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; performanceObserverFID = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PerformanceObserver(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;entryList, observer&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; entries = entryList.getEntries()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  observer.disconnect()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  FID = entries[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].processingStart - entries[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].startTime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performanceObserverFID.observe({ &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;first-input&#39;&lt;/span&gt;], &lt;span class=&quot;attr&quot;&gt;buffered&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; })&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;TBT-页面阻塞总时长&quot;&gt;&lt;a href=&quot;#TBT-页面阻塞总时长&quot; class=&quot;headerlink&quot; title=&quot;TBT 页面阻塞总时长&quot;&gt;&lt;/a&gt;TBT 页面阻塞总时长&lt;/h4&gt;&lt;p&gt;&lt;code&gt;TBT (Total Blocking Time) 页面阻塞总时长&lt;/code&gt;: TBT汇总所有加载过程中阻塞用户操作的时长，在FCP和TTI之间任何long task中阻塞部分都会被汇总。&lt;/p&gt;
&lt;h4 id=&quot;CLS-累积布局偏移&quot;&gt;&lt;a href=&quot;#CLS-累积布局偏移&quot; class=&quot;headerlink&quot; title=&quot;CLS 累积布局偏移&quot;&gt;&lt;/a&gt;CLS 累积布局偏移&lt;/h4&gt;&lt;p&gt;&lt;code&gt;CLS (Cumulative Layout Shift) 累积布局偏移&lt;/code&gt;: 总结起来就是一个元素初始时和其hidden之间的任何时间如果元素偏移了, 则会被计算进去, 具体的计算方法可看这篇文章 &lt;a href=&quot;https://web.dev/cls/&quot;&gt;https://web.dev/cls/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;SI&quot;&gt;&lt;a href=&quot;#SI&quot; class=&quot;headerlink&quot; title=&quot;SI&quot;&gt;&lt;/a&gt;SI&lt;/h4&gt;&lt;p&gt;&lt;code&gt;SI (Speed Index)&lt;/code&gt;: 指标用于显示页面可见部分的显示速度, 单位是时间。&lt;/p&gt;
&lt;h2 id=&quot;Coverage-覆盖率&quot;&gt;&lt;a href=&quot;#Coverage-覆盖率&quot; class=&quot;headerlink&quot; title=&quot;Coverage(覆盖率)&quot;&gt;&lt;/a&gt;Coverage(覆盖率)&lt;/h2&gt;&lt;p&gt;获取代码未使用占比。获取代码未使用占比&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628bb981db5c8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Lighthouse&quot;&gt;&lt;a href=&quot;#Lighthouse&quot; class=&quot;headerlink&quot; title=&quot;Lighthouse&quot;&gt;&lt;/a&gt;Lighthouse&lt;/h2&gt;&lt;p&gt;获取性能报告并查看推荐优化项。可以在本地安装命令行工具来使用，也可以通过Chrome来使用。&lt;/p&gt;
&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;命令行方式使用&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-2&quot;&gt;在Chrome中使用&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;-1&quot;&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g lighthouse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lighthouse --view https://m.baidu.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;-2&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cf77a92095.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cf77e139ff.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Network-网络&quot;&gt;&lt;a href=&quot;#Network-网络&quot; class=&quot;headerlink&quot; title=&quot;Network(网络)&quot;&gt;&lt;/a&gt;Network(网络)&lt;/h2&gt;&lt;h3 id=&quot;网络请求中的Timing-时间&quot;&gt;&lt;a href=&quot;#网络请求中的Timing-时间&quot; class=&quot;headerlink&quot; title=&quot;网络请求中的Timing(时间)&quot;&gt;&lt;/a&gt;网络请求中的Timing(时间)&lt;/h3&gt;&lt;p&gt;能获取网络请求的时间消耗细节，可以根据耗时来决定优化策略。优先优化耗时最长的。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cf966b69da.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;正在排队：网络请求队列的排队时间&lt;/li&gt;
&lt;li&gt;已停止：阻塞住用于处理其他事情的时间&lt;/li&gt;
&lt;li&gt;DNS查找：用于DNS解析IP地址的时间&lt;/li&gt;
&lt;li&gt;初始连接：创建TCP连接时间&lt;/li&gt;
&lt;li&gt;SSL：用于SSL协商的时间&lt;/li&gt;
&lt;li&gt;已发送请求：用于发送请求的时间&lt;/li&gt;
&lt;li&gt;等待中：请求发出至接收响应的时间也可以理解为服务端处理请求的时间&lt;/li&gt;
&lt;li&gt;下载内容：下载响应的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;网络请求的优先级&quot;&gt;&lt;a href=&quot;#网络请求的优先级&quot; class=&quot;headerlink&quot; title=&quot;网络请求的优先级&quot;&gt;&lt;/a&gt;网络请求的优先级&lt;/h3&gt;&lt;p&gt;浏览器会根据资源的类型决定优先请求哪些资源，优先级高的请求能够优先被加载。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cf9e853256.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;右击此处勾选优先级可打开优先级功能，在请求中便可看到网络请求的优先级。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cf9efddd7f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;不同资源类型的优先级排序如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最高：html、style&lt;/li&gt;
&lt;li&gt;高：font、fetch、script&lt;/li&gt;
&lt;li&gt;低：image、track&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;网页总资源信息&quot;&gt;&lt;a href=&quot;#网页总资源信息&quot; class=&quot;headerlink&quot; title=&quot;网页总资源信息&quot;&gt;&lt;/a&gt;网页总资源信息&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cfb20c1315.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;58个请求：网页一共多少个请求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6.9 MB 项资源：网页资源一共6.9MB大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DOMContentLoaded 454 毫秒：DOM加载完毕的时长&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;加载时间 1.02 秒：onload完毕的时长&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Network配置&quot;&gt;&lt;a href=&quot;#Network配置&quot; class=&quot;headerlink&quot; title=&quot;Network配置&quot;&gt;&lt;/a&gt;Network配置&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cfcbe97759.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;网页性能优化&quot;&gt;&lt;a href=&quot;#网页性能优化&quot; class=&quot;headerlink&quot; title=&quot;网页性能优化&quot;&gt;&lt;/a&gt;网页性能优化&lt;/h1&gt;&lt;p&gt;上面我们分别讲解了进程与线程、浏览器打开一个页面的完整过程、浏览器处理每一帧时的流程、Chrome性能相关的各种工具以及性能相关的各种指标。以上内容都掌握之后我们再考虑性能优化遍有了思路，我们在页面展示的任意一个步骤中对其进行优化都能对整个网页的展示性能产生影响。&lt;/p&gt;
&lt;p&gt;下面列出了一个页面能优化的所有内容，读者可根据自己的业务情况结合性能工具来做适合自己的优化方式。&lt;/p&gt;
&lt;h2 id=&quot;网络优化策略&quot;&gt;&lt;a href=&quot;#网络优化策略&quot; class=&quot;headerlink&quot; title=&quot;网络优化策略&quot;&gt;&lt;/a&gt;网络优化策略&lt;/h2&gt;&lt;h3 id=&quot;减少HTTP请求数&quot;&gt;&lt;a href=&quot;#减少HTTP请求数&quot; class=&quot;headerlink&quot; title=&quot;减少HTTP请求数&quot;&gt;&lt;/a&gt;减少HTTP请求数&lt;/h3&gt;&lt;p&gt;合并JS、合并CSS、合理内嵌JS和CSS、使用雪碧图。&lt;/p&gt;
&lt;h3 id=&quot;使用HTTP缓存&quot;&gt;&lt;a href=&quot;#使用HTTP缓存&quot; class=&quot;headerlink&quot; title=&quot;使用HTTP缓存&quot;&gt;&lt;/a&gt;使用HTTP缓存&lt;/h3&gt;&lt;p&gt;使用强制缓存可以不走网络请求，直接走本地缓存数据来加载资源。&lt;/p&gt;
&lt;p&gt;使用协商缓存可以减少数据传输，当不需要更新数据时可通知客户端直接使用本地缓存。&lt;/p&gt;
&lt;h3 id=&quot;使用-HTTP-2-0&quot;&gt;&lt;a href=&quot;#使用-HTTP-2-0&quot; class=&quot;headerlink&quot; title=&quot;使用 HTTP/2.0&quot;&gt;&lt;/a&gt;使用 HTTP/2.0&lt;/h3&gt;&lt;p&gt;HTTP/2.0使用同一个TCP连接来发送数据，他把多个请求通过二进制分贞层实现了分贞，然后把数据传输给服务器。也叫多路复用，多个请求复用同一个TCP连接。&lt;/p&gt;
&lt;p&gt;HTTP/2.0会将所有以:开头的请求头做一个映射表，然后使用hpack进行压缩，使用这种方式会使请求头更小。&lt;/p&gt;
&lt;p&gt;服务器可主动推送数据给客户端。&lt;/p&gt;
&lt;h3 id=&quot;避免重定向&quot;&gt;&lt;a href=&quot;#避免重定向&quot; class=&quot;headerlink&quot; title=&quot;避免重定向&quot;&gt;&lt;/a&gt;避免重定向&lt;/h3&gt;&lt;p&gt;301、302 重定向会降低响应速度。&lt;/p&gt;
&lt;h3 id=&quot;使用-dns-prefetch&quot;&gt;&lt;a href=&quot;#使用-dns-prefetch&quot; class=&quot;headerlink&quot; title=&quot;使用 dns-prefetch&quot;&gt;&lt;/a&gt;使用 dns-prefetch&lt;/h3&gt;&lt;p&gt;DNS请求虽然占用的带宽较少，但会有很高的延迟，由其在移动端网络会更加明显。&lt;/p&gt;
&lt;p&gt;使用 dns-prefetch 可以对网站中使用到的域名提前进行解析。提高资源加载速度。&lt;/p&gt;
&lt;p&gt;通过&lt;strong&gt;DNS预解析技术&lt;/strong&gt;可以很好的降低延迟，在访问以图片为主的移动端网站时，使用DNS预解析的情意中下页面加载时间可以减少5%。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://a.hagan.com/&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;使用域名分片&quot;&gt;&lt;a href=&quot;#使用域名分片&quot; class=&quot;headerlink&quot; title=&quot;使用域名分片&quot;&gt;&lt;/a&gt;使用域名分片&lt;/h3&gt;&lt;p&gt;在HTTP/1.1中，一个域名同时最多创建6个TCP连接，将资源放在多个域名下可提高请求的并发数。&lt;/p&gt;
&lt;h3 id=&quot;CDN&quot;&gt;&lt;a href=&quot;#CDN&quot; class=&quot;headerlink&quot; title=&quot;CDN&quot;&gt;&lt;/a&gt;CDN&lt;/h3&gt;&lt;p&gt;静态资源全上CDN，CDN能非常有效的加快网站静态资源的访问速度。&lt;/p&gt;
&lt;h3 id=&quot;压缩&quot;&gt;&lt;a href=&quot;#压缩&quot; class=&quot;headerlink&quot; title=&quot;压缩&quot;&gt;&lt;/a&gt;压缩&lt;/h3&gt;&lt;p&gt;gzip压缩、html压缩、js压缩、css压缩、图片压缩。&lt;/p&gt;
&lt;h3 id=&quot;使用contenthash&quot;&gt;&lt;a href=&quot;#使用contenthash&quot; class=&quot;headerlink&quot; title=&quot;使用contenthash&quot;&gt;&lt;/a&gt;使用contenthash&lt;/h3&gt;&lt;p&gt;contenthash可以根据文件内容在文件名中加hash，可用于浏览器缓存文件，当文件没有改变时便直接取本地缓存数据。&lt;/p&gt;
&lt;h3 id=&quot;合理使用preload、prefetch&quot;&gt;&lt;a href=&quot;#合理使用preload、prefetch&quot; class=&quot;headerlink&quot; title=&quot;合理使用preload、prefetch&quot;&gt;&lt;/a&gt;合理使用preload、prefetch&lt;/h3&gt;&lt;p&gt;preload预加载、prefetch空闲时间加载。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;preload&quot; as=&quot;style&quot; href=&quot;/static/style.css&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;preload&quot; as=&quot;font&quot; href=&quot;/static/font.woff&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;preload&quot; as=&quot;script&quot; href=&quot;/static/script.js&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;prefetch&quot; as=&quot;style&quot; href=&quot;/static/style.css&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;prefetch&quot; as=&quot;font&quot; href=&quot;/static/font.woff&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;prefetch&quot; as=&quot;script&quot; href=&quot;/static/script.js&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;两者都不会阻塞&lt;code&gt;onload&lt;/code&gt;事件，&lt;code&gt;prefetch&lt;/code&gt;会在页面空闲时候再进行加载，是提前预加载之后可能要用到的资源，不一定是当前页面使用的，&lt;code&gt;preload&lt;/code&gt;预加载的是当前页面的资源。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./preload.css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如上代码，预加载了css但并没有使用。浏览器在页面&lt;code&gt;onload&lt;/code&gt;完成一段时间后，发现还没有引用预加载的资源时，浏览器会在控制台输出下图的提示信息。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cfd2d0b279.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;preload和prefetch可根据资源类型决定资源加载的优先级，详细优先级如代码：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 最高 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./file.xxx&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 高 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./file.xxx&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fetch&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./file.xxx&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;script&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./file.xxx&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 低 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./file.xxx&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;as&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;track&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./file.xxx&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cfd767a1b3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;浏览器渲染优化策略&quot;&gt;&lt;a href=&quot;#浏览器渲染优化策略&quot; class=&quot;headerlink&quot; title=&quot;浏览器渲染优化策略&quot;&gt;&lt;/a&gt;浏览器渲染优化策略&lt;/h2&gt;&lt;h3 id=&quot;关键渲染路径&quot;&gt;&lt;a href=&quot;#关键渲染路径&quot; class=&quot;headerlink&quot; title=&quot;关键渲染路径&quot;&gt;&lt;/a&gt;关键渲染路径&lt;/h3&gt;&lt;p&gt;当通过JS或者其他任意方式修改DOM后，浏览器会进入如下流程。&lt;/p&gt;
&lt;p&gt;【JS通过API修改DOM】&amp;gt;【计算样式】&amp;gt;【布局(重排)】&amp;gt;【绘制(重绘)】&amp;gt;【合成】。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Reflow 重排&lt;/code&gt;：重排在Chrome Performance中叫做布局，通常添加或删除元素、修改元素大小、移动元素位置、获取位置信息都会触发页面的重排，因为重排可能会改变元素的大小位置等信息，这样的改变会影响到页面大量其它元素的大小位置信息，会耗费掉大量的性能，所以在实际应用中我们应该尽可能的减少重排。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Repaint 重绘&lt;/code&gt;：重绘在Chrome Performance中叫做绘制，通常样式改变但没有影响位置时会触发重绘操作，重绘性能还好，但我们也需要尽量减少重绘，如果需要做一些动画，我们尽量使用CSS3动画，CSS3动画只需要在初始化时绘制一次，之后的动画都不会触发重绘操作。&lt;/p&gt;
&lt;h3 id=&quot;强制同步布局问题&quot;&gt;&lt;a href=&quot;#强制同步布局问题&quot; class=&quot;headerlink&quot; title=&quot;强制同步布局问题&quot;&gt;&lt;/a&gt;强制同步布局问题&lt;/h3&gt;&lt;p&gt;在同一个函数内，修改元素后又获取元素的位置时会触发强制同步布局，影响渲染性能。&lt;/p&gt;
&lt;p&gt;强制同步布局会使js强制将【计算样式】和【布局(重排)】操作提前到当前函数任务中，这样会导致每次运行时执行一次【计算样式】和【重排】，这样一定会影响页面渲染性能，而正常情况下【计算样式】和【重排】操作会在函数结束后统一执行。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;article&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; domArticle = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#article&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// const { offsetTop } = domArticle&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reflow&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; domH1 = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;h1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      domH1.innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;h1&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      domArticle.appendChild(domH1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 强制同步布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 在修改元素后又获取元素的位置时会触发强制同步布局，影响渲染性能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 解决办法是采用读写分离的原则，同一个函数内只读、只写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { offsetTop } = domArticle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(offsetTop)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i++) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reflow()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在函数运行时执行了10次【计算样式】和【重排】&lt;/p&gt;
&lt;p&gt;反复触发强制同步布局也叫&lt;strong&gt;布局抖动&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cfe1e5ce7e.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;article&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; domArticle = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#article&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { offsetTop } = domArticle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reflow&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; domH1 = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;h1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      domH1.innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;h1&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      domArticle.appendChild(domH1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 强制同步布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 在修改元素后又获取元素的位置时会触发强制同步布局，影响渲染性能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 解决办法是采用读写分离的原则，同一个函数内只读、只写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// const { offsetTop } = domArticle&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(offsetTop)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i++) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reflow()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们遵循读写分离的原则，将读取位置操作放到函数外，我们可以发现就算循环插入10个dom节点，也只需要执行一次【计算样式】和【重排】。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/24/628cfe54058e0.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;如何减少重排与重绘&quot;&gt;&lt;a href=&quot;#如何减少重排与重绘&quot; class=&quot;headerlink&quot; title=&quot;如何减少重排与重绘&quot;&gt;&lt;/a&gt;如何减少重排与重绘&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;脱离文档流(绝对定位、固定定位)，脱离文档流的元素进行重排不会影响到其他元素。&lt;/li&gt;
&lt;li&gt;图片渲染时增加宽高属性，宽高固定后，图片不会根据内容动态改变高度，便不会触发重排。&lt;/li&gt;
&lt;li&gt;尽量用CSS3动画，CSS3动画能最大程度减少重排与重绘。&lt;/li&gt;
&lt;li&gt;使用will-change: transform;将元素独立为一个单独的图层。（定位、透明、transform、clip都会产生独立图层）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;静态文件优化策略&quot;&gt;&lt;a href=&quot;#静态文件优化策略&quot; class=&quot;headerlink&quot; title=&quot;静态文件优化策略&quot;&gt;&lt;/a&gt;静态文件优化策略&lt;/h2&gt;&lt;h3 id=&quot;图片格式&quot;&gt;&lt;a href=&quot;#图片格式&quot; class=&quot;headerlink&quot; title=&quot;图片格式&quot;&gt;&lt;/a&gt;图片格式&lt;/h3&gt;&lt;h4 id=&quot;jpeg&quot;&gt;&lt;a href=&quot;#jpeg&quot; class=&quot;headerlink&quot; title=&quot;jpeg&quot;&gt;&lt;/a&gt;jpeg&lt;/h4&gt;&lt;p&gt;适合色彩丰富的图、Banner图。不适合：图形文字、图标、不支持透明度。&lt;/p&gt;
&lt;h4 id=&quot;png&quot;&gt;&lt;a href=&quot;#png&quot; class=&quot;headerlink&quot; title=&quot;png&quot;&gt;&lt;/a&gt;png&lt;/h4&gt;&lt;p&gt;适合纯色、透明、图标，支持纯透明和半透明。不适合色彩丰富图片，因为无损储存会导致储存体积大于jpeg。&lt;/p&gt;
&lt;h4 id=&quot;gif&quot;&gt;&lt;a href=&quot;#gif&quot; class=&quot;headerlink&quot; title=&quot;gif&quot;&gt;&lt;/a&gt;gif&lt;/h4&gt;&lt;p&gt;适合动画、可以动的图标。支持纯透明但不支持半透明，不适合色彩丰富的图片。&lt;/p&gt;
&lt;p&gt;埋点信息通常也会使用gif发送，因为1x1的gif图发送的网络请求比普通的get请求要小一些。&lt;/p&gt;
&lt;h4 id=&quot;webp&quot;&gt;&lt;a href=&quot;#webp&quot; class=&quot;headerlink&quot; title=&quot;webp&quot;&gt;&lt;/a&gt;webp&lt;/h4&gt;&lt;p&gt;支持纯透明和半透明，可以保证图片质量和较小的体积，适合Chrome和移动端浏览器。不适合其他浏览器。&lt;/p&gt;
&lt;h4 id=&quot;svg&quot;&gt;&lt;a href=&quot;#svg&quot; class=&quot;headerlink&quot; title=&quot;svg&quot;&gt;&lt;/a&gt;svg&lt;/h4&gt;&lt;p&gt;矢量格式，大小非常小，但渲染成本过高，适合小且色彩单一的图标。&lt;/p&gt;
&lt;h3 id=&quot;图片优化&quot;&gt;&lt;a href=&quot;#图片优化&quot; class=&quot;headerlink&quot; title=&quot;图片优化&quot;&gt;&lt;/a&gt;图片优化&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;减少图片资源的尺寸和大小，节约用户流量。&lt;/li&gt;
&lt;li&gt;设置alt=”xxx”属性，图像无法显示时会显示alt内容。&lt;/li&gt;
&lt;li&gt;图片懒加载， loading=”lazy”为原生，建议使用IntersectionObserver自己做懒加载。&lt;/li&gt;
&lt;li&gt;不同环境加载不同尺寸和像素的图片srcset与sizes的使用。&lt;/li&gt;
&lt;li&gt;采用渐进式加载 先加载占位图，然后加载模糊小图，最后加载真正清晰的图。&lt;/li&gt;
&lt;li&gt;使用Base64URL 减少图片请求数。&lt;/li&gt;
&lt;li&gt;采用雪碧图合并图片，减少请求数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;HTML优化&quot;&gt;&lt;a href=&quot;#HTML优化&quot; class=&quot;headerlink&quot; title=&quot;HTML优化&quot;&gt;&lt;/a&gt;HTML优化&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;语义化HTML，代码简洁清晰，利于SEO，便于开发维护。&lt;/li&gt;
&lt;li&gt;减少HTML嵌套关系，减少DOM节点数量。&lt;/li&gt;
&lt;li&gt;提前声明字符编码，让浏览器快速确定如何渲染网页内容&lt;code&gt;&amp;lt;html lang=&quot;en&quot;&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;删除多余空格、空行、注释、无用属性。&lt;/li&gt;
&lt;li&gt;减少iframe，子iframe会阻塞父级的onload事件。可以使用js动态给iframe赋值，就能解决这个问题。&lt;/li&gt;
&lt;li&gt;避免table布局。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;CSS优化&quot;&gt;&lt;a href=&quot;#CSS优化&quot; class=&quot;headerlink&quot; title=&quot;CSS优化&quot;&gt;&lt;/a&gt;CSS优化&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;减少伪类选择器，减少选择器层数、减少通配符选择器、减少正则选择器。&lt;/li&gt;
&lt;li&gt;避免css表达式&lt;code&gt;background-color: expression(...)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;删除空格、空行、注释、减少无意义的单位、css压缩。&lt;/li&gt;
&lt;li&gt;css外链，能走缓存。&lt;/li&gt;
&lt;li&gt;添加媒体字段，只加载有效的css文件。&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./small.css&quot; media=&quot;screen and (max-width:600px)&quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;./big.css&quot; media=&quot;screen and (min-width:601px)&quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;使用css &lt;code&gt;contain&lt;/code&gt;属性，能控制对应元素是否根据子集元素的改变进行重排。&lt;/li&gt;
&lt;li&gt;减少&lt;code&gt;@import&lt;/code&gt;使用，因为它使用串行加载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;JS优化&quot;&gt;&lt;a href=&quot;#JS优化&quot; class=&quot;headerlink&quot; title=&quot;JS优化&quot;&gt;&lt;/a&gt;JS优化&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;通过script的async、defer属性异步加载，不阻塞DOM渲染。&lt;/li&gt;
&lt;li&gt;减少DOM操作，缓存访问过的元素。&lt;/li&gt;
&lt;li&gt;不直接操作真实DOM，可以先修改，然后一次性应用到DOM上。（虚拟DOM、DOM碎片节点）。&lt;/li&gt;
&lt;li&gt;使用webworker解决复杂运算，避免复杂运算阻塞主线程，webworker线程位于渲染进程。&lt;/li&gt;
&lt;li&gt;图片懒加载，使用&lt;code&gt;IntersectionObserver&lt;/code&gt;实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      img {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./01.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./02.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./03.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./04.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./05.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./06.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./07.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./08.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./09.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./loading.gif&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./10.jpg&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; intersectionObserver = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntersectionObserver(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;changes&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        changes.forEach(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;item, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (item.intersectionRatio &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intersectionObserver.unobserve(item.target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item.target.src = item.target.dataset.src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; domImgList = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      domImgList.forEach(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;domImg&lt;/span&gt;) =&amp;gt;&lt;/span&gt; intersectionObserver.observe(domImg));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;虚拟滚动&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;requestAnimationFrame&lt;/code&gt;来做动画，使用&lt;code&gt;requestIdleCallback&lt;/code&gt;来进行空闲时的任务处理。&lt;/li&gt;
&lt;li&gt;尽量避免使用eval，性能差。&lt;/li&gt;
&lt;li&gt;使用事件委托，能减少事件绑定个数。事件越多性能越差。&lt;/li&gt;
&lt;li&gt;尽量使用canvas、css3动画。&lt;/li&gt;
&lt;li&gt;通过chrome覆盖率（Coverage）工具排查代码中未使用过的代码并将其删除。&lt;/li&gt;
&lt;li&gt;通过chrome性能（Performance）工具查看每个函数的执行性能并优化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;字体优化&quot;&gt;&lt;a href=&quot;#字体优化&quot; class=&quot;headerlink&quot; title=&quot;字体优化&quot;&gt;&lt;/a&gt;字体优化&lt;/h3&gt;&lt;p&gt;FOUT(Flash of Unstyled Text）等待一段时间，如果没加载完成，先显示默认。加载 后再进行切换。&lt;/p&gt;
&lt;p&gt;FOIT(F1ash of Invisib1e Text） 字体加载完毕后显示，加载超时降级系统字体（白屏）。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@font-face&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font-family: &#39;hagan&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      src: url(&#39;./font.ttc&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font-display: swap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* b1ock 35 内不显示，如果没加载完毕用默认的 */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* swap 显示老字体 在替换*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      /* fa11back 缩短不显示时间，如果没加载完毕用默认的，和b1ock类似*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* optional 替换可能用字体 可能不替换*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    article {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font-family: hagan;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;ABC abc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;浏览器储存优化策略&quot;&gt;&lt;a href=&quot;#浏览器储存优化策略&quot; class=&quot;headerlink&quot; title=&quot;浏览器储存优化策略&quot;&gt;&lt;/a&gt;浏览器储存优化策略&lt;/h2&gt;&lt;h3 id=&quot;Cookie&quot;&gt;&lt;a href=&quot;#Cookie&quot; class=&quot;headerlink&quot; title=&quot;Cookie&quot;&gt;&lt;/a&gt;Cookie&lt;/h3&gt;&lt;p&gt;&lt;code&gt;cookie&lt;/code&gt;在过期之前一直有效，最大储存大小为4k，限制字段个数，不适合大量的数据储存，每次请求会携带&lt;code&gt;cookie&lt;/code&gt;，主要用来做身份校验。&lt;/p&gt;
&lt;p&gt;优化方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要合理设置&lt;code&gt;cookie&lt;/code&gt;有效期。&lt;/li&gt;
&lt;li&gt;根据不同子域划分&lt;code&gt;cookie&lt;/code&gt;来减少&lt;code&gt;cookie&lt;/code&gt;传输。&lt;/li&gt;
&lt;li&gt;静态资源域名和&lt;code&gt;cookie&lt;/code&gt;域名采用不同域名，避免静态资源请求携带&lt;code&gt;cookie&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;LocalStorage&quot;&gt;&lt;a href=&quot;#LocalStorage&quot; class=&quot;headerlink&quot; title=&quot;LocalStorage&quot;&gt;&lt;/a&gt;LocalStorage&lt;/h3&gt;&lt;p&gt;Chrome下最多储存5M，除非手动清除，否则一直存在。可以利用&lt;code&gt;localStorage&lt;/code&gt;储存静态资源。比如储存网页的&lt;code&gt;.js&lt;/code&gt;、&lt;code&gt;.css&lt;/code&gt;，这样会使页面打开速度非常快。例如 &lt;a href=&quot;https://m.baidu.com/&quot;&gt;https://m.baidu.com&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// index.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;hagan&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showName&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;showName()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://lib.baomitu.com/axios/0.26.1/axios.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    cacheFile(&lt;span class=&quot;string&quot;&gt;&#39;/index.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cacheFile&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;url&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; fileContent = &lt;span class=&quot;built_in&quot;&gt;localStorage&lt;/span&gt;.getItem(url)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileContent) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt;(fileContent)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { data } = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; axios.get(url)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt;(data)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;localStorage&lt;/span&gt;.setItem(url, data)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;SessionStorage&quot;&gt;&lt;a href=&quot;#SessionStorage&quot; class=&quot;headerlink&quot; title=&quot;SessionStorage&quot;&gt;&lt;/a&gt;SessionStorage&lt;/h3&gt;&lt;p&gt;会话级别储存，可用于页面间的传值。&lt;/p&gt;
&lt;h3 id=&quot;IndexDB&quot;&gt;&lt;a href=&quot;#IndexDB&quot; class=&quot;headerlink&quot; title=&quot;IndexDB&quot;&gt;&lt;/a&gt;IndexDB&lt;/h3&gt;&lt;p&gt;浏览器的本地数据库，大小几乎无上限。&lt;/p&gt;
&lt;h2 id=&quot;其他优化策略&quot;&gt;&lt;a href=&quot;#其他优化策略&quot; class=&quot;headerlink&quot; title=&quot;其他优化策略&quot;&gt;&lt;/a&gt;其他优化策略&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;关键资源个数越多，首次页面加载时间就会越长。&lt;/li&gt;
&lt;li&gt;关键资源的大小，内容越小下载时间越短。&lt;/li&gt;
&lt;li&gt;优化白屏，合理使用内联css、js。&lt;/li&gt;
&lt;li&gt;预渲染，打包时进行预渲染，生成静态HTML文件，用户访问时直接返回静态HTML。&lt;/li&gt;
&lt;li&gt;服务端渲染同构，加速首屏速度（耗费服务端资源），有利于SEO优化。首屏使用服务端渲染，后续交互使用客户端渲染。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用PWA提高用户体验&quot;&gt;&lt;a href=&quot;#使用PWA提高用户体验&quot; class=&quot;headerlink&quot; title=&quot;使用PWA提高用户体验&quot;&gt;&lt;/a&gt;使用PWA提高用户体验&lt;/h2&gt;&lt;p&gt;webapp用户体验差的一大原因是不能离线访问。用户粘性低的一大原因是无法保存入口，PWA就是为了解决webapp的用户体验问题而诞生的。使用PWA能令站点拥有快速、可靠、安全等特性。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Web App Manifest 将网站添加到电脑桌面、手机桌面，类似Native的体验。&lt;/li&gt;
&lt;li&gt;Service Worker 配合Cache API，能做到离线缓存各种内容。&lt;/li&gt;
&lt;li&gt;Push API 配合 Notification API，能做到类似Native的消息推送与实时提醒。&lt;/li&gt;
&lt;li&gt;App Shell 配合 App Skeleton，能做App壳与骨架屏。&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- &lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://mp.weixin.qq.com/s/wJxj5QbOHwH9cKmqU5eSQw&quot;&gt;Web页面全链路性能优化指南&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</summary>
        
      
    
    
    
    <category term="前端工程架构" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="Web性能优化" scheme="https://fe32.top/tags/Web%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>7个 Vue3 中的组件通信方式</title>
    <link href="https://fe32.top/articles/vu9856es/"/>
    <id>https://fe32.top/articles/vu9856es/</id>
    <published>2022-05-15T14:56:04.000Z</published>
    <updated>2023-06-27T14:39:00.836Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/16/628126e1ac761.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文采用&lt;code&gt;&amp;lt;script setup /&amp;gt;&lt;/code&gt;的编写方式，比&lt;code&gt;options API&lt;/code&gt;更自由。然后我们会讲以下七种组件通信方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;props&lt;/li&gt;
&lt;li&gt;emit&lt;/li&gt;
&lt;li&gt;v-model&lt;/li&gt;
&lt;li&gt;refs&lt;/li&gt;
&lt;li&gt;provide/inject&lt;/li&gt;
&lt;li&gt;eventBus&lt;/li&gt;
&lt;li&gt;vuex/pinia&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;举个例子&quot;&gt;&lt;a href=&quot;#举个例子&quot; class=&quot;headerlink&quot; title=&quot;举个例子&quot;&gt;&lt;/a&gt;举个例子&lt;/h2&gt;&lt;p&gt;本文将使用如下演示，如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/16/628126e4580e2.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上图中，列表和输入框分别是父组件和子组件。根据不同的通信方式，会调整父子组件。&lt;/p&gt;
&lt;h2 id=&quot;Props&quot;&gt;&lt;a href=&quot;#Props&quot; class=&quot;headerlink&quot; title=&quot;Props&quot;&gt;&lt;/a&gt;Props&lt;/h2&gt;&lt;p&gt;props 是 Vue 中最常见的父子通信方式，使用起来也比较简单。&lt;/p&gt;
&lt;p&gt;根据上面的demo，我们在父组件中定义了数据和对数据的操作，子组件只渲染一个列表。&lt;/p&gt;
&lt;p&gt;父组件代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- child component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;child-components :list=&lt;span class=&quot;string&quot;&gt;&quot;list&quot;&lt;/span&gt;&amp;gt;&amp;lt;/child-components&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- parent component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child-wrap input-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      v-model=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Please enter&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;input-group-append&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;button @click=&lt;span class=&quot;string&quot;&gt;&quot;handleAdd&quot;&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; type=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ChildComponents &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./child.vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; list = ref([&lt;span class=&quot;string&quot;&gt;&#39;JavaScript&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;HTML&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;CSS&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value = ref(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// event handling function triggered by add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handleAdd = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list.value.push(value.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  value.value = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;子组件只需要渲染父组件传递的值。&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;ul &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;parent list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group-item&quot;&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;i in props.list&quot;&lt;/span&gt; :key=&lt;span class=&quot;string&quot;&gt;&quot;i&quot;&lt;/span&gt;&amp;gt;{{ i }}&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { defineProps } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; props = defineProps({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Emit&quot;&gt;&lt;a href=&quot;#Emit&quot; class=&quot;headerlink&quot; title=&quot;Emit&quot;&gt;&lt;/a&gt;Emit&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Emit&lt;/code&gt;也是&lt;code&gt;Vue&lt;/code&gt;中最常见的组件通信方式，用于子组件向父组件传递消息。&lt;/p&gt;
&lt;p&gt;我们在父组件中定义列表，子组件只需要传递添加的值。&lt;/p&gt;
&lt;p&gt;子组件代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child-wrap input-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      v-model=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Please enter&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;input-group-append&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;button @click=&lt;span class=&quot;string&quot;&gt;&quot;handleSubmit&quot;&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; type=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref, defineEmits } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value = ref(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; emits = defineEmits([&lt;span class=&quot;string&quot;&gt;&#39;add&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handleSubmit = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  emits(&lt;span class=&quot;string&quot;&gt;&#39;add&#39;&lt;/span&gt;, value.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  value.value = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;点击子组件中的【添加】按钮后，我们会发出一个自定义事件，并将添加的值作为参数传递给父组件。&lt;/p&gt;
&lt;p&gt;父组件代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- parent component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;ul &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;parent list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group-item&quot;&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;i in list&quot;&lt;/span&gt; :key=&lt;span class=&quot;string&quot;&gt;&quot;i&quot;&lt;/span&gt;&amp;gt;{{ i }}&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- child component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;child-components @add=&lt;span class=&quot;string&quot;&gt;&quot;handleAdd&quot;&lt;/span&gt;&amp;gt;&amp;lt;/child-components&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ChildComponents &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./child.vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; list = ref([&lt;span class=&quot;string&quot;&gt;&#39;JavaScript&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;HTML&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;CSS&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// event handling function triggered by add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handleAdd = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list.value.push(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在父组件中，只需要监听子组件的自定义事件，然后执行相应的添加逻辑即可。&lt;/p&gt;
&lt;h2 id=&quot;v-model&quot;&gt;&lt;a href=&quot;#v-model&quot; class=&quot;headerlink&quot; title=&quot;v-model&quot;&gt;&lt;/a&gt;v-model&lt;/h2&gt;&lt;p&gt;&lt;code&gt;v-model&lt;/code&gt;是&lt;code&gt;Vue&lt;/code&gt;中一个优秀的语法糖，比如下面的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ChildComponent&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-model:title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pageTitle&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这是以下代码的简写形式&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ChildComponent&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pageTitle&quot;&lt;/span&gt; @&lt;span class=&quot;attr&quot;&gt;update:title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pageTitle = $event&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这确实容易了很多。现在我们将使用&lt;code&gt;v-model&lt;/code&gt;来实现上面的示例。&lt;/p&gt;
&lt;p&gt;子组件代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child-wrap input-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      v-model=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Please enter&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;input-group-append&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;button @click=&lt;span class=&quot;string&quot;&gt;&quot;handleAdd&quot;&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; type=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref, defineEmits, defineProps } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value = ref(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; props = defineProps({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; emits = defineEmits([&lt;span class=&quot;string&quot;&gt;&#39;update:list&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add action&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handleAdd = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; arr = props.list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  arr.push(value.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  emits(&lt;span class=&quot;string&quot;&gt;&#39;update:list&#39;&lt;/span&gt;, arr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  value.value = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在子组件中，我们先定义&lt;code&gt;props&lt;/code&gt;和&lt;code&gt;emits&lt;/code&gt;，添加完成后再发出指定的事件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：update:&lt;code&gt;*&lt;/code&gt;是&lt;code&gt;Vue&lt;/code&gt;中固定的写法，&lt;code&gt;*&lt;/code&gt;代表&lt;code&gt;props&lt;/code&gt;中的一个属性名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在父组件中使用比较简单，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- parent component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;ul &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;parent list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group-item&quot;&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;i in list&quot;&lt;/span&gt; :key=&lt;span class=&quot;string&quot;&gt;&quot;i&quot;&lt;/span&gt;&amp;gt;{{ i }}&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- child component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;child-components v-model:list=&lt;span class=&quot;string&quot;&gt;&quot;list&quot;&lt;/span&gt;&amp;gt;&amp;lt;/child-components&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ChildComponents &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./child.vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; list = ref([&lt;span class=&quot;string&quot;&gt;&#39;JavaScript&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;HTML&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;CSS&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Refs&quot;&gt;&lt;a href=&quot;#Refs&quot; class=&quot;headerlink&quot; title=&quot;Refs&quot;&gt;&lt;/a&gt;Refs&lt;/h2&gt;&lt;p&gt;使用API选项时，我们可以通过&lt;code&gt;this.$refs.name&lt;/code&gt;获取指定的元素或组件，但在组合API中不行。如果我们想通过&lt;code&gt;ref&lt;/code&gt;获取，需要定义一个同名的&lt;code&gt;Ref&lt;/code&gt;对象，在组件挂载后可以访问。&lt;/p&gt;
&lt;p&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;ul &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;parent list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group-item&quot;&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;i in childRefs?.list&quot;&lt;/span&gt; :key=&lt;span class=&quot;string&quot;&gt;&quot;i&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      {{ i }}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- The value &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; the child component ref is the same &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; that &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; the &amp;lt;script&amp;gt; --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;child-components ref=&lt;span class=&quot;string&quot;&gt;&quot;childRefs&quot;&lt;/span&gt;&amp;gt;&amp;lt;/child-components&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- parent component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ChildComponents &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./child.vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; childRefs = ref(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;子组件代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child-wrap input-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      v-model=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Please enter&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;input-group-append&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;button @click=&lt;span class=&quot;string&quot;&gt;&quot;handleAdd&quot;&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; type=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref, defineExpose } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; list = ref([&lt;span class=&quot;string&quot;&gt;&#39;JavaScript&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;HTML&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;CSS&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value = ref(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// event handling function triggered by add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handleAdd = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list.value.push(value.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  value.value = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;defineExpose({ list })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：默认情况下，&lt;code&gt;setup&lt;/code&gt;组件是关闭的，通过模板&lt;code&gt;ref&lt;/code&gt;获取组件的公共实例。如果需要公开，需要通过&lt;code&gt;defineExpose API&lt;/code&gt;公开。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;provide-inject&quot;&gt;&lt;a href=&quot;#provide-inject&quot; class=&quot;headerlink&quot; title=&quot;provide/inject&quot;&gt;&lt;/a&gt;provide/inject&lt;/h2&gt;&lt;p&gt;&lt;code&gt;provide/inject&lt;/code&gt;是 Vue 中提供的一对 API。无论层级多深，API 都可以实现父组件到子组件的数据传递。&lt;/p&gt;
&lt;p&gt;父组件代码如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- child component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;child-components&amp;gt;&amp;lt;/child-components&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!-- parent component --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child-wrap input-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      v-model=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Please enter&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;input-group-append&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;button @click=&lt;span class=&quot;string&quot;&gt;&quot;handleAdd&quot;&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; type=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { ref, provide } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ChildComponents &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./child.vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; list = ref([&lt;span class=&quot;string&quot;&gt;&#39;JavaScript&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;HTML&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;CSS&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value = ref(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Provide data to child components.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;provide(&lt;span class=&quot;string&quot;&gt;&#39;list&#39;&lt;/span&gt;, list.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// event handling function triggered by add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; handleAdd = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list.value.push(value.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  value.value = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;子组件代码如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;ul &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;parent list-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;li &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-group-item&quot;&lt;/span&gt; v-&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;i in list&quot;&lt;/span&gt; :key=&lt;span class=&quot;string&quot;&gt;&quot;i&quot;&lt;/span&gt;&amp;gt;{{ i }}&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script setup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { inject } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Accept data provided by parent component&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; list = inject(&lt;span class=&quot;string&quot;&gt;&#39;list&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：使用&lt;code&gt;provide&lt;/code&gt;进行数据传输时，尽量使用&lt;code&gt;readonly&lt;/code&gt;封装数据，避免子组件修改父组件传递的数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;eventBus&quot;&gt;&lt;a href=&quot;#eventBus&quot; class=&quot;headerlink&quot; title=&quot;eventBus&quot;&gt;&lt;/a&gt;eventBus&lt;/h2&gt;&lt;p&gt;Vue3 中移除了&lt;code&gt;eventBus&lt;/code&gt;，但可以借助第三方工具来完成。Vue 官方推荐使用&lt;code&gt;mitt&lt;/code&gt;或&lt;code&gt;tiny-emitter&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在大多数情况下，不建议使用全局事件总线来实现组件通信。虽然比较简单粗暴，但是维护事件总线从长远来看是个大问题，这里就不解释了。有关详细信息，您可以阅读特定工具的文档。&lt;/p&gt;
&lt;p&gt;7、vuex/pinia&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Vuex&lt;/code&gt;和&lt;code&gt;Pinia&lt;/code&gt;是 Vue3 中的状态管理工具，使用这两个工具可以轻松实现组件通信。由于这两个工具都比较强大，这里就不一一展示了。有关详细信息，请参阅文档。&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://javascript.plainenglish.io/7-component-communications-in-vue-3-f4d2d795481d&quot;&gt;7 Component Communications in Vue</summary>
        
      
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="组件通信" scheme="https://fe32.top/tags/%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>基于 Hexo 从零开始搭建个人博客（一）</title>
    <link href="https://fe32.top/articles/hexo1601/"/>
    <id>https://fe32.top/articles/hexo1601/</id>
    <published>2022-05-08T13:30:46.000Z</published>
    <updated>2023-06-27T14:39:00.830Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;博客搭建过程遇到任何问题，优先在本页面搜索，检查是否已经有该配置教程。&lt;/li&gt;
&lt;li&gt;遇到问题可以优先在文章评论区留言，注意留言时请填写正确的邮箱以确保能收到站长的回复。&lt;/li&gt;
&lt;li&gt;实在解决不了的问题可添加博主 Wechat ，添加好友时请备注自己的姓名+专业，如 张三 计算机科学与技术。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本教程主要面向 Windows 用户&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;操作系统：Windows10&lt;/li&gt;
&lt;li&gt;Node&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;Hexo&lt;/li&gt;
&lt;li&gt;idea（推荐使用 Visual Studio Code）&lt;/li&gt;
&lt;li&gt;一个 GitHub 帐号&lt;/li&gt;
&lt;li&gt;一个云服务器（可选）&lt;/li&gt;
&lt;li&gt;一个域名（可选）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装-Node&quot;&gt;&lt;a href=&quot;#安装-Node&quot; class=&quot;headerlink&quot; title=&quot;安装 Node&quot;&gt;&lt;/a&gt;安装 Node&lt;/h2&gt;&lt;div class=&quot;tabs&quot; id=&quot;&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-1&quot;&gt;方式一&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#-2&quot;&gt;方式二&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;-1&quot;&gt;&lt;p&gt;对于前端工程师，或正打算学习前端相关知识，建议用&lt;code&gt;nvm&lt;/code&gt;来管理&lt;code&gt;Node&lt;/code&gt;版本，请移步教程 &lt;a href=&quot;https://fe32.top/articles/9r95s1wt/&quot;&gt;nvm,npm与nrm&lt;/a&gt;。&lt;/p&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;-2&quot;&gt;&lt;p&gt;如果你不需要灵活切换&lt;code&gt;Node&lt;/code&gt;版本，走下面的教程即可。&lt;/p&gt;
&lt;details yellow=&quot;&quot;&gt;&lt;summary&gt; 查看步骤 &lt;/summary&gt;
              &lt;div class=&quot;content&quot;&gt;
              &lt;ol&gt;&lt;li&gt;打开&lt;code&gt;Node&lt;/code&gt;官网，下载和自己系统相配的&lt;code&gt;Node&lt;/code&gt;的安装程序，否则会出现安装问题。&lt;br&gt;下载地址：&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/10/6279474912af2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;如果后面美化过程中需要拉取豆瓣信息，哔哩哔哩番剧等，建议安装较低的 Node 版本(v12.18.0)。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/10/6279474fd4a8e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;查看历史版本，找到 v12.18.0 进行下载。&lt;/li&gt;&lt;li&gt;下载后傻瓜式安装即可，安装的目录可以使用默认目录【C:/Program Files/nodejs/】，也可以自定义路径。&lt;/li&gt;&lt;li&gt;安装完成后，检查是否安装成功。在键盘按下&lt;kbd&gt;win&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt;键，输入&lt;code&gt;CMD&lt;/code&gt;，然后回车，打开CMD窗口，执行&lt;code&gt;node -v&lt;/code&gt;命令，看到版本信息，则说明安装成功。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/10/6279501e8eb8f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/10/627950224668f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;修改&lt;code&gt;npm&lt;/code&gt;源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; registry https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ol&gt;
              &lt;/div&gt;
            &lt;/details&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-Hexo&quot;&gt;&lt;a href=&quot;#安装-Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装 Hexo&quot;&gt;&lt;/a&gt;安装 Hexo&lt;/h2&gt;&lt;p&gt;在目标路径打开CMD窗口，输入&lt;code&gt;npm install -g hexo-cli&lt;/code&gt;安装&lt;code&gt;Hexo&lt;/code&gt;环境。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装完后输入&lt;code&gt;hexo -v&lt;/code&gt;验证是否安装成功。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/12/627bed30030f8.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;注册-GitHub-帐号&quot;&gt;&lt;a href=&quot;#注册-GitHub-帐号&quot; class=&quot;headerlink&quot; title=&quot;注册 GitHub 帐号&quot;&gt;&lt;/a&gt;注册 GitHub 帐号&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;进入官网 &lt;a href=&quot;https://github.com/&quot;&gt;https://github.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;点击右上角的 Sign up(注册)，不是Sign in（登录）。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/12/627d2c0449341.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/12/627d2c05ee628.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;创建-GitHub-仓库&quot;&gt;&lt;a href=&quot;#创建-GitHub-仓库&quot; class=&quot;headerlink&quot; title=&quot;创建 GitHub 仓库&quot;&gt;&lt;/a&gt;创建 GitHub 仓库&lt;/h2&gt;&lt;p&gt;点击右上角的&lt;code&gt;+&lt;/code&gt;按钮，选择&lt;code&gt;New repository&lt;/code&gt;，创建一个&lt;code&gt;&amp;lt;用户名&amp;gt;.github.io&lt;/code&gt;的仓库。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/08/62776cef6aeb4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;找不到创建入口的，访问：&lt;a href=&quot;https://github.com/new&quot;&gt;https://github.com/new&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仓库的格式必须为：&lt;code&gt;&amp;lt;用户名&amp;gt;.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Description：为描述仓库（选填）&lt;/li&gt;
&lt;li&gt;勾选 &lt;code&gt;Initialize this repository with a README&lt;/code&gt; 初始化一个 README.md 文件&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;Creat repository&lt;/code&gt; 进行创建&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/13/627d4109113e8.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Git安装-amp-amp-连接Github&quot;&gt;&lt;a href=&quot;#Git安装-amp-amp-连接Github&quot; class=&quot;headerlink&quot; title=&quot;Git安装 &amp;amp;&amp;amp; 连接Github&quot;&gt;&lt;/a&gt;Git安装 &amp;amp;&amp;amp; 连接Github&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;进入官网：&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;https://git-scm.com/downloads&lt;/a&gt; ，由于官网下载太慢可以通过淘宝的开源镜像下载 网址：&lt;a href=&quot;https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/&quot;&gt;https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/&lt;/a&gt; ，下载版本更具自己的需求选择即可。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/13/627d410b6156f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【C:/Program Files/Git】，也可以自定义路径。&lt;/li&gt;
&lt;li&gt;点击电脑左下角开始即可看见Git Bash。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/13/627d410ddc940.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Git CMD 是windows 命令行的指令风格&lt;/li&gt;
&lt;li&gt;Git Bash 是linux系统的指令风格（建议使用）&lt;/li&gt;
&lt;li&gt;Git GUI是图形化界面（新手学习不建议使用）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;打开&lt;code&gt;Git Bash&lt;/code&gt;后如下图所示即代表安装完成。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/14/627e8ea336578.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;常用命令&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config -l  //查看所有配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --system --list //查看系统配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global --list //查看用户（全局）配置&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;配置用户名和邮箱&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;你的用户名&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;你的邮箱&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
输入后没有报错即代表设置成功。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/13/627e7a4e5cedd.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
通过git &lt;code&gt;config -l&lt;/code&gt; 检查是否配置成功，至此git安装及配置全部完成。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/13/627e7a861d92d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;连接Github&quot;&gt;&lt;a href=&quot;#连接Github&quot; class=&quot;headerlink&quot; title=&quot;连接Github&quot;&gt;&lt;/a&gt;连接Github&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;生成ssh公钥，执行以下命令&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;你的邮箱&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/14/627e87126fc59.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/14/627e87156038a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;将 SSH KEY 配置到 GitHub&lt;br&gt;进入github，点击右上角头像 选择&lt;code&gt;settings&lt;/code&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/14/627e877fb746b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
进入设置页后选择 &lt;code&gt;SSH and GPG keys&lt;/code&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/14/627e8802e6729.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/14/627e881524f28.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;注意: 要是有【Key type】的选择项 ，选择默认&lt;code&gt;Authentication Key&lt;/code&gt; 即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;测试连接，输入以下命令&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
出现如下信息，说明已经大功告成！&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot;</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>如何给自己的Github主页来个豪华套餐？</title>
    <link href="https://fe32.top/articles/gi0506hb/"/>
    <id>https://fe32.top/articles/gi0506hb/</id>
    <published>2022-05-05T16:52:42.000Z</published>
    <updated>2023-06-27T14:39:00.648Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;仓库信息&quot;&gt;&lt;a href=&quot;#仓库信息&quot; class=&quot;headerlink&quot; title=&quot;仓库信息&quot;&gt;&lt;/a&gt;仓库信息&lt;/h2&gt;&lt;div class=&quot;git-decorate&quot;&gt;
&lt;div class=&quot;git-decorate-fl-center&quot;&gt;
&lt;!-- &lt;a class=&quot;ghcard&quot; rel=&quot;external nofollow noopener noreferrer&quot; href=&quot;https://github.com/abhisheknaiidu/awesome-github-profile-readme/&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=abhisheknaiidu&amp;repo=awesome-github-profile-readme&amp;theme=buefy&amp;show_owner=true&quot;/&gt;&lt;/a&gt;  --&gt;
&lt;a class=&quot;ghcard&quot; rel=&quot;external nofollow noopener noreferrer&quot; href=&quot;https://github.com/thmsgbrt/thmsgbrt&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=thmsgbrt&amp;amp;repo=thmsgbrt&amp;amp;theme=buefy&amp;amp;show_owner=true&quot;&gt;&lt;/a&gt; 
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.producthunt.com/posts/awesome-github-profiles?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-awesome-github-profiles&quot; target=&quot;_blank&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=277987&amp;amp;theme=light&quot; alt=&quot;Awesome GitHub Profiles - Best curated list of developers readme, updated every 15 min | Product Hunt&quot; style=&quot;width: 200px; height: 44px;&quot; width=&quot;200&quot; height=&quot;44&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;git-decorate-fl-center&quot;&gt;
&lt;a href=&quot;https://arbeitnow.com/?utm_source=awesome-github-profile-readme&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/static/v1?label=&amp;amp;labelColor=505050&amp;amp;message=arbeitnow&amp;amp;color=%230076D6&amp;amp;style=flat&amp;amp;logo=google-chrome&amp;amp;logoColor=%230076D6&quot; alt=&quot;website&quot;&gt;&lt;/a&gt;&amp;nbsp;
&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/static/v1?label=%F0%9F%8C%9F&amp;amp;message=If%20Useful&amp;amp;style=style=flat&amp;amp;color=BC4E99&quot; alt=&quot;Star Badge&quot;&gt;&amp;nbsp;
&lt;a href=&quot;https://discord.gg/XTW52Kt&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/discord/733027681184251937.svg?style=flat&amp;amp;label=Join%20Community&amp;amp;color=7289DA&quot; alt=&quot;Join Community Badge&quot;&gt;&lt;/a&gt;&amp;nbsp;
&lt;a href=&quot;https://twitter.com/abhisheknaiidu&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/twitter/follow/abhisheknaiidu.svg?style=social&quot;&gt; &lt;/a&gt;
&lt;/div&gt;

&lt;div class=&quot;git-decorate-fl-center&quot;&gt;
&lt;a href=&quot;https://github.com/abhisheknaiidu/awesome-github-profile-readme/stargazers&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/github/stars/abhisheknaiidu/awesome-github-profile-readme&quot; alt=&quot;Stars Badge&quot;&gt;&lt;/a&gt;&amp;nbsp;
&lt;a href=&quot;https://github.com/abhisheknaiidu/awesome-github-profile-readme/network/members&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/github/forks/abhisheknaiidu/awesome-github-profile-readme&quot; alt=&quot;Forks Badge&quot;&gt;&lt;/a&gt;&amp;nbsp;
&lt;a href=&quot;https://github.com/abhisheknaiidu/awesome-github-profile-readme/pulls&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/github/issues-pr/abhisheknaiidu/awesome-github-profile-readme&quot; alt=&quot;Pull Requests Badge&quot;&gt;&lt;/a&gt;&amp;nbsp;
&lt;a href=&quot;https://github.com/abhisheknaiidu/awesome-github-profile-readme/issues&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/github/issues/abhisheknaiidu/awesome-github-profile-readme&quot; alt=&quot;Issues Badge&quot;&gt;&lt;/a&gt;&amp;nbsp;
&lt;a href=&quot;https://github.com/abhisheknaiidu/awesome-github-profile-readme/graphs/contributors&quot;&gt;&lt;img alt=&quot;GitHub contributors&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/github/contributors/abhisheknaiidu/awesome-github-profile-readme?color=2b9348&quot;&gt;&lt;/a&gt;&amp;nbsp;
&lt;a href=&quot;https://github.com/abhisheknaiidu/awesome-github-profile-readme/blob/master/LICENSE&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://img.shields.io/github/license/abhisheknaiidu/awesome-github-profile-readme?color=2b9348&quot; alt=&quot;License Badge&quot;&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;“豪华装修”案例分享&quot;&gt;&lt;a href=&quot;#“豪华装修”案例分享&quot; class=&quot;headerlink&quot; title=&quot;“豪华装修”案例分享&quot;&gt;&lt;/a&gt;“豪华装修”案例分享&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;技术大佬型🤖：展示自己的技术栈、开源项目、最近文章&lt;/p&gt;
&lt;!-- &lt;a class=&quot;ghcard&quot; rel=&quot;external nofollow noopener noreferrer&quot; href=&quot;https://github.com/thmsgbrt/thmsgbrt&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=thmsgbrt&amp;repo=thmsgbrt&amp;theme=buefy&amp;show_owner=true&quot;/&gt;&lt;/a&gt;  --&gt;
&lt;p&gt;地址：&lt;a href=&quot;https://github.com/thmsgbrt/thmsgbrt&quot;&gt;https://github.com/thmsgbrt/thmsgbrt&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/07/62755bad5e775.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代码模式👨🏽‍💻：展示自己最近的code内容，code语言和开发时间。&lt;/p&gt;
&lt;!-- &lt;a class=&quot;ghcard&quot; rel=&quot;external nofollow noopener noreferrer&quot; href=&quot;https://github.com/guilyx/guilyx&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=guilyx&amp;repo=guilyx&amp;theme=buefy&amp;show_owner=true&quot;/&gt;&lt;/a&gt; --&gt;
&lt;p&gt;地址：&lt;a href=&quot;https://github.com/guilyx/guilyx&quot;&gt;https://github.com/guilyx/guilyx&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/07/62755bb37bdf4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/07/62755bb6c4b9d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;极简主义✨&lt;br&gt;&lt;br&gt;地址：&lt;a href=&quot;https://github.com/Volcano-Yang/Volcano-Yang&quot;&gt;https://github.com/Volcano-Yang/Volcano-Yang&lt;/a&gt;&lt;/p&gt;
&lt;!-- &lt;a class=&quot;ghcard&quot; rel=&quot;external nofollow noopener noreferrer&quot; href=&quot;https://github.com/Volcano-Yang/Volcano-Yang&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=Volcano-Yang&amp;repo=Volcano-Yang&amp;theme=buefy&amp;show_owner=true&quot;/&gt;&lt;/a&gt; --&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/07/62755bba78f63.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!-- &lt;a class=&quot;ghcard&quot; rel=&quot;external nofollow noopener noreferrer&quot; href=&quot;https://github.com/alwinw/alwinw&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=alwinw&amp;repo=alwinw&amp;theme=buefy&amp;show_owner=true&quot;/&gt;&lt;/a&gt; --&gt;
&lt;p&gt;地址：&lt;a href=&quot;https://github.com/alwinw/alwinw&quot;&gt;https://github.com/alwinw/alwinw&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/07/62756662597e2.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;手把手教你如何装修自己的github主页&quot;&gt;&lt;a href=&quot;#手把手教你如何装修自己的github主页&quot; class=&quot;headerlink&quot; title=&quot;手把手教你如何装修自己的github主页&quot;&gt;&lt;/a&gt;手把手教你如何装修自己的github主页&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建同名仓库&lt;br&gt;点击右上角的&lt;code&gt;+&lt;/code&gt;按钮，选择&lt;code&gt;New repository&lt;/code&gt;，创建和自己github用户名相同的仓库&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/08/62776cef6aeb4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/08/62776d93f12b7.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/08/62776d9e1300f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;创建完成，默认的README.md有一句话：Hi there 👋 。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/08/62776dab04b54.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;修改README.md ，借用别人代码的时候要注意，有的组件必须将数据源指向自己才能展示正确的数据，比如start组件等。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/08/62776dbd517ef.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/08/62776dc81d503.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;修改完提交内容到该仓库主干就大功告成了&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot;</summary>
        
      
    
    
    
    <category term="Github" scheme="https://fe32.top/categories/Github/"/>
    
    
    <category term="自述文件" scheme="https://fe32.top/tags/%E8%87%AA%E8%BF%B0%E6%96%87%E4%BB%B6/"/>
    
    <category term="豪华装饰" scheme="https://fe32.top/tags/%E8%B1%AA%E5%8D%8E%E8%A3%85%E9%A5%B0/"/>
    
  </entry>
  
  <entry>
    <title>边缘渲染是如何提升前端性能的？</title>
    <link href="https://fe32.top/articles/cs0504xn/"/>
    <id>https://fe32.top/articles/cs0504xn/</id>
    <published>2022-05-04T15:21:46.000Z</published>
    <updated>2023-06-27T14:39:00.592Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前端渲染的发展&quot;&gt;&lt;a href=&quot;#前端渲染的发展&quot; class=&quot;headerlink&quot; title=&quot;前端渲染的发展&quot;&gt;&lt;/a&gt;前端渲染的发展&lt;/h2&gt;&lt;p&gt;在讲ESR（Edge Side Rendering，边缘渲染）如何提速渲染之前，我们有必要先了解一下前端渲染的发展历史以及前端各项性能指标优化是如何被提上议程的，之后我们再反观ESR的出现就会发现也是水到渠成。&lt;/p&gt;
&lt;p&gt;其实整个前端渲染方式也是随着前端技术的演进而不断革新的，大致可以分为如下历程。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272a581143d1.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;SSR（Server-Side-Rendering）时代（JSP、PHP）&quot;&gt;&lt;a href=&quot;#SSR（Server-Side-Rendering）时代（JSP、PHP）&quot; class=&quot;headerlink&quot; title=&quot;SSR（Server Side Rendering）时代（JSP、PHP）&quot;&gt;&lt;/a&gt;SSR（Server Side Rendering）时代（JSP、PHP）&lt;/h3&gt;&lt;p&gt;最早期的前端渲染（2005年Ajax推出之前）都是和后端混写的，比如JSP、PHP等写法。但是前后端写法杂糅在一起导致开发效率低下，比如改个样式还要重新编译一遍，并且页面也会写的很重。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272a59c03acb.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;CSR（Client-Side-Rendering）时代&quot;&gt;&lt;a href=&quot;#CSR（Client-Side-Rendering）时代&quot; class=&quot;headerlink&quot; title=&quot;CSR（Client Side Rendering）时代&quot;&gt;&lt;/a&gt;CSR（Client Side Rendering）时代&lt;/h3&gt;&lt;p&gt;后面有了Ajax技术之后，再加上通过CDN缓存静态资源之后，前端SPA + CSR渲染有了飞跃式的发展，这种模式前端处理所有逻辑、内容填充和路由，数据加载部分通过Ajax从后端获取，因此很好的解决了前后端分工开发的问题。其具体请求时间线可参见下图。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272a5ac23724.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是由于请求是全异步的，其一是对SEO不利，其二是需要HTML + JS处理数据拼接才能在前端完成渲染，其首屏白屏时间会较长，特别在一些低端机型上体验更是堪忧&lt;/p&gt;
&lt;h3 id=&quot;SSR时代（Node）&quot;&gt;&lt;a href=&quot;#SSR时代（Node）&quot; class=&quot;headerlink&quot; title=&quot;SSR时代（Node）&quot;&gt;&lt;/a&gt;SSR时代（Node）&lt;/h3&gt;&lt;p&gt;再后来随着Node引领的全栈技术的发展，前端又回到了当初的SSR路上，只不过这次的回归是一次螺旋式的上升。首先是前后端全是JS语法，大部分代码都是可复用的，其次是SEO场景友好，服务端渲染好后直接返回最终的HTML，减少了白屏等待时间，过多异步请求的导致的性能问题也可下放到服务端解决，也能有效避免多次的数据获取、内容填充，浏览器只绑定相关的JS逻辑、事件即可。其具体请求时间线可参见下图。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272a5d3db82f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ESR（Edge-Side-Rendering）时代&quot;&gt;&lt;a href=&quot;#ESR（Edge-Side-Rendering）时代&quot; class=&quot;headerlink&quot; title=&quot;ESR（Edge Side Rendering）时代&quot;&gt;&lt;/a&gt;ESR（Edge Side Rendering）时代&lt;/h3&gt;&lt;p&gt;后面随着边缘计算的发展，由于CDN节点距离用户更近，有更短网络延时的优势，我们可以将页面进行动静拆分，将静态内容缓存在CDN先快速返回给用户，然后在CDN节点上发起动态内容的请求，之后将动态内容与静态部分以流的形式进行拼接，从而进一步提高了用户的首屏加载时间，尤其在边缘地区或者弱网环境也有能拥有很好的用户体验，此外还减少原先SSR服务器压力。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272a5f997171.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;原理和优势&quot;&gt;&lt;a href=&quot;#原理和优势&quot; class=&quot;headerlink&quot; title=&quot;原理和优势&quot;&gt;&lt;/a&gt;原理和优势&lt;/h2&gt;&lt;p&gt;刚才也提到了，ESR就是借助边缘计算能力，将返回的内容进行静态+动态部分拆分并以流的形式返回。静态部分依托CDN的缓存能力，优先返回给用户，随后在CDN节点上继续发起动态数据请求，并拼接在静态部分之后，继续流式返回。因此，其优势也是显而易见：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;TTFB(Time To First Byte)很短：&lt;br&gt;因为静态内容在CDN缓存住了，会很快的返回给用户。&lt;/li&gt;
&lt;li&gt;FP(First Paint)很短：&lt;br&gt;因为在静态内容返回后，已经可以开始HTML的解析以及 JS, CSS的下载和执行。&lt;/li&gt;
&lt;li&gt;FMP(First Meaningful Paint)很短：&lt;br&gt;因为动态内容的请求是在CDN发起，相比于客户端与服务端直连，请求减少了TCP建连和网络传输开销，而且由于动态部分是以chunked形式流式返回，FMP就会很短，比如搜索网站的第一个搜索结果就会首先绘制出来。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;应用场景举例&quot;&gt;&lt;a href=&quot;#应用场景举例&quot; class=&quot;headerlink&quot; title=&quot;应用场景举例&quot;&gt;&lt;/a&gt;应用场景举例&lt;/h2&gt;&lt;h3 id=&quot;场景一：将SSR服务直接部署在边缘节点，中心服务提供数据接口&quot;&gt;&lt;a href=&quot;#场景一：将SSR服务直接部署在边缘节点，中心服务提供数据接口&quot; class=&quot;headerlink&quot; title=&quot;场景一：将SSR服务直接部署在边缘节点，中心服务提供数据接口&quot;&gt;&lt;/a&gt;场景一：将SSR服务直接部署在边缘节点，中心服务提供数据接口&lt;/h3&gt;&lt;p&gt;直接将SSR服务搬到边缘部署，具体流程如下图。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272a6ca6a405.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;场景二：边缘服务读取缓存的静态部分HTML，中心服务提供动态HTML&quot;&gt;&lt;a href=&quot;#场景二：边缘服务读取缓存的静态部分HTML，中心服务提供动态HTML&quot; class=&quot;headerlink&quot; title=&quot;场景二：边缘服务读取缓存的静态部分HTML，中心服务提供动态HTML&quot;&gt;&lt;/a&gt;场景二：边缘服务读取缓存的静态部分HTML，中心服务提供动态HTML&lt;/h3&gt;&lt;p&gt;SSR服务部署在中心，边缘流式返回HTML内容（利用HTTP Transfer-Encoding: chunked 分块传输机制），需要分离静态与动态部分，具体流程如下图。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边缘服务：&lt;br&gt;请求静态HTML并返回，同时请求中心SSR服务，获取动态内容并返回&lt;/li&gt;
&lt;li&gt;SSR服务：&lt;br&gt;去除静态HTML，把动态部分返回给边缘服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272a6e9e8138.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;举例&quot;&gt;&lt;a href=&quot;#举例&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h3&gt;&lt;p&gt;以一个Demo网站为例，顶部导航可以视为静态部分缓存在边缘CDN，下面的卡片是动态部分回源到中心服务获取数据。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272b2b037be9.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过Demo对比，可发现ESR比SSR的有着明显优势，其静态顶导首先绘出，后面动态数据也比SSR的返回要快。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272b24fdb6e1.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此外，结合如下的埋点统计，ESR的优势更加得以印证。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/05/05/6272ad9517860.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;结语和展望&quot;&gt;&lt;a href=&quot;#结语和展望&quot; class=&quot;headerlink&quot; title=&quot;结语和展望&quot;&gt;&lt;/a&gt;结语和展望&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;技术实现：  ESR适应于对页面渲染性能较高的场景，借助边缘计算在SSR的基础上进一步优化首屏绘制的时间，降低用户页面的白屏等待时间；&lt;/li&gt;
&lt;li&gt;部署方式：  目前实现方式主要借助于边缘faas部署ESR服务，具有快速访问、弹性扩缩容、低运维成本等优点；&lt;br&gt;后期提供ER（边缘js运行时）部署，用户无需关心边缘节点，只需专注于代码本身，修改代码上传发布即可，相对于node服务，js运行时能够提供更高的运行效率&lt;/li&gt;
&lt;li&gt;技术展望： </summary>
        
      
    
    
    
    <category term="前端工程架构" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>推荐一些面向 Web 开发者的杀手级网站</title>
    <link href="https://fe32.top/articles/wb0502st/"/>
    <id>https://fe32.top/articles/wb0502st/</id>
    <published>2022-05-02T05:18:54.000Z</published>
    <updated>2023-06-27T14:39:00.637Z</updated>
    
    
    <summary type="html">一些面向Web开发者的杀手级网站</summary>
    
    
    
    <category term="推荐分享" scheme="https://fe32.top/categories/%E6%8E%A8%E8%8D%90%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>在 JavaScript 中写好异步代码的14条Linting规则</title>
    <link href="https://fe32.top/articles/js0417es/"/>
    <id>https://fe32.top/articles/js0417es/</id>
    <published>2022-04-17T12:06:30.000Z</published>
    <updated>2023-06-27T14:39:00.654Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在&lt;code&gt;JavaScript&lt;/code&gt;中调试异步代码有时感觉就像在雷区中导航。 你不知道&lt;code&gt;console.logs&lt;/code&gt;会在何时何地打印出来，你也不知道你的代码是如何执行的。&lt;/p&gt;
&lt;p&gt;很难正确地构造异步代码，以便它按照您的意图以正确的顺序执行。&lt;/p&gt;
&lt;p&gt;如果您在编写异步代码时得到一些指导，并在您即将犯错时获得有用的信息，那不是很好吗？&lt;/p&gt;
&lt;p&gt;幸运的是，在我们将它们投入生产之前，我们有一些 linters 可以捕获我们的一些错误。 以下是 linting 规则的编译列表，专门帮助您在 &lt;code&gt;JavaScript&lt;/code&gt; 和 &lt;code&gt;Node.js&lt;/code&gt;中编写异步代码。&lt;/p&gt;
&lt;p&gt;即使您最终没有在项目中使用这些规则，阅读它们的描述也会更好地理解异步代码并提高您的开发人员技能。&lt;/p&gt;
&lt;p&gt;以下规则默认随 &lt;code&gt;ESLint&lt;/code&gt; 一起提供。 通过将它们添加到您的 &lt;code&gt;.eslintrc&lt;/code&gt; 配置文件来启用它们。&lt;/p&gt;
&lt;h2 id=&quot;no-async-promise-executor&quot;&gt;&lt;a href=&quot;#no-async-promise-executor&quot; class=&quot;headerlink&quot; title=&quot;no-async-promise-executor&quot;&gt;&lt;/a&gt;no-async-promise-executor&lt;/h2&gt;&lt;p&gt;不建议将&lt;code&gt;async&lt;/code&gt;函数传递给&lt;code&gt;new Promise&lt;/code&gt;的构造函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; (resolve, reject) =&amp;gt; {});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;首先，你在 &lt;code&gt;Promise&lt;/code&gt; 的构造函数里去使用 &lt;code&gt;async&lt;/code&gt; ，那么包装个 &lt;code&gt;Promise&lt;/code&gt; 可能就是没啥必要的。另外，如果 &lt;code&gt;async&lt;/code&gt; 函数抛出了异常，新构造的 &lt;code&gt;Promise&lt;/code&gt; 实例并不会 &lt;code&gt;reject&lt;/code&gt; ，那么这个错误就捕获不到了。&lt;/p&gt;
&lt;h2 id=&quot;no-await-in-loop&quot;&gt;&lt;a href=&quot;#no-await-in-loop&quot; class=&quot;headerlink&quot; title=&quot;no-await-in-loop&quot;&gt;&lt;/a&gt;no-await-in-loop&lt;/h2&gt;&lt;p&gt;不建议在循环里使用 &lt;code&gt;await&lt;/code&gt; ，有这种写法通常意味着程序没有充分利用 &lt;code&gt;JavaScript&lt;/code&gt; 的事件驱动。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; url &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; urls) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; response = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; fetch(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;建议将这些异步任务改为并发执行，你可以大大提升代码的执行效率。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; responses = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; url &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; urls) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; response = fetch(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  responses.push(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all(responses);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h2 id=&quot;no-promise-executor-return&quot;&gt;&lt;a href=&quot;#no-promise-executor-return&quot; class=&quot;headerlink&quot; title=&quot;no-promise-executor-return&quot;&gt;&lt;/a&gt;no-promise-executor-return&lt;/h2&gt;&lt;p&gt;不建议在 &lt;code&gt;Promise&lt;/code&gt; 构造函数中返回值，&lt;code&gt;Promise&lt;/code&gt; 构造函数中返回的值是没法用的，并且返回值也不会影响到 &lt;code&gt;Promise&lt;/code&gt; 的状态。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;正常的做法是将返回值传递给 &lt;code&gt;resolve&lt;/code&gt; ，如果出错了就传给 &lt;code&gt;reject&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  resolve(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;require-atomic-updates&quot;&gt;&lt;a href=&quot;#require-atomic-updates&quot; class=&quot;headerlink&quot; title=&quot;require-atomic-updates&quot;&gt;&lt;/a&gt;require-atomic-updates&lt;/h2&gt;&lt;p&gt;不建议将赋值操作和 &lt;code&gt;await&lt;/code&gt; 组合使用，这可能会导致条件竞争。&lt;/p&gt;
&lt;p&gt;看看下面的代码，你觉得 &lt;code&gt;totalPosts&lt;/code&gt; 最终的值是多少？&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; totalPosts = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getPosts&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;userId&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; users = [{ &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;posts&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; }, { &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;posts&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; }];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; sleep(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; users.find(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;user&lt;/span&gt;) =&amp;gt;&lt;/span&gt; user.id === userId).posts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addPosts&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;userId&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  totalPosts += &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getPosts(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([addPosts(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), addPosts(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Post count:&#39;&lt;/span&gt;, totalPosts);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;totalPosts&lt;/code&gt; 会打印 &lt;strong&gt;3&lt;/strong&gt; 或 &lt;strong&gt;5&lt;/strong&gt; ，并不会打印 &lt;strong&gt;8&lt;/strong&gt; ，你可以在浏览器里自己试一下。&lt;/p&gt;
&lt;p&gt;问题在于读取 &lt;code&gt;totalPosts&lt;/code&gt; 和更新 &lt;code&gt;totalPosts&lt;/code&gt; 之间有一个时间间隔。这会导致竞争条件，当值在单独的函数调用中更新时，更新不会反映在当前函数范围中。因此，两个函数都会将它们的结果添加到 &lt;code&gt;totalPosts&lt;/code&gt; 的初始值0。&lt;/p&gt;
&lt;p&gt;避免竞争条件正确的做法：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; totalPosts = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getPosts&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;userId&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; users = [{ &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;posts&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; }, { &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;posts&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; }];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; sleep(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; users.find(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;user&lt;/span&gt;) =&amp;gt;&lt;/span&gt; user.id === userId).posts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addPosts&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;userId&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; posts = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getPosts(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  totalPosts += posts; &lt;span class=&quot;comment&quot;&gt;// variable is read and immediately updated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.all([addPosts(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), addPosts(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Post count:&#39;&lt;/span&gt;, totalPosts);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;max-nested-callbacks&quot;&gt;&lt;a href=&quot;#max-nested-callbacks&quot; class=&quot;headerlink&quot; title=&quot;max-nested-callbacks&quot;&gt;&lt;/a&gt;max-nested-callbacks&lt;/h2&gt;&lt;p&gt;防止回调地狱，避免大量的深度嵌套：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* eslint max-nested-callbacks: [&quot;error&quot;, 3] */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;async1(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;err, result1&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  async2(result1, &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;err, result2&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    async3(result2, &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;err, result3&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      async4(result3, &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;err, result4&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; result1 = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; asyncPromise1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; result2 = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; asyncPromise2(result1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; result3 = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; asyncPromise3(result2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; result4 = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; asyncPromise4(result3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result4);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;回调地狱让代码难以阅读和维护，建议将回调都重构为 &lt;code&gt;Promise&lt;/code&gt; 并使用现代的 &lt;code&gt;async/await&lt;/code&gt; 语法。&lt;/p&gt;
&lt;h2 id=&quot;no-return-await&quot;&gt;&lt;a href=&quot;#no-return-await&quot; class=&quot;headerlink&quot; title=&quot;no-return-await&quot;&gt;&lt;/a&gt;no-return-await&lt;/h2&gt;&lt;p&gt;返回异步结果时不一定要写 &lt;code&gt;await&lt;/code&gt; ，如果你要等待一个 &lt;code&gt;Promise&lt;/code&gt; ，然后又要立刻返回它，这可能是不必要的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getUser(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;从一个 &lt;code&gt;async&lt;/code&gt; 函数返回的所有值都包含在一个 &lt;code&gt;Promise&lt;/code&gt; 中，你可以直接返回这个 &lt;code&gt;Promise&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getUser(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然，也有个例外，如果外面有 &lt;code&gt;try...catch&lt;/code&gt; 包裹，删除 &lt;code&gt;await&lt;/code&gt; 就捕获不到异常了，在这种情况下，建议明确一下意图，把结果分配给不同行的变量。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 👎&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getUser(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (error) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Handle getUser error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 👍&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getUser(userId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (error) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Handle getUser error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;prefer-promise-reject-errors&quot;&gt;&lt;a href=&quot;#prefer-promise-reject-errors&quot; class=&quot;headerlink&quot; title=&quot;prefer-promise-reject-errors&quot;&gt;&lt;/a&gt;prefer-promise-reject-errors&lt;/h2&gt;&lt;p&gt;建议在 &lt;code&gt;reject Promise&lt;/code&gt; 时强制使用 &lt;code&gt;Error&lt;/code&gt; 对象，这样可以更方便的追踪错误堆栈。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(&lt;span class=&quot;string&quot;&gt;&#39;An error occurred&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;An error occurred&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;node-handle-callback-err&quot;&gt;&lt;a href=&quot;#node-handle-callback-err&quot; class=&quot;headerlink&quot; title=&quot;node/handle-callback-err&quot;&gt;&lt;/a&gt;node/handle-callback-err&lt;/h2&gt;&lt;p&gt;强制在 Node.js 的异步回调里进行异常处理。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;callback&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, data&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;callback&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, data&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 &lt;code&gt;Node.js&lt;/code&gt; 中，通常将异常作为第一个参数传递给回调函数。忘记处理这些异常可能会导致你的应用程序出现不可预知的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果函数的第一个参数命名为 err 时才会触发这个规则，你也可以去 .eslintrc 文件里自定义异常参数名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;node-no-sync&quot;&gt;&lt;a href=&quot;#node-no-sync&quot; class=&quot;headerlink&quot; title=&quot;node/no-sync&quot;&gt;&lt;/a&gt;node/no-sync&lt;/h2&gt;&lt;p&gt;不建议在存在异步替代方案的 &lt;code&gt;Node.js&lt;/code&gt; 核心 &lt;code&gt;API&lt;/code&gt; 中使用同步方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; file = fs.readFileSync(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; file = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; fs.readFile(path);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 &lt;code&gt;Node.js&lt;/code&gt; 中对 &lt;code&gt;I/O&lt;/code&gt; 操作使用同步方法会阻塞事件循环。大多数场景下，执行 &lt;code&gt;I/O&lt;/code&gt; 操作时使用异步方法是更好的选择。&lt;/p&gt;
&lt;h2 id=&quot;typescript-eslint-await-thenable&quot;&gt;&lt;a href=&quot;#typescript-eslint-await-thenable&quot; class=&quot;headerlink&quot; title=&quot;@typescript-eslint/await-thenable&quot;&gt;&lt;/a&gt;@typescript-eslint/await-thenable&lt;/h2&gt;&lt;p&gt;不建议 await 非 &lt;code&gt;Promise&lt;/code&gt; 函数或值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getValue&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; someValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getValue&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; someValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getValue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;typescript-eslint-no-floating-promises&quot;&gt;&lt;a href=&quot;#typescript-eslint-no-floating-promises&quot; class=&quot;headerlink&quot; title=&quot;@typescript-eslint/no-floating-promises&quot;&gt;&lt;/a&gt;@typescript-eslint/no-floating-promises&lt;/h2&gt;&lt;p&gt;建议 &lt;code&gt;Promise&lt;/code&gt; 附加异常处理的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myPromise()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myPromise()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;养成个好的习惯，永远做好异常处理！&lt;/p&gt;
&lt;h2 id=&quot;typescript-eslint-no-misused-promises&quot;&gt;&lt;a href=&quot;#typescript-eslint-no-misused-promises&quot; class=&quot;headerlink&quot; title=&quot;@typescript-eslint/no-misused-promises&quot;&gt;&lt;/a&gt;@typescript-eslint/no-misused-promises&lt;/h2&gt;&lt;p&gt;不建议将 &lt;code&gt;Promise&lt;/code&gt; 传递到并非想要处理它们的地方，例如 if 条件。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (getUserFromDB()) {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅ 👎&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getUserFromDB()) {}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;更推荐抽一个变量出来提高代码的可读性。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ✅ 👍&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getUserFromDB();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (user) {}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="Eslint" scheme="https://fe32.top/tags/Eslint/"/>
    
  </entry>
  
  <entry>
    <title>前端架构设计中如何做好技术决策？</title>
    <link href="https://fe32.top/articles/fe0417mn/"/>
    <id>https://fe32.top/articles/fe0417mn/</id>
    <published>2022-04-17T09:51:18.000Z</published>
    <updated>2023-06-27T14:39:00.669Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;原则-0-遵守公认的好的设计原则，比如说：&quot;&gt;&lt;a href=&quot;#原则-0-遵守公认的好的设计原则，比如说：&quot; class=&quot;headerlink&quot; title=&quot;原则 0: 遵守公认的好的设计原则，比如说：&quot;&gt;&lt;/a&gt;原则 0: 遵守公认的好的设计原则，比如说：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;DRY - Don’t repeat yourself （不要重复自己）&lt;/li&gt;
&lt;li&gt;KISS - Keep it Simple, Silly （让设计尽可能的简单）&lt;/li&gt;
&lt;li&gt;YAGNI - You aren’t gonna need it （只做刚刚好的设计，不要过度设计）&lt;/li&gt;
&lt;li&gt;… 其他&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;原则1-找出最本源的需求，而不应该局限于当前的技术实现和资源&quot;&gt;&lt;a href=&quot;#原则1-找出最本源的需求，而不应该局限于当前的技术实现和资源&quot; class=&quot;headerlink&quot; title=&quot;原则1: 找出最本源的需求，而不应该局限于当前的技术实现和资源&quot;&gt;&lt;/a&gt;原则1: 找出最本源的需求，而不应该局限于当前的技术实现和资源&lt;/h2&gt;&lt;p&gt;很多时候我们很容易被表面需求所误导，类似于乔布斯的名言：“如果亨利福特在发明汽车之前去做市场调查，他得到的答案一定是大家想要一辆更快的马车。”，如果我们在做设计和技术决策的时候，没有找出用户的真实需求，很容易就会在错误的方向上狂奔，做很多无用功！&lt;/p&gt;
&lt;p&gt;要找出本源的需求，还是需要多问为什么，多和干系人沟通，少考虑技术细节，少被现有的技术所误导或局限。&lt;/p&gt;
&lt;h3 id=&quot;案例：设计部门希望设计系统支持Angular&quot;&gt;&lt;a href=&quot;#案例：设计部门希望设计系统支持Angular&quot; class=&quot;headerlink&quot; title=&quot;案例：设计部门希望设计系统支持Angular&quot;&gt;&lt;/a&gt;案例：设计部门希望设计系统支持Angular&lt;/h3&gt;&lt;p&gt;我们设计部门最近希望我们的设计系统提供 Angular 版本，因为当前只支持 React 版本。从这个需求来看，表面是是要我们开发 Angular 版本，其实如果仔细追问他们到底为什么需要 Angular 版本，是因为有一个团队还在用 Angular ，他们希望这个团队能用我们的设计系统，但是人家表示用不了。其实本源的需求是希望有更多的团队用设计系统，而不是要支持 Angular 。&lt;/p&gt;
&lt;p&gt;那要满足这个团队的这个需求，是不是非要做一个 Angular 版本不可呢？当然不需要，如果我能提供一个类似于 BootStrap 的 HTML 和 CSS 版本，其实他们一样能用起来，而这么做成本不高，并且别的团队也可以用。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/17/93dbe070fab56.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;原则2-聚焦于-“收益”、“成本”和“风险”三者之间的平衡，而不是技术本身&quot;&gt;&lt;a href=&quot;#原则2-聚焦于-“收益”、“成本”和“风险”三者之间的平衡，而不是技术本身&quot; class=&quot;headerlink&quot; title=&quot;原则2: 聚焦于 “收益”、“成本”和“风险”三者之间的平衡，而不是技术本身&quot;&gt;&lt;/a&gt;原则2: 聚焦于 “收益”、“成本”和“风险”三者之间的平衡，而不是技术本身&lt;/h2&gt;&lt;p&gt;每一次技术决策，其实本质上就是一次取舍（Trade-Offs）&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/17/65c4ca9ebb947.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;每一次取舍（Trade-Offs），本质上就是在“收益”、“成本”和“风险”三者之间的平衡。&lt;/p&gt;
&lt;p&gt;既然每一个决策都涉及到收益成本风险，那么就不能只看收益而无视成本和风险。就像前一个案例中提到的，设计部门考虑的是 Angular 版本带来的收益，但是他们却忽略了打造一套 Angular 版本的设计系统所需要的成本，以及可能带来的巨大风险。&lt;/p&gt;
&lt;p&gt;所以在做技术决策的时候，理性的考虑一下 决策背后的收益、成本和风险的关系是很必要的，而不是仅靠喜好或者直觉来做决策。&lt;/p&gt;
&lt;h2 id=&quot;原则3-选择某个技术背后的生态系统而不是某个技术&quot;&gt;&lt;a href=&quot;#原则3-选择某个技术背后的生态系统而不是某个技术&quot; class=&quot;headerlink&quot; title=&quot;原则3: 选择某个技术背后的生态系统而不是某个技术&quot;&gt;&lt;/a&gt;原则3: 选择某个技术背后的生态系统而不是某个技术&lt;/h2&gt;&lt;p&gt;这条原则特别适用于前端领域，在前端，各种新技术、框架、工具层出不穷，如果总是追新，或者被某个软文吸引轻易选择了某个技术，最终会带来巨大的成本。&lt;/p&gt;
&lt;h3 id=&quot;案例：为什么我们从Preact迁移到React&quot;&gt;&lt;a href=&quot;#案例：为什么我们从Preact迁移到React&quot; class=&quot;headerlink&quot; title=&quot;案例：为什么我们从Preact迁移到React&quot;&gt;&lt;/a&gt;案例：为什么我们从Preact迁移到React&lt;/h3&gt;&lt;p&gt;在早些年的时候，我们前端选择了 Preact 作为UI渲染技术，这有早年 React License 的原因，也有 Preact 更小性能更好的原因。&lt;/p&gt;
&lt;p&gt;然而这些年在使用过程中，还是有很多不足的地方，核心原因都是生态不够好。&lt;/p&gt;
&lt;p&gt;比如说 Preact 调试很麻烦，因为它不像 React 有一个强大的 DevTools；比如说我们遇到过 Preact 在服务端渲染的内存泄漏问题，如果像我们这样大规模访问量的用户多一点，可能早就有人踩过坑了，不需要我们去花很长时间定位并最终去解决这个问题；比如最近我们在集成 Nextjs，Nextjs 是完全为 React 设计的，对 Preact 兼容性并不好。&lt;/p&gt;
&lt;p&gt;这样的案例还很多，所以选择技术，它背后的生态和社区活跃度很重要。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/17/fa1f42d6dde72.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;原则4-不仅要考虑如何构建，还要考虑如何维护&quot;&gt;&lt;a href=&quot;#原则4-不仅要考虑如何构建，还要考虑如何维护&quot; class=&quot;headerlink&quot; title=&quot;原则4: 不仅要考虑如何构建，还要考虑如何维护&quot;&gt;&lt;/a&gt;原则4: 不仅要考虑如何构建，还要考虑如何维护&lt;/h2&gt;&lt;p&gt;这是一个常见的问题，很多人只管搭建新项目的时候爽，而不管后续维护是不是困难，用了一堆自己喜欢的新技术，最后难以维护。下一个人接手了，搞不好会推翻重写一遍，这样的循环一次又一次。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/17/abfb92e845531.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样的错误我也常犯，比如2年前 React Hooks 刚出的时候，我就迫不及待用它来替代 Redux，结果上线后发现不好维护，有 Bug 也不好定位，不像以前 Redux，数据流特别清晰，借助工具非常好重现和定位问题，最终上线没多久就改回去了。&lt;/p&gt;
&lt;p&gt;所以现在在做技术决策的时候，我们很注意的一个问题就是将来维护的时候是不是很麻烦。&lt;/p&gt;
&lt;p&gt;包括我在代码审查的时候，有时候看到一些功能能运行的很好 PR，但是代码写的比较难懂的，或者没有遵守最佳实践的，只要是给未来的维护造成麻烦的，我都会毫不犹豫要求重写，避免增加未来的维护成本。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;上面就是我们现在实践的五个技术决策原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原则 0: 遵守公认的好的设计原则&lt;/li&gt;
&lt;li&gt;原则 1: 找出最本源的需求，而不应该局限于当前的技术实现和资源&lt;/li&gt;
&lt;li&gt;原则 2: 聚焦于 “收益”、“成本”和“风险”三者之间的平衡，而不是技术本身&lt;/li&gt;
&lt;li&gt;原则 3: 选择某个技术背后的生态系统而不是某个技术&lt;/li&gt;
&lt;li&gt;原则 4: 不仅要考虑如何构建，还要考虑如何维护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些原则绝大部分时候都可以很好的帮助我们做出正确的决策，避免踩坑。但我也会一直在反思曾经做过的决策，对于做出的不太好的决策，会反过来考虑是否要修订这些原则，最终通过不断完善决策原则，帮助我和团队更好的做出技术决策。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最后，推荐一下左耳朵耗子写的一篇： &lt;a href=&quot;https://coolshell.cn/articles/21672.html&quot;&gt;我做系统架构的一些原则&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="前端工程架构" scheme="https://fe32.top/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="前端工程架构" scheme="https://fe32.top/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>iOS证书(.p12)和描述文件(.mobileprovision)申请</title>
    <link href="https://fe32.top/articles/io0411sc/"/>
    <id>https://fe32.top/articles/io0411sc/</id>
    <published>2022-04-10T09:13:22.000Z</published>
    <updated>2023-06-27T14:39:00.778Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如果你从事过iOS开发，大概都会了解到iOS有两种证书和描述文件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;证书类型&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;使用场景&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;开发(Development)证书和描述文件&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;用于开发测试，在 HBuilderX 中打包后可在真机环境调试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;发布(Distribution)证书和描述文件&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;用于提交 AppStore，在 HBuilderX 中提交云打包后提交到 AppStore 审核发布&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;如果从未接触过 iOS，按照下面教程的所需环境、步骤操作，你将学会如何制作这 两种证书 和 描述文件。&lt;/p&gt;
&lt;h2 id=&quot;准备环境&quot;&gt;&lt;a href=&quot;#准备环境&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h2&gt;&lt;div class=&quot;checkbox green checked&quot;&gt;&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;&gt;
            &lt;p&gt;必需要有苹果开发者账号，并且加入了 “iOS Developer Program”&lt;/p&gt;
            &lt;/div&gt;
&lt;div class=&quot;checkbox green checked&quot;&gt;&lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;&gt;
            &lt;p&gt;Mac OS 10.9以上系统（如果已经申请p12证书则不需要）&lt;/p&gt;
            &lt;/div&gt;

&lt;br&gt;

&lt;div class=&quot;tip cogs faa-horizontal&quot;&gt;&lt;p&gt;苹果开发帐号说明&lt;br&gt;个人账号（Individual）/公司团队账号 （Company/Organization）：&lt;/p&gt;
&lt;p&gt;费用都是99美金一年，两者无本质区别，都可以发布应用到苹果市场。&lt;/p&gt;
&lt;p&gt;区别在于个人账号在App Store销售者只能显示个人的ID，比如san zhang，单人使用。公司团队账号在App Store销售者可以显示类似Studios，或者自定义的团队名称，比如Mamshare INC，公司账号允许多个开发者协作开发，比个人帐号多一些帐号管理和级别权限的设置。&lt;/p&gt;
&lt;p&gt;这两种帐号都可以用于开发，但在生成开发证书的时候，需要在生成mobileprovision描述文件时把需要安装的iPhone/iPad的设备UDID进行绑定（最多可以绑定100个设备），否则生成的ipa不能正常安装到测试设备上。&lt;/p&gt;
&lt;p&gt;企业账号 （Enterprise）：&lt;/p&gt;
&lt;p&gt;费用299美金一年，该账号开发应用不能发布到App Store，只能用于企业自己内部使用的app通过网站下载，对测试的苹果iOS设备UDID数量不限制。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;生成证书请求文件&quot;&gt;&lt;a href=&quot;#生成证书请求文件&quot; class=&quot;headerlink&quot; title=&quot;生成证书请求文件&quot;&gt;&lt;/a&gt;生成证书请求文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;不管是&lt;strong&gt;申请开发 (Development) 证书&lt;/strong&gt; 还是 &lt;strong&gt;发布 (Distribution) 证书&lt;/strong&gt;，都需要使用&lt;strong&gt;证书请求 (.certSigningRequest) 文件&lt;/strong&gt;，证书请求文件需在Mac OS上使用 &lt;strong&gt;“钥匙串访问”&lt;/strong&gt; 工具生成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;打开“钥匙串访问”工具&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/32bfd54e10c8a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/c13e3f6cfdad7.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;打开菜单 “钥匙串访问”-&amp;gt;“证书助理”，选择“从证书颁发机构请求证书…”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/b7a241f628ba9.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;打开创建请求证书页面，在页面中输入用户邮件地址、常用名称，选择存储到磁盘，点击 “继续” ：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/c58d3a5f6c005.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;文件名称为 &lt;strong&gt;“CertificateSigningRequest.certSigningRequest”&lt;/strong&gt;，选择保存位置，点击 &lt;strong&gt;“存储”&lt;/strong&gt; 将证书请求文件保存到指定路径下，后面申请 &lt;strong&gt;开发(Development)证书&lt;/strong&gt; 和 &lt;strong&gt;发布(Production)证书&lt;/strong&gt; 时需要用到。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/0bdd9e49bea7f.webp&quot; style=&quot;width:349px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在保存位置可看到 生成的请求证书(CertificateSigningRequest.certSigningRequest)。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/ec8e6d555ce56.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;登录苹果开发者账号&quot;&gt;&lt;a href=&quot;#登录苹果开发者账号&quot; class=&quot;headerlink&quot; title=&quot;登录苹果开发者账号&quot;&gt;&lt;/a&gt;登录苹果开发者账号&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;打开网站 &lt;a href=&quot;https://developer.apple.com/devcenter/ios/index.action&quot;&gt;iOS Dev Center&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;使用苹果开发者账号登录 iOS Dev Center：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/71c5454c1c04e.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;登录成功后在页面左侧选择 “Certificates,IDs &amp;amp; Profiles” 进入证书管理页面：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/348f64455500c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在证书管理页面，可以看到所有已经申请的证书及描述文件：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/9a3dba58f4e05.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;申请苹果-App-ID-（App的唯一标识）&quot;&gt;&lt;a href=&quot;#申请苹果-App-ID-（App的唯一标识）&quot; class=&quot;headerlink&quot; title=&quot;申请苹果 App ID （App的唯一标识）&quot;&gt;&lt;/a&gt;申请苹果 App ID （App的唯一标识）&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;选择页面的“Identifiers”可查看到已申请的所有 App 应用标识，点击页面上的加号来创建一个新的应用标识：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/c4a3a60630d53.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;选择标识类型为“App”，然后点击 “Continue”&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/7c7c834630070.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;平台选择“iOS，tvOS，watchOS”，Bundle ID 选择“Explicit”，在 Description 中填写描述，然后填写 Bundle ID，Bundle ID 要保持唯一性，建议填写反域名加应用标识的格式 如：“uni.xxxxxxxxx”，然后点击 “Continue”&lt;div class=&quot;note red no-icon modern&quot;&gt;&lt;p&gt;注意：在 HBuilderX 中 App 提交云端打包时界面上的 AppID 栏填写的就是这个 Bundle ID&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/3b39bab22e0f3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;接下来需要选择应用需要使用的服务（如需要使用到消息推送功能，则选择“Push Notifications”），然后点击“Continue”&lt;div class=&quot;note red no-icon modern&quot;&gt;&lt;p&gt;注意：如果App用不到的服务一定不要勾选，以免响应审核&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/cc7ca9ab0fb8a.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;确认后选择提交，回到 identifiers 页面即可看到刚创建的App ID：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/ed5b4dd5984ff.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;申请开发-Development-证书和描述文件&quot;&gt;&lt;a href=&quot;#申请开发-Development-证书和描述文件&quot; class=&quot;headerlink&quot; title=&quot;申请开发(Development)证书和描述文件&quot;&gt;&lt;/a&gt;申请开发(Development)证书和描述文件&lt;/h2&gt;&lt;div class=&quot;note info no-icon flat&quot;&gt;&lt;p&gt;开发(Development)证书 及 对应的描述文件用于开发阶段使用，可以直接将 App 安装到手机上，一个描述文件最多绑定100台测试设备（开发证书不能用于发布应用到 App Store）。&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&quot;申请开发-Development-证书&quot;&gt;&lt;a href=&quot;#申请开发-Development-证书&quot; class=&quot;headerlink&quot; title=&quot;申请开发(Development)证书&quot;&gt;&lt;/a&gt;申请开发(Development)证书&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在证书管理页面选择 “Certificates” 可查看到已申请的所有证书（TYPE：Development 为开发证书，Distribution为发布证书），点击页面的加号来创建一个新的证书：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/849853215dfd2.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 “Software” 栏下选中 “iOS App Development” 然后点击 “Continue”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/0b929b10d830f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;用到刚刚生成的证书请求文件，点击“Choose File…”，选择刚刚保存到本地的 “CertificateSigningRequest.certSigningRequest”文件，点击 “Continue” 生成证书文件：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/b25182a1d7c0d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;生成证书后选择 “Download” 将证书下到本地 (development.cer)：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/3a52ae9d5fcf3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/ba00ed26cf9c7.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;双击保存到本地的 development.cer 文件，会自动打开 “钥匙串访问” 工具说明导入证书成功，可以在证书列表中看到刚刚导入的证书，接下来需要导出 .p12 证书文件，选中导入的证书，右键选择 “导出xxxxxx”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/258cffa0bc757.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入文件名、选择路径后点击 “存储”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/b2cc9e74411f8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入密码及确认密码后点击 “好”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/296e61086ec36.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;至此，我们已经完成了开发证书的制作（得到了 xxx.p12 证书文件）。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/e62f842827eb6.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;如果出现开发证书不受信任，说明开发设备中 Apple Worldwide Developer Relations Certification Authority证书被删除了 或者 已安装的WWDRCA失效了。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/5e42531a2f00c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
解决方案：&lt;a href=&quot;https://www.apple.com/certificateauthority/&quot;&gt;https://www.apple.com/certificateauthority/&lt;/a&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/1c9266bc34eee.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;添加调试设备&quot;&gt;&lt;a href=&quot;#添加调试设备&quot; class=&quot;headerlink&quot; title=&quot;添加调试设备&quot;&gt;&lt;/a&gt;添加调试设备&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;开发描述文件必须绑定调试设备，只有授权的设备才可以直接安装 App，所以在申请开发描述文件之前，先添加调试的设备。&lt;br&gt;(如果已经添加设备，可跳过此节)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;在证书管理页面选择 “Devices”，可查看到已添加的所有设备信息，点击页面上的加号来添加一个新设备：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/5faa18a9f989b.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;填写设备名称 和 UDID（设备标识）：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/5f92123e2e3e5.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;note info no-icon modern&quot;&gt;&lt;p&gt;获取设备UDID方法，将设备连接到电脑，启动 iTunes，点击此区域可切换显示设备的 UDID，右键选择复制。&lt;br&gt;直接点击链接&lt;a href=&quot;https://www.pgyer.com/tools/udid&quot;&gt;https://www.pgyer.com/tools/udid&lt;/a&gt;，扫描二维码，会提示安装一个描述文件，点击安装之后，就会在浏览器中显示出设备信息。长按复制”设备信息UDID”下面的值，就是UDID了。&lt;/p&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;申请开发-Development-描述文件&quot;&gt;&lt;a href=&quot;#申请开发-Development-描述文件&quot; class=&quot;headerlink&quot; title=&quot;申请开发 (Development) 描述文件&quot;&gt;&lt;/a&gt;申请开发 (Development) 描述文件&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在证书管理页面选择 “Profiles”，可查看到已申请的所有描述文件，点击页面上的加号来添加一个新的描述文件：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/800ebe7658b5b.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 “Development” 栏下选中 “iOS App Development”，点击“Continue”按钮：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/1762f11243ea2.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;这里要选择之前创建的 “App ID” (这里是“uni.xxxxxxxxx”)，点击“Continue”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/1d77f8d852cc4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;接下来选择需要绑定的证书，点击“Continue”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/1ab102e5156f9.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;选择授权调试设备，这里建议直接勾选 “Select All”，点击 “Continue”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/bfac282287b3f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入描述文件的名称（如“xxxxProfile”）, 点击 “Generate” 生成描述文件：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/816259708e02d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;点击“Download”下载保存开发描述文件（文件后缀为 .mobileprovision）&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/249a9f51f7cc0.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;至此，我们已经得到了开发证书（.p12）及对应的描述文件（.mobileprovision）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;申请发布-Distribution-证书和描述文件&quot;&gt;&lt;a href=&quot;#申请发布-Distribution-证书和描述文件&quot; class=&quot;headerlink&quot; title=&quot;申请发布(Distribution)证书和描述文件&quot;&gt;&lt;/a&gt;申请发布(Distribution)证书和描述文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;发布 (Production) 证书用于正式发布环境下使用，用于提交到Appstore审核发布。发布证书打包的 ipa，不可以直接安装到手机上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;申请发布-Production-证书&quot;&gt;&lt;a href=&quot;#申请发布-Production-证书&quot; class=&quot;headerlink&quot; title=&quot;申请发布(Production)证书&quot;&gt;&lt;/a&gt;申请发布(Production)证书&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在证书管理页面选择 “Certificates” 可查看到已申请的所有证书（TYPE：Development 为开发证书，Distribution为发布证书），点击页面的加号来创建一个新的证书：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/9234c7437cc3d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 “Software” 栏下选中 “App Store and Ad Hoc”，点击 “Continue”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/f8ce9f59d3fe2.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;接下来同样需要用到之前生成的证书请求文件，点击“Choose File…”选择刚刚保存到本地的 “CertificateSigningRequest.certSigningRequest”文件，点击 “Continue” 生成证书文件：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/b25182a1d7c0d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;生成证书成功，选择“Download” 将证书下载到本地 (ios_production.cer)：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/1f0ddf407133f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;同样双击保存到本地的 ios_production.cer 文件将证书导入到 “钥匙串访问”工具中，可以在证书列表中看到刚刚导入的证书，接下来需要导出 .p12 证书文件，选中导入的证书，右键选择 “导出xxxxxx”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/44001c7d75409.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/a3a6573917ccb.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入文件名、选择路径后点击 “存储”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/9be53fe2207b8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输入密码及确认密码后点击 “好”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/33cd5a9e191db.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;如果弹出需要登录钥匙串的密码，输入当前设备账户密码即可。&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/9450f2ebf2100.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;至此，我们已经完成了发布证书的制作（得到了 xxx.p12 证书文件），接下来，继续生成发布描述文件&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/85372dad2e6c5.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;申请发布-Distribution-描述文件&quot;&gt;&lt;a href=&quot;#申请发布-Distribution-描述文件&quot; class=&quot;headerlink&quot; title=&quot;申请发布 (Distribution) 描述文件&quot;&gt;&lt;/a&gt;申请发布 (Distribution) 描述文件&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在证书管理页面选择 “Profiles”，可查看到已申请的所有描述文件，点击页面上的加号来添加一个新的描述文件：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/800ebe7658b5b.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 “Distribution” 栏下选中 “App Store”，点击“Continue”按钮：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/8e18a848436f3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;这里要选择之前创建的 “App ID” (这里是“uni.xxxxxxxxx”)，点击“Continue”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/25c1eff385108.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;接下来选择需要绑定的发布证书（iOS Distribution），这里勾选刚刚生成的发布证书”，点击“Continue”：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/225d2ff7ab90f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;接下来输入描述文件的名称（如“AppProfileDistribution”）, 点击 “Generate” 生成描述文件：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/11/b1373b52a866c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;然后点击 “Download” 将描述文件下载到本地（文件后缀为 .mobileprovision），&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot;</summary>
        
      
    
    
    
    <category term="IOS" scheme="https://fe32.top/categories/IOS/"/>
    
    
    <category term="IOS" scheme="https://fe32.top/tags/IOS/"/>
    
    <category term="Certificates" scheme="https://fe32.top/tags/Certificates/"/>
    
    <category term="Mobileprovision" scheme="https://fe32.top/tags/Mobileprovision/"/>
    
    <category term="APP开发" scheme="https://fe32.top/tags/APP%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>34个免费学习编码的最佳网站</title>
    <link href="https://fe32.top/articles/co0410de/"/>
    <id>https://fe32.top/articles/co0410de/</id>
    <published>2022-04-10T05:12:33.000Z</published>
    <updated>2023-06-27T14:39:00.839Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;div class=&quot;tip cogs faa-horizontal&quot;&gt;&lt;p&gt;对我来说，书籍或在线课程可以被认为是网页设计和开发领域的学习和专业发展非常有用的资源。因为它是作者在学习过程中的经验总结，以及将这些知识应用到实际项目中。&lt;/p&gt;
&lt;p&gt;如果您有足够的钱能够购买最好的编程书籍和课程来发展您的技能，而不用看它的价格，自然是更好的。不过和我一样，刚开始还是个没有收入的学生的时候，花钱买编程方面的书也是一个很艰难的想法。因此，我经常收集一些电子书版本，免费的编程课程，以帮助我专业发展，而不必担心经济问题。&lt;/p&gt;
&lt;p&gt;在今天的文章中，我将向您介绍 34 个有关 HTML、CSS 和 Javascript 的免费电子书。希望它对您在Web开发过程中有所帮助。（如果你负担得起，你应该买书或支持这些电子书的作者！）&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;HTML-and-CSS-Book&quot;&gt;&lt;a href=&quot;#HTML-and-CSS-Book&quot; class=&quot;headerlink&quot; title=&quot;HTML and CSS Book&quot;&gt;&lt;/a&gt;HTML and CSS Book&lt;/h2&gt;&lt;h3 id=&quot;Learn-to-Code-HTML-amp-CSS&quot;&gt;&lt;a href=&quot;#Learn-to-Code-HTML-amp-CSS&quot; class=&quot;headerlink&quot; title=&quot;Learn to Code HTML &amp;amp; CSS&quot;&gt;&lt;/a&gt;Learn to Code HTML &amp;amp; CSS&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/63a39bdf237fc.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://learn.shayhowe.com/html-css/&quot;&gt;https://learn.shayhowe.com/html-css/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;HTML5-Notes-for-Professionals-book&quot;&gt;&lt;a href=&quot;#HTML5-Notes-for-Professionals-book&quot; class=&quot;headerlink&quot; title=&quot;HTML5 Notes for Professionals book&quot;&gt;&lt;/a&gt;HTML5 Notes for Professionals book&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/e05625b1c22f4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://goalkicker.com/HTML5Book/&quot;&gt;https://goalkicker.com/HTML5Book/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Htmldog&quot;&gt;&lt;a href=&quot;#Htmldog&quot; class=&quot;headerlink&quot; title=&quot;Htmldog&quot;&gt;&lt;/a&gt;Htmldog&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/fe7ef9c50c8f4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.htmldog.com/&quot;&gt;https://www.htmldog.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;CSS-Animation&quot;&gt;&lt;a href=&quot;#CSS-Animation&quot; class=&quot;headerlink&quot; title=&quot;CSS Animation&quot;&gt;&lt;/a&gt;CSS Animation&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/e5ee0679ca7d8.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://cssanimation.rocks/&quot;&gt;https://cssanimation.rocks/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Web-Visual-Effects-with-CSS3&quot;&gt;&lt;a href=&quot;#Web-Visual-Effects-with-CSS3&quot; class=&quot;headerlink&quot; title=&quot;Web Visual Effects with CSS3&quot;&gt;&lt;/a&gt;Web Visual Effects with CSS3&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/82dea980302ef.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://leanpub.com/web-visual-effects-with-css3/read&quot;&gt;https://leanpub.com/web-visual-effects-with-css3/read&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;The-Magic-Of-CSS&quot;&gt;&lt;a href=&quot;#The-Magic-Of-CSS&quot; class=&quot;headerlink&quot; title=&quot;The Magic Of CSS&quot;&gt;&lt;/a&gt;The Magic Of CSS&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/195dbf5b11c09.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://adamschwartz.co/magic-of-css/chapters/1-the-box/&quot;&gt;https://adamschwartz.co/magic-of-css/chapters/1-the-box/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;HTML-amp-CSS-Is-Hard&quot;&gt;&lt;a href=&quot;#HTML-amp-CSS-Is-Hard&quot; class=&quot;headerlink&quot; title=&quot;HTML &amp;amp; CSS Is Hard&quot;&gt;&lt;/a&gt;HTML &amp;amp; CSS Is Hard&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/d605dc02746b6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.internetingishard.com/html-and-css/&quot;&gt;https://www.internetingishard.com/html-and-css/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;DIVE-INTO-HTML5&quot;&gt;&lt;a href=&quot;#DIVE-INTO-HTML5&quot; class=&quot;headerlink&quot; title=&quot;DIVE INTO HTML5&quot;&gt;&lt;/a&gt;DIVE INTO HTML5&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/2d6b2a9e27bfb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;http://diveintohtml5.info/index.html&quot;&gt;http://diveintohtml5.info/index.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Dash&quot;&gt;&lt;a href=&quot;#Dash&quot; class=&quot;headerlink&quot; title=&quot;Dash&quot;&gt;&lt;/a&gt;Dash&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/5cbd4cefcbd42.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://dash.generalassemb.ly/&quot;&gt;https://dash.generalassemb.ly/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;MaintainableCSS&quot;&gt;&lt;a href=&quot;#MaintainableCSS&quot; class=&quot;headerlink&quot; title=&quot;MaintainableCSS&quot;&gt;&lt;/a&gt;MaintainableCSS&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/382e838352582.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://maintainablecss.com/&quot;&gt;https://maintainablecss.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;MarkSheet&quot;&gt;&lt;a href=&quot;#MarkSheet&quot; class=&quot;headerlink&quot; title=&quot;MarkSheet&quot;&gt;&lt;/a&gt;MarkSheet&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/133a98e1df804.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://marksheet.io/&quot;&gt;https://marksheet.io/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Enduring-CSS&quot;&gt;&lt;a href=&quot;#Enduring-CSS&quot; class=&quot;headerlink&quot; title=&quot;Enduring CSS&quot;&gt;&lt;/a&gt;Enduring CSS&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/ff5ff9cf479ca.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://ecss.benfrain.com/&quot;&gt;https://ecss.benfrain.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;HTML-Canvas-Deep-Dive&quot;&gt;&lt;a href=&quot;#HTML-Canvas-Deep-Dive&quot; class=&quot;headerlink&quot; title=&quot;HTML Canvas Deep Dive&quot;&gt;&lt;/a&gt;HTML Canvas Deep Dive&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/7e688d65333ee.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://joshondesign.com/p/books/canvasdeepdive/toc.html&quot;&gt;https://joshondesign.com/p/books/canvasdeepdive/toc.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Code-Guide&quot;&gt;&lt;a href=&quot;#Code-Guide&quot; class=&quot;headerlink&quot; title=&quot;Code Guide&quot;&gt;&lt;/a&gt;Code Guide&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/ada452145f999.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://codeguide.co/#html-doctype&quot;&gt;https://codeguide.co/#html-doctype&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;A-Guide-to-HTML5-and-CSS3&quot;&gt;&lt;a href=&quot;#A-Guide-to-HTML5-and-CSS3&quot; class=&quot;headerlink&quot; title=&quot;A Guide to HTML5 and CSS3&quot;&gt;&lt;/a&gt;A Guide to HTML5 and CSS3&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/92702a890613e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://html5hive.org/free-ebook-a-guide-to-html5-and-css3/&quot;&gt;https://html5hive.org/free-ebook-a-guide-to-html5-and-css3/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Understanding-Flexbox&quot;&gt;&lt;a href=&quot;#Understanding-Flexbox&quot; class=&quot;headerlink&quot; title=&quot;Understanding Flexbox&quot;&gt;&lt;/a&gt;Understanding Flexbox&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/7e5c141f2865f.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://ohansemmanuel.github.io/uf_download.html&quot;&gt;https://ohansemmanuel.github.io/uf_download.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Free-Javascript-Books-for-Beginners&quot;&gt;&lt;a href=&quot;#Free-Javascript-Books-for-Beginners&quot; class=&quot;headerlink&quot; title=&quot;Free Javascript Books for Beginners&quot;&gt;&lt;/a&gt;Free Javascript Books for Beginners&lt;/h2&gt;&lt;h3 id=&quot;Eloquent-JavaScript&quot;&gt;&lt;a href=&quot;#Eloquent-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;Eloquent JavaScript&quot;&gt;&lt;/a&gt;Eloquent JavaScript&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/1500d1d7575ed.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://eloquentjavascript.net/&quot;&gt;https://eloquentjavascript.net/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;JavaScript-ES2015-Enlightenment&quot;&gt;&lt;a href=&quot;#JavaScript-ES2015-Enlightenment&quot; class=&quot;headerlink&quot; title=&quot;JavaScript (ES2015+) Enlightenment&quot;&gt;&lt;/a&gt;JavaScript (ES2015+) Enlightenment&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/923979c6f6e5d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://frontendmasters.com/books/javascript-enlightenment/&quot;&gt;https://frontendmasters.com/books/javascript-enlightenment/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;JavaScript®-Notes-for-Professionals-book&quot;&gt;&lt;a href=&quot;#JavaScript®-Notes-for-Professionals-book&quot; class=&quot;headerlink&quot; title=&quot;JavaScript® Notes for Professionals book&quot;&gt;&lt;/a&gt;JavaScript® Notes for Professionals book&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/304e0ea325d66.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://goalkicker.com/JavaScriptBook/&quot;&gt;https://goalkicker.com/JavaScriptBook/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;JavaScript-Garden&quot;&gt;&lt;a href=&quot;#JavaScript-Garden&quot; class=&quot;headerlink&quot; title=&quot;JavaScript Garden&quot;&gt;&lt;/a&gt;JavaScript Garden&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/57811193735e1.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://bonsaiden.github.io/JavaScript-Garden/&quot;&gt;https://bonsaiden.github.io/JavaScript-Garden/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;JavaScript-Info&quot;&gt;&lt;a href=&quot;#JavaScript-Info&quot; class=&quot;headerlink&quot; title=&quot;JavaScript Info&quot;&gt;&lt;/a&gt;JavaScript Info&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/66c7843ff87d4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://javascript.info/&quot;&gt;https://javascript.info/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;The-Odin-Project&quot;&gt;&lt;a href=&quot;#The-Odin-Project&quot; class=&quot;headerlink&quot; title=&quot;The Odin Project&quot;&gt;&lt;/a&gt;The Odin Project&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/255c8c44fdc95.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.theodinproject.com/courses/javascript&quot;&gt;https://www.theodinproject.com/courses/javascript&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;JS-Books&quot;&gt;&lt;a href=&quot;#JS-Books&quot; class=&quot;headerlink&quot; title=&quot;JS Books&quot;&gt;&lt;/a&gt;JS Books&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/51cab7ce630ad.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://jsbooks.revolunet.com/&quot;&gt;https://jsbooks.revolunet.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Robust-Client-Side-JavaScript&quot;&gt;&lt;a href=&quot;#Robust-Client-Side-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;Robust Client-Side JavaScript&quot;&gt;&lt;/a&gt;Robust Client-Side JavaScript&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/52cf790c149bd.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://molily.de/robust-javascript/&quot;&gt;https://molily.de/robust-javascript/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Front-End-Web-Apps-with-Plain-JavaScript&quot;&gt;&lt;a href=&quot;#Front-End-Web-Apps-with-Plain-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;Front-End Web Apps with Plain JavaScript&quot;&gt;&lt;/a&gt;Front-End Web Apps with Plain JavaScript&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/2424ae3741d49.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://web-engineering.info/JsFrontendApp-Book&quot;&gt;https://web-engineering.info/JsFrontendApp-Book&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Human-JavaScript&quot;&gt;&lt;a href=&quot;#Human-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;Human JavaScript&quot;&gt;&lt;/a&gt;Human JavaScript&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/713ed0b886c59.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;http://read.humanjavascript.com/ch02-the-big-decision.html&quot;&gt;http://read.humanjavascript.com/ch02-the-big-decision.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Learn-JS&quot;&gt;&lt;a href=&quot;#Learn-JS&quot; class=&quot;headerlink&quot; title=&quot;Learn JS&quot;&gt;&lt;/a&gt;Learn JS&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/aec502a0f98a4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.learn-js.org/&quot;&gt;https://www.learn-js.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;HTML-CSS-Javascript-Course-Free&quot;&gt;&lt;a href=&quot;#HTML-CSS-Javascript-Course-Free&quot; class=&quot;headerlink&quot; title=&quot;HTML, CSS, Javascript Course Free&quot;&gt;&lt;/a&gt;HTML, CSS, Javascript Course Free&lt;/h2&gt;&lt;h3 id=&quot;Foundations-of-Front-End-Web-Development&quot;&gt;&lt;a href=&quot;#Foundations-of-Front-End-Web-Development&quot; class=&quot;headerlink&quot; title=&quot;Foundations of Front-End Web Development&quot;&gt;&lt;/a&gt;Foundations of Front-End Web Development&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/1ff8f02818d39.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.udemy.com/course/foundations-of-front-end-development/&quot;&gt;https://www.udemy.com/course/foundations-of-front-end-development/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Web-Development-By-Doing-HTML-CSS-From-Scratch&quot;&gt;&lt;a href=&quot;#Web-Development-By-Doing-HTML-CSS-From-Scratch&quot; class=&quot;headerlink&quot; title=&quot;Web Development By Doing: HTML / CSS From Scratch&quot;&gt;&lt;/a&gt;Web Development By Doing: HTML / CSS From Scratch&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/519fc09cdb4c2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.udemy.com/course/web-development-learn-by-doing-html5-css3-from-scratch-introductory/&quot;&gt;https://www.udemy.com/course/web-development-learn-by-doing-html5-css3-from-scratch-introductory/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Master-the-Basics-of-HTML5-amp-CSS3-Beginner-Web-Development&quot;&gt;&lt;a href=&quot;#Master-the-Basics-of-HTML5-amp-CSS3-Beginner-Web-Development&quot; class=&quot;headerlink&quot; title=&quot;Master the Basics of HTML5 &amp;amp; CSS3: Beginner Web Development&quot;&gt;&lt;/a&gt;Master the Basics of HTML5 &amp;amp; CSS3: Beginner Web Development&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/edd188ea7e622.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.udemy.com/course/master-the-basics-of-html5-css3-beginner-web-development/&quot;&gt;https://www.udemy.com/course/master-the-basics-of-html5-css3-beginner-web-development/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Learn-HTML5-and-CSS3-From-Scratch&quot;&gt;&lt;a href=&quot;#Learn-HTML5-and-CSS3-From-Scratch&quot; class=&quot;headerlink&quot; title=&quot;Learn HTML5 and CSS3 From Scratch&quot;&gt;&lt;/a&gt;Learn HTML5 and CSS3 From Scratch&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/ab8df8375735a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.youtube.com/watch?v=mU6anWqZJcc&amp;amp;ab_channel=freeCodeCamp.org&quot;&gt;https://www.youtube.com/watch?v=mU6anWqZJcc&amp;amp;ab_channel=freeCodeCamp.org&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Learn-JavaScript-Code-Cademy&quot;&gt;&lt;a href=&quot;#Learn-JavaScript-Code-Cademy&quot; class=&quot;headerlink&quot; title=&quot;Learn JavaScript (Code Cademy)&quot;&gt;&lt;/a&gt;Learn JavaScript (Code Cademy)&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/8df87bac49a57.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.codecademy.com/learn/introduction-to-javascript&quot;&gt;https://www.codecademy.com/learn/introduction-to-javascript&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Computer-programming-Khan-Academy&quot;&gt;&lt;a href=&quot;#Computer-programming-Khan-Academy&quot; class=&quot;headerlink&quot; title=&quot;Computer programming (Khan Academy)&quot;&gt;&lt;/a&gt;Computer programming (Khan Academy)&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/f2ece8faffab2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.khanacademy.org/computing/computer-programming&quot;&gt;https://www.khanacademy.org/computing/computer-programming&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Javascript-Essentials&quot;&gt;&lt;a href=&quot;#Javascript-Essentials&quot; class=&quot;headerlink&quot; title=&quot;Javascript Essentials&quot;&gt;&lt;/a&gt;Javascript Essentials&lt;/h3&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/04/10/c62b5c63e2752.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.udemy.com/course/javascript-essentials/&quot;&gt;https://www.udemy.com/course/javascript-essentials/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;p&gt;我希望这篇文章将提供最好的网站来学习 html，css，javascript免费的网页开发，如果您有任何问题，请在留言区给我留言，我会尽快回复。&lt;/p&gt;
&lt;p&gt;感谢您的阅读，祝编程愉快！&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://us.niemvuilaptrinh.com/article/34-ebooks-courses-free-for-learn-front-end&quot;&gt;Top 34 Best Websites to Learn Coding for</summary>
        
      
    
    
    
    <category term="推荐分享" scheme="https://fe32.top/categories/%E6%8E%A8%E8%8D%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Websites" scheme="https://fe32.top/tags/Websites/"/>
    
    <category term="Learn Coding" scheme="https://fe32.top/tags/Learn-Coding/"/>
    
  </entry>
  
  <entry>
    <title>17 个流行的Vue插件</title>
    <link href="https://fe32.top/articles/vu0326ep/"/>
    <id>https://fe32.top/articles/vu0326ep/</id>
    <published>2022-03-26T10:34:40.000Z</published>
    <updated>2023-06-27T14:39:00.845Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/8f9d77fb7c34e.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;Vue 被一个健康的插件和包的生态系统所加强，使开发变得可靠、快速和简单。由于Vue 是一个国际开发者社区所选择的框架，所以有一个不断增长的插件和包库，你可以在项目中使用。&lt;/p&gt;
&lt;p&gt;本文列举了用于 Vue 2 和 Vue 3 的 17个 流行的 Vue 插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vuetify&lt;/li&gt;
&lt;li&gt;NuxtJS&lt;/li&gt;
&lt;li&gt;Vuex&lt;/li&gt;
&lt;li&gt;Vuex Persisted State&lt;/li&gt;
&lt;li&gt;VuePress&lt;/li&gt;
&lt;li&gt;Vue Meta&lt;/li&gt;
&lt;li&gt;Vue ChartJS&lt;/li&gt;
&lt;li&gt;Vue Grid Layout&lt;/li&gt;
&lt;li&gt;Vue Draggable&lt;/li&gt;
&lt;li&gt;Vee-Validate&lt;/li&gt;
&lt;li&gt;Vue Toastification&lt;/li&gt;
&lt;li&gt;Vue Tour&lt;/li&gt;
&lt;li&gt;Swiper.js&lt;/li&gt;
&lt;li&gt;Vue2-Leaflet&lt;/li&gt;
&lt;li&gt;TroisJS&lt;/li&gt;
&lt;li&gt;Vue Scrollama&lt;/li&gt;
&lt;li&gt;Vue QR Code Reader&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Vuetify&quot;&gt;&lt;a href=&quot;#Vuetify&quot; class=&quot;headerlink&quot; title=&quot;Vuetify&quot;&gt;&lt;/a&gt;Vuetify&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/bea915de2678d.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;教程地址：&lt;a href=&quot;https://www.vuemastery.com/courses/beautify-with-vuetify/getting-started-with-vuetify&quot;&gt;https://www.vuemastery.com/courses/beautify-with-vuetify/getting-started-with-vuetify&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你是否曾纠结于如何让应用在视觉上看起来更吸引人？Vuetify是一个基于 Material Design 的 UI 库，支持谷歌和 Android 的设计语言。&lt;/p&gt;
&lt;p&gt;它是一个开源库，有数百个组件，从按钮， app bars，chips，modals 和更多。这些组件都是预先设计好的，非常实用，让你能够通过文档化的 props 和插槽与它们进行交互。预先定义的 CSS 类也可用于控制颜色、字体、网格间距、弹性框等。&lt;/p&gt;
&lt;h2 id=&quot;NuxtJS&quot;&gt;&lt;a href=&quot;#NuxtJS&quot; class=&quot;headerlink&quot; title=&quot;NuxtJS&quot;&gt;&lt;/a&gt;NuxtJS&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/7ea64fdb56960.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nuxt 基于一个强大的模块化架构。你可以从 50 多个模块中进行选择，让你的开发变得更快、更简单。对 PWA 的支持、添加谷歌分析到你的网页或生成网站地图，这些功能都无需重新发明轮子来获得。&lt;/p&gt;
&lt;p&gt;NuxtJS 目前基于 Vue 2。但是 nux3 最近已经发布，并且已经完全重写以支持Vue 3。&lt;/p&gt;
&lt;h2 id=&quot;Vuex&quot;&gt;&lt;a href=&quot;#Vuex&quot; class=&quot;headerlink&quot; title=&quot;Vuex&quot;&gt;&lt;/a&gt;Vuex&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/19e17e397fd16.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension (opens new window)，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。&lt;/p&gt;
&lt;h2 id=&quot;Vuex-Persisted-State&quot;&gt;&lt;a href=&quot;#Vuex-Persisted-State&quot; class=&quot;headerlink&quot; title=&quot;Vuex Persisted State&quot;&gt;&lt;/a&gt;Vuex Persisted State&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/8571620ef348f.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vuex 状态机制，一刷新就会重置，解决问题的方式一般都是存储起来(session/local Storage)，&lt;code&gt;vuex-persistedstate&lt;/code&gt; 插件帮我们集成了这些功能。&lt;/p&gt;
&lt;h2 id=&quot;VuePress&quot;&gt;&lt;a href=&quot;#VuePress&quot; class=&quot;headerlink&quot; title=&quot;VuePress&quot;&gt;&lt;/a&gt;VuePress&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/6e53451b2491a.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;VuePress 是一款使用 Vue 驱动的静态网站生成器，是 Vue 的作者 Evan You 为了方便文档的编写而开发的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认主题与 Vue 官方文档一致&lt;/li&gt;
&lt;li&gt;简洁，少配置，高性能&lt;/li&gt;
&lt;li&gt;Markdown 专为技术文档提供拓展&lt;/li&gt;
&lt;li&gt;自带 PWA&lt;/li&gt;
&lt;li&gt;自定义主题，可定制程度完全由自己决定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Vue-Meta&quot;&gt;&lt;a href=&quot;#Vue-Meta&quot; class=&quot;headerlink&quot; title=&quot;Vue Meta&quot;&gt;&lt;/a&gt;Vue Meta&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/492fd5106b3ca.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;文档地址：&lt;a href=&quot;https://vue-meta.nuxtjs.org/&quot;&gt;https://vue-meta.nuxtjs.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基于 Vue 2.0 的 vue-meta 插件，主要用于管理 HMTL 头部标签，同时也支持 SSR。&lt;/p&gt;
&lt;p&gt;vue-meta 有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在组件内设置 metaInfo，便可轻松实现头部标签的管理。&lt;/li&gt;
&lt;li&gt;metaInfo 的数据都是响应的，如果数据变化，头部信息会自动更新 支持 SSR。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/a4b510cbe8788.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Vue-ChartJS&quot;&gt;&lt;a href=&quot;#Vue-ChartJS&quot; class=&quot;headerlink&quot; title=&quot;Vue ChartJS&quot;&gt;&lt;/a&gt;Vue ChartJS&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/86213e7cbb158.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/f25ad996c49cc.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接地址：&lt;a href=&quot;https://www.npmjs.com/package/vue-chartjs&quot;&gt;https://www.npmjs.com/package/vue-chartjs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;想在你的 Vue 应用程序中添加图表？可以看看 Chart.js。它是一个为设计师和开发者提供的简单而灵活的 JS 图表库。它有许多漂亮的图表类型可供选择。&lt;/p&gt;
&lt;h2 id=&quot;Vue-Grid-Layout&quot;&gt;&lt;a href=&quot;#Vue-Grid-Layout&quot; class=&quot;headerlink&quot; title=&quot;Vue Grid Layout&quot;&gt;&lt;/a&gt;Vue Grid Layout&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/deeee9e405e55.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;文档地址：&lt;a href=&quot;https://jbaysolutions.github.io/vue-grid-layout/&quot;&gt;https://jbaysolutions.github.io/vue-grid-layout/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vue Grid Layout 是一个类似于 Gridster 的栅格布局系统, 适用于 Vue.js，灵感来源于 React Grid Layout。&lt;/p&gt;
&lt;p&gt;特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可拖拽&lt;/li&gt;
&lt;li&gt;可调整大小&lt;/li&gt;
&lt;li&gt;静态部件（不可拖拽、调整大小）&lt;/li&gt;
&lt;li&gt;拖拽和调整大小时进行边界检查&lt;/li&gt;
&lt;li&gt;增减部件时避免重建栅格&lt;/li&gt;
&lt;li&gt;可序列化和还原的布局&lt;/li&gt;
&lt;li&gt;自动化 RTL 支持&lt;/li&gt;
&lt;li&gt;响应式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Vue-Draggable&quot;&gt;&lt;a href=&quot;#Vue-Draggable&quot; class=&quot;headerlink&quot; title=&quot;Vue Draggable&quot;&gt;&lt;/a&gt;Vue Draggable&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/f13e4b1c89e70.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vue.Draggable 是一款基于 Sortable.js 实现的 vue 拖拽插件。支持移动设备、拖拽和选择文本、智能滚动，可以在不同列表间拖拽、不依赖 jQuery 为基础、vue2 过渡动画兼容、支持撤销操作，总之是一款非常优秀的 vue 拖拽组件。&lt;/p&gt;
&lt;p&gt;主要特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持触控设备&lt;/li&gt;
&lt;li&gt;支持拖动手柄和可选文本&lt;/li&gt;
&lt;li&gt;智能自动滚动&lt;/li&gt;
&lt;li&gt;支持不同列表之间的拖放&lt;/li&gt;
&lt;li&gt;没有 jQuery 依赖&lt;/li&gt;
&lt;li&gt;保持同步 HTML 和查看模型列表&lt;/li&gt;
&lt;li&gt;兼容 Vue.js 2.0 转换组&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Vee-Validate&quot;&gt;&lt;a href=&quot;#Vee-Validate&quot; class=&quot;headerlink&quot; title=&quot;Vee-Validate&quot;&gt;&lt;/a&gt;Vee-Validate&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/d553969304cba.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://www.npmjs.com/package/vee-validate&quot;&gt;https://www.npmjs.com/package/vee-validate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为了确保通过表单从用户那里收集正确类型的数据，有必要验证表单，以确保用户输入符合预期的模式。VeeValidate 是一个可以将这一层功能添加到任何表单组件的包。&lt;/p&gt;
&lt;p&gt;主要特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🍞简单：熟悉且易于设置的声明式验证&lt;/li&gt;
&lt;li&gt;🧘‍♀️灵活：同步、异步、字段级或表单级验证&lt;/li&gt;
&lt;li&gt;⚡️快速：使用直观的 API 和较小的占用空间更快地构建更快的表单&lt;/li&gt;
&lt;li&gt;🏏Minimal：只处理复杂的表单问题，让您完全控制其他一切&lt;/li&gt;
&lt;li&gt;😎UI Agnostic：适用于原生 HTML 元素或您最喜欢的 UI 库组件&lt;/li&gt;
&lt;li&gt;🦾渐进式：无论您使用 Vue.js 作为渐进式增强还是在复杂的设置中都可以使用&lt;/li&gt;
&lt;li&gt;✅内置规则：包含 25 条以上规则的配套库，可满足大多数 Web 应用程序的大部分需求&lt;/li&gt;
&lt;li&gt;🌐i18n：来自世界各地的开发人员贡献的内置规则的 45 多个语言环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Marina Mosti 在 Vue Mastery 的 &lt;a href=&quot;https://www.vuemastery.com/courses/validating-vue3-forms/why-vee-validate&quot;&gt;Validating Vue 3 Forms&lt;/a&gt; 课程中介绍了如何使用这个库。&lt;/p&gt;
&lt;h2 id=&quot;Vue-Toastification&quot;&gt;&lt;a href=&quot;#Vue-Toastification&quot; class=&quot;headerlink&quot; title=&quot;Vue Toastification&quot;&gt;&lt;/a&gt;Vue Toastification&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/7ffb3b071e226.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://vue-toastification.maronato.dev/&quot;&gt;https://vue-toastification.maronato.dev/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vue Toastification 是一个轻量、易用且美观的提示条通知组件，提供了大量的选项来支持大部分自定义选择。&lt;/p&gt;
&lt;h2 id=&quot;Vue-Tour&quot;&gt;&lt;a href=&quot;#Vue-Tour&quot; class=&quot;headerlink&quot; title=&quot;Vue Tour&quot;&gt;&lt;/a&gt;Vue Tour&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/010ab8e3352fb.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://github.com/pulsardev/vue-tour&quot;&gt;https://github.com/pulsardev/vue-tour&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vue Tour 是轻巧、简单且可自定义的新手指引插件，可与 Vue.js 一起使用。它提供了一种快速简便的方法来指导用户使用您的应用程序。&lt;/p&gt;
&lt;h2 id=&quot;Swiper-js&quot;&gt;&lt;a href=&quot;#Swiper-js&quot; class=&quot;headerlink&quot; title=&quot;Swiper.js&quot;&gt;&lt;/a&gt;Swiper.js&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/d98f3d7c1eceb.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://swiperjs.com/vue&quot;&gt;https://swiperjs.com/vue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swiper.js 是一个预制的旋转木马组件，可以用来在各种图片之间滑动。Swiper.js 原生支持 Vue 3，提供了一个可以插入到你的项目的组件。对于 Vue 2，你可以使用其他包，如 vue-awesome-swiper。&lt;/p&gt;
&lt;h2 id=&quot;vue2-leaflet&quot;&gt;&lt;a href=&quot;#vue2-leaflet&quot; class=&quot;headerlink&quot; title=&quot;vue2-leaflet&quot;&gt;&lt;/a&gt;vue2-leaflet&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/6092bc3f900d9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://leafletjs.com/&quot;&gt;https://leafletjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LeafletJS 是一个流行的开源库，用于移动友好的交互式地图。它非常轻巧，只有 39KB，并且具有大多数开发人员需要的所有映射功能。这个 Vue 2 包可以轻松集成到您现有的应用程序中，并可以访问 Leaflet 的所有功能。&lt;/p&gt;
&lt;p&gt;主要特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常用交互功能：  移动端缩放、 拖动、 平移、 拖动标记、 捏拉缩放&lt;/li&gt;
&lt;li&gt;自定义切片图层&lt;/li&gt;
&lt;li&gt;手机硬件加速&lt;/li&gt;
&lt;li&gt;标记， 弹出窗口&lt;/li&gt;
&lt;li&gt;图像叠加&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;TroisJS&quot;&gt;&lt;a href=&quot;#TroisJS&quot; class=&quot;headerlink&quot; title=&quot;TroisJS&quot;&gt;&lt;/a&gt;TroisJS&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/280ea461f1134.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://troisjs.github.io/&quot;&gt;https://troisjs.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Trois（法语为Three）是一个 Vue 3 库，用于 &lt;code&gt;Three.JS&lt;/code&gt;，这是一个流行的 WebGL 库。&lt;/p&gt;
&lt;p&gt;Three.JS 对桌面和移动端都有良好的支持。这个库允许你使用 VueJS 组件为你的网站轻松创建 3D 内容。你可以使用这个库在你的网站上添加一个 3D 渲染器，并在你的 VueJs 文件的&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;部分中使用预先建立的组件指定场景细节，如材料、照明、网格、阴影等。&lt;/p&gt;
&lt;p&gt;Trois.Js 是 Three.js 上面的一个包装器，因此不比原始库慢。它还通过自动处置几何体、材料、纹理、渲染器等来简化对象的处置，这在原始库中是不存在的。&lt;/p&gt;
&lt;h2 id=&quot;vue-scrollama&quot;&gt;&lt;a href=&quot;#vue-scrollama&quot; class=&quot;headerlink&quot; title=&quot;vue-scrollama&quot;&gt;&lt;/a&gt;vue-scrollama&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/1013a89337004.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://www.npmjs.com/package/vue-scrollama&quot;&gt;https://www.npmjs.com/package/vue-scrollama&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个 Vue 组件，可轻松设置滚动驱动的交互（又称滚动讲演）。在引擎盖下使用  Scrollama。&lt;/p&gt;
&lt;h2 id=&quot;Vue-QR-Code-Reader&quot;&gt;&lt;a href=&quot;#Vue-QR-Code-Reader&quot; class=&quot;headerlink&quot; title=&quot;Vue QR Code Reader&quot;&gt;&lt;/a&gt;Vue QR Code Reader&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/26/a591c388fbdd1.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;地址：&lt;a href=&quot;https://gruhn.github.io/vue-qrcode-reader/demos/CustomTracking.html&quot;&gt;https://gruhn.github.io/vue-qrcode-reader/demos/CustomTracking.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;QR 码(QR code)在当今世界非常普遍。Vue 二维码阅读器是一个即插即用的包，允许你添加二维码扫描功能到你的应用程序。&lt;/p&gt;
&lt;p&gt;主要特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;流式传输摄像头 并连续扫描二维码&lt;/li&gt;
&lt;li&gt;拖放要解码的二维码图像&lt;/li&gt;
&lt;li&gt;批量扫描 QR 码图像&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;note purple no-icon flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://www.vuemastery.com/blog/most-popular-vuejs-plugins-and-packages/&quot;&gt;Most popular Vue.js plugins &amp;amp;</summary>
        
      
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="Vue plugins" scheme="https://fe32.top/tags/Vue-plugins/"/>
    
  </entry>
  
  <entry>
    <title>13个用于网站设计和开发的 React 图库</title>
    <link href="https://fe32.top/articles/rea323su/"/>
    <id>https://fe32.top/articles/rea323su/</id>
    <published>2022-03-23T10:54:32.000Z</published>
    <updated>2023-06-27T14:39:00.737Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在本文中，我们将介绍 13 个用于网站设计和开发的 React 图片库示例。&lt;/p&gt;
&lt;h2 id=&quot;React-amp-CSS-Grid-Image-Gallery&quot;&gt;&lt;a href=&quot;#React-amp-CSS-Grid-Image-Gallery&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; CSS Grid Image Gallery&quot;&gt;&lt;/a&gt;React &amp;amp; CSS Grid Image Gallery&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/11b754a8fe3c3.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_1&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/tvweinstock/embed/preview/wegZEW?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=wegZEW&amp;amp;preview=true&amp;amp;user=tvweinstock&amp;amp;name=cp_embed_1&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_wegZEW&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/tvweinstock/pen/wegZEW&quot;&gt;https://codepen.io/tvweinstock/pen/wegZEW&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Masonry-Grid&quot;&gt;&lt;a href=&quot;#React-Masonry-Grid&quot; class=&quot;headerlink&quot; title=&quot;React Masonry Grid&quot;&gt;&lt;/a&gt;React Masonry Grid&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/b2ba6ea0e7535.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_2&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/golle404/embed/preview/wWoXwz?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=wWoXwz&amp;amp;preview=true&amp;amp;user=golle404&amp;amp;name=cp_embed_2&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_wWoXwz&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/golle404/pen/wWoXwz&quot;&gt;https://codepen.io/golle404/pen/wWoXwz&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Photo-Gallery&quot;&gt;&lt;a href=&quot;#React-Photo-Gallery&quot; class=&quot;headerlink&quot; title=&quot;React Photo Gallery&quot;&gt;&lt;/a&gt;React Photo Gallery&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/9fb6dcc43bafb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_3&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/alexboffey/embed/preview/YWdzYj?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=YWdzYj&amp;amp;preview=true&amp;amp;user=alexboffey&amp;amp;name=cp_embed_3&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_YWdzYj&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/alexboffey/pen/YWdzYj&quot;&gt;https://codepen.io/alexboffey/pen/YWdzYj&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Image-Viewer&quot;&gt;&lt;a href=&quot;#React-Image-Viewer&quot; class=&quot;headerlink&quot; title=&quot;React-Image-Viewer&quot;&gt;&lt;/a&gt;React-Image-Viewer&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/5e593cd38eda4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_4&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/mawa_hujihara/embed/preview/ZezdeJ?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=ZezdeJ&amp;amp;preview=true&amp;amp;user=mawa_hujihara&amp;amp;name=cp_embed_4&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_ZezdeJ&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/mawa_hujihara/pen/ZezdeJ&quot;&gt;https://codepen.io/mawa_hujihara/pen/ZezdeJ&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Gallery-Lightbox&quot;&gt;&lt;a href=&quot;#React-Gallery-Lightbox&quot; class=&quot;headerlink&quot; title=&quot;React Gallery Lightbox&quot;&gt;&lt;/a&gt;React Gallery Lightbox&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/19359e6310f45.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_5&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/ivanodintsov/embed/preview/yqvZzO?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=yqvZzO&amp;amp;preview=true&amp;amp;user=ivanodintsov&amp;amp;name=cp_embed_5&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_yqvZzO&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/ivanodintsov/pen/yqvZzO&quot;&gt;https://codepen.io/ivanodintsov/pen/yqvZzO&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Image-Gallery-Example&quot;&gt;&lt;a href=&quot;#React-Image-Gallery-Example&quot; class=&quot;headerlink&quot; title=&quot;React-Image Gallery Example&quot;&gt;&lt;/a&gt;React-Image Gallery Example&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/4159cbcaf216b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_6&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/monochromer/embed/preview/VWyjpq?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=VWyjpq&amp;amp;preview=true&amp;amp;user=monochromer&amp;amp;name=cp_embed_6&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_VWyjpq&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/monochromer/pen/VWyjpq&quot;&gt;https://codepen.io/monochromer/pen/VWyjpq&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Image-Gallery-Grid&quot;&gt;&lt;a href=&quot;#React-Image-Gallery-Grid&quot; class=&quot;headerlink&quot; title=&quot;React Image Gallery Grid&quot;&gt;&lt;/a&gt;React Image Gallery Grid&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/1d40ce5883023.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_7&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/tk89/embed/preview/QPKoVy?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=QPKoVy&amp;amp;preview=true&amp;amp;user=tk89&amp;amp;name=cp_embed_7&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_QPKoVy&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/tk89/pen/QPKoVy&quot;&gt;https://codepen.io/tk89/pen/QPKoVy&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Gallery&quot;&gt;&lt;a href=&quot;#React-Gallery&quot; class=&quot;headerlink&quot; title=&quot;React Gallery&quot;&gt;&lt;/a&gt;React Gallery&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/30616c0da4c6c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_8&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/alexboffey/embed/preview/ammVER?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=ammVER&amp;amp;preview=true&amp;amp;user=alexboffey&amp;amp;name=cp_embed_8&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_ammVER&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/alexboffey/pen/ammVER&quot;&gt;https://codepen.io/alexboffey/pen/ammVER&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Gallery-Component&quot;&gt;&lt;a href=&quot;#React-Gallery-Component&quot; class=&quot;headerlink&quot; title=&quot;React Gallery Component&quot;&gt;&lt;/a&gt;React Gallery Component&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/3250b2a26efae.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_9&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/keyframers/embed/preview/oNYmomo?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=oNYmomo&amp;amp;preview=true&amp;amp;user=keyframers&amp;amp;name=cp_embed_9&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_oNYmomo&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/team/keyframers/pen/oNYmomo&quot;&gt;https://codepen.io/team/keyframers/pen/oNYmomo&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Photo-Gallery-With-Lightbox&quot;&gt;&lt;a href=&quot;#React-Photo-Gallery-With-Lightbox&quot; class=&quot;headerlink&quot; title=&quot;React-Photo-Gallery With Lightbox&quot;&gt;&lt;/a&gt;React-Photo-Gallery With Lightbox&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/b257c91639852.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;p&gt;You can see the results below.&lt;/p&gt;
&lt;iframe allowfullscreen=&quot;true&quot; allowpaymentrequest=&quot;true&quot; allowtransparency=&quot;true&quot; class=&quot;cp_embed_iframe &quot; frameborder=&quot;0&quot; height=&quot;300&quot; width=&quot;100%&quot; name=&quot;cp_embed_10&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/neptunian/embed/preview/Oxraod?height=300&amp;amp;theme-id=dark&amp;amp;default-tab=js%2Cresult&amp;amp;slug-hash=Oxraod&amp;amp;preview=true&amp;amp;user=neptunian&amp;amp;name=cp_embed_10&quot; style=&quot;width: 100%; overflow:hidden; display:block;&quot; title=&quot;CodePen Embed&quot; loading=&quot;lazy&quot; id=&quot;cp_embed_Oxraod&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://codepen.io/neptunian/pen/Oxraod&quot;&gt;https://codepen.io/neptunian/pen/Oxraod&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;react-grid-gallery&quot;&gt;&lt;a href=&quot;#react-grid-gallery&quot; class=&quot;headerlink&quot; title=&quot;react-grid-gallery&quot;&gt;&lt;/a&gt;react-grid-gallery&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/ee6334a47f195.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://benhowell.github.io/react-grid-gallery/&quot;&gt;https://benhowell.github.io/react-grid-gallery/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Photo-Gallery-1&quot;&gt;&lt;a href=&quot;#React-Photo-Gallery-1&quot; class=&quot;headerlink&quot; title=&quot;React Photo Gallery&quot;&gt;&lt;/a&gt;React Photo Gallery&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/f558196bfc2f4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://neptunian.github.io/react-photo-gallery/&quot;&gt;https://neptunian.github.io/react-photo-gallery/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;React-Image-Gallery&quot;&gt;&lt;a href=&quot;#React-Image-Gallery&quot; class=&quot;headerlink&quot; title=&quot;React Image Gallery&quot;&gt;&lt;/a&gt;React Image Gallery&lt;/h2&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/98022167cc702.png&quot;&gt;&lt;/div&gt;&lt;/div&gt; &lt;br&gt;

&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;链接地址：&lt;a href=&quot;https://github.com/xiaolin/react-image-gallery&quot;&gt;https://github.com/xiaolin/react-image-gallery&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://us.niemvuilaptrinh.com/article/13-examples-of-react-photo-gallery-for-website&quot;&gt;13个用于网站的React照片库示例&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;writing-mode&quot;&gt;&lt;a href=&quot;#writing-mode&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="React" scheme="https://fe32.top/categories/React/"/>
    
    
    <category term="React" scheme="https://fe32.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>熟悉事件循环？那谈谈为什么会分为宏任务和微任务</title>
    <link href="https://fe32.top/articles/js0320ub/"/>
    <id>https://fe32.top/articles/js0320ub/</id>
    <published>2022-03-20T14:26:49.000Z</published>
    <updated>2023-06-27T14:39:00.613Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;什么是事件循环&quot;&gt;&lt;a href=&quot;#什么是事件循环&quot; class=&quot;headerlink&quot; title=&quot;什么是事件循环&quot;&gt;&lt;/a&gt;什么是事件循环&lt;/h1&gt;&lt;p&gt;在了解事件循环前，需要一些有关 JS 特性的前置知识。&lt;/p&gt;
&lt;p&gt;JS 引擎是单线程的，直白来说就是一个时间点下 JS 引擎只能去做一件事情，而 Java 这种多线程语言，可以同时做几件事情。&lt;/p&gt;
&lt;p&gt;JS 做的任务分为同步和异步两种，所谓 “异步”，简单说就是一个任务不是连续完成的，先执行第一段，等做好了准备，再回过头执行第二段，第二段也被叫做回调；同步则是连贯完成的。&lt;/p&gt;
&lt;p&gt;像读取文件、网络请求这种任务属于异步任务：花费时间很长，但中间的操作不需要 JS 引擎自己完成，它只用等别人准备好了，把数据给他，他再继续执行回调部分。&lt;/p&gt;
&lt;p&gt;如果没有特殊处理，JS 引擎在执行异步任务时，应该是存在等待的，不去做任何其他事情。用一个图来展示这个过程，可以看出，在执行异步任务时有大量的空闲时间被浪费。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/20/2864a552bef48.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实际上这是大多数多线程语言的处理办法。但对于 JS 这种单线程语言来说，这种长时间的空闲等待是不可接受的：遇到其他紧急任务，Java 可以再开一个线程去处理，JS 却只能忙等。&lt;/p&gt;
&lt;p&gt;所以采取了以下的“异步任务回调通知”模式：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/20/df1705e4029ee.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在等待异步任务准备的同时，JS 引擎去执行其他同步任务，等到异步任务准备好了，再去执行回调。这种模式的优势显而易见，完成相同的任务，花费的时间大大减少，这种方式也被叫做非阻塞式。&lt;/p&gt;
&lt;p&gt;而实现这个“通知”的，正是事件循环，把异步任务的回调部分交给事件循环，等时机合适交还给 JS 线程执行。事件循环并不是 JavaScript 首创的，它是计算机的一种运行机制。&lt;/p&gt;
&lt;p&gt;事件循环是由一个队列组成的，异步任务的回调遵循先进先出，在 JS 引擎空闲时会一轮一轮地被取出，所以被叫做循环。&lt;/p&gt;
&lt;p&gt;根据队列中任务的不同，分为宏任务和微任务。&lt;/p&gt;
&lt;h1 id=&quot;宏任务和微任务&quot;&gt;&lt;a href=&quot;#宏任务和微任务&quot; class=&quot;headerlink&quot; title=&quot;宏任务和微任务&quot;&gt;&lt;/a&gt;宏任务和微任务&lt;/h1&gt;&lt;p&gt;事件循环由宏任务和在执行宏任务期间产生的所有微任务组成。完成当下的宏任务后，会立刻执行所有在此期间入队的微任务。&lt;/p&gt;
&lt;p&gt;这种设计是为了给紧急任务一个插队的机会，否则新入队的任务永远被放在队尾。区分了微任务和宏任务后，本轮循环中的微任务实际上就是在插队，这样微任务中所做的状态修改，在下一轮事件循环中也能得到同步。&lt;/p&gt;
&lt;p&gt;常见的宏任务有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;script（整体代码）&lt;/li&gt;
&lt;li&gt;setTimout&lt;/li&gt;
&lt;li&gt;setInterval&lt;/li&gt;
&lt;li&gt;setImmediate(node 独有)&lt;/li&gt;
&lt;li&gt;requestAnimationFrame(浏览器独有)&lt;/li&gt;
&lt;li&gt;IO&lt;/li&gt;
&lt;li&gt;UI render（浏览器独有）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见的微任务有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;process.nextTick(node 独有)&lt;/li&gt;
&lt;li&gt;Promise.then()&lt;/li&gt;
&lt;li&gt;Object.observe&lt;/li&gt;
&lt;li&gt;MutationObserver&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;宏任务-setTimeout-的误区&quot;&gt;&lt;a href=&quot;#宏任务-setTimeout-的误区&quot; class=&quot;headerlink&quot; title=&quot;宏任务 setTimeout 的误区&quot;&gt;&lt;/a&gt;宏任务 setTimeout 的误区&lt;/h2&gt;&lt;p&gt;setTimeout 的回调不一定在指定时间后能执行。而是在指定时间后，将回调函数放入事件循环的队列中。&lt;/p&gt;
&lt;p&gt;如果时间到了，JS 引擎还在执行同步任务，这个回调函数需要等待；如果当前事件循环的队列里还有其他回调，需要等其他回调执行完。&lt;/p&gt;
&lt;p&gt;另外，setTimeout 0ms 也不是立刻执行，它有一个默认最小时间，为 4ms。所以下面这段代码的输出结果不一定：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;setTimeout&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setImmediate(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;setImmediate&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因为取出第一个宏任务之前在执行全局 Script，如果这个时间大于 4ms，这时 setTimeout 的回调函数已经放入队列，就先执行 setTimeout；如果准备时间小于 4ms，就会先执行 setImmediate。&lt;/p&gt;
&lt;h1 id=&quot;浏览器的事件循环&quot;&gt;&lt;a href=&quot;#浏览器的事件循环&quot; class=&quot;headerlink&quot; title=&quot;浏览器的事件循环&quot;&gt;&lt;/a&gt;浏览器的事件循环&lt;/h1&gt;&lt;p&gt;浏览器的事件循环由一个宏任务队列+多个微任务队列组成。&lt;/p&gt;
&lt;p&gt;首先，执行第一个宏任务：全局 Script 脚本。产生的的宏任务和微任务进入各自的队列中。执行完 Script 后，把当前的微任务队列清空。完成一次事件循环。&lt;/p&gt;
&lt;p&gt;接着再取出一个宏任务，同样把在此期间产生的回调入队。再把当前的微任务队列清空。以此往复。&lt;/p&gt;
&lt;p&gt;宏任务队列只有一个，而每一个宏任务都有一个自己的微任务队列，每轮循环都是由一个宏任务+多个微任务组成。&lt;/p&gt;
&lt;p&gt;下面的 Demo 展示了微任务的插队过程：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;()=&amp;gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第一个回调函数：微任务1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;()=&amp;gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第三个回调函数：宏任务2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  },&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;()=&amp;gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第二个回调函数：宏任务1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;()=&amp;gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第四个回调函数：微任务2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;},&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第一个回调函数：微任务1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第二个回调函数：宏任务1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第四个回调函数：微任务2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 第三个回调函数：宏任务2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印的结果不是从 1 到 4，而是先执行第四个回调函数，再执行第三个，因为它是一个微任务，比第三个回调函数有更高优先级。&lt;/p&gt;
&lt;h1 id=&quot;Node-的事件循环&quot;&gt;&lt;a href=&quot;#Node-的事件循环&quot; class=&quot;headerlink&quot; title=&quot;Node 的事件循环&quot;&gt;&lt;/a&gt;Node 的事件循环&lt;/h1&gt;&lt;p&gt;node 的事件循环比浏览器复杂很多。由 6 个宏任务队列+6 个微任务队列组成。&lt;/p&gt;
&lt;p&gt;宏任务按照优先级从高到低依次是：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/20/da782d5259b8e.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其执行规律是：在一个宏任务队列全部执行完毕后，去清空一次微任务队列，然后到下一个等级的宏任务队列，以此往复。&lt;/p&gt;
&lt;p&gt;一个宏任务队列搭配一个微任务队列。六个等级的宏任务全部执行完成，才是一轮循环。&lt;/p&gt;
&lt;p&gt;其中需要关注的是：Timers、Poll、Check 阶段，因为我们所写的代码大多属于这三个阶段。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Timers：定时器 setTimeout/setInterval；&lt;/li&gt;
&lt;li&gt;Poll ：获取新的 I/O 事件, 例如操作读取文件等；&lt;/li&gt;
&lt;li&gt;Check：setImmediate 回调函数在这里执行；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;除此之外，node 端微任务也有优先级先后：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;process.nextTick;&lt;/li&gt;
&lt;li&gt;promise.then 等;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;清空微任务队列时，会先执行 process.nextTick，然后才是微任务队列中的其他。下面这段代码可以佐证浏览器和 node 的差异：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Script开始&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第一个回调函数，宏任务1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第四个回调函数，微任务2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第二个回调函数，宏任务2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第五个回调函数，微任务3&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;第三个回调函数，微任务1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Script结束&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node端：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Script开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Script结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第三个回调函数，微任务&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第一个回调函数，宏任务&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第二个回调函数，宏任务&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第四个回调函数，微任务&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第五个回调函数，微任务&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;浏览器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Script开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Script结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第三个回调函数，微任务&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第一个回调函数，宏任务&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第四个回调函数，微任务&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第二个回调函数，宏任务&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第五个回调函数，微任务&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以看出，在 node 端要等当前等级的所有宏任务完成，才能轮到微任务：&lt;strong&gt;第四个回调函数&lt;/strong&gt; ，&lt;strong&gt;微任务2&lt;/strong&gt; 在两个 setTimeout 完成后才打印。&lt;/p&gt;
&lt;p&gt;因为浏览器执行时是一个宏任务+一个微任务队列，而 node 是一整个宏任务队列 + 一个微任务队列。&lt;/p&gt;
&lt;h2 id=&quot;node11-x-前后版本差异&quot;&gt;&lt;a href=&quot;#node11-x-前后版本差异&quot; class=&quot;headerlink&quot; title=&quot;node11.x 前后版本差异&quot;&gt;&lt;/a&gt;node11.x 前后版本差异&lt;/h2&gt;&lt;p&gt;node11.x 之前，其事件循环的规则就如上文所述：先取出完一整个宏任务队列中全部任务，然后执行一个微任务队列。&lt;/p&gt;
&lt;p&gt;但在 11.x 之后，node 端的事件循环变得和浏览器类似：先执行一个宏任务，然后是一个微任务队列。但依然保留了宏任务队列和微任务队列的优先级。可以用下面的 Demo 佐证：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Script开始&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;宏任务1（setTimeout)&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;微任务promise2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setImmediate(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;宏任务2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;宏任务3（setTimeout)&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Script结束&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;微任务promise1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process.nextTick(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;微任务nextTick&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 node11.x 之前运行：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Script开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Script结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;微任务nextTick&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;微任务promise1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;宏任务&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;宏任务&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;微任务promise2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;宏任务&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;(setImmediate)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在 node11.x 之后运行：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Script开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Script结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;微任务nextTick&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;微任务promise1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;宏任务&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;微任务promise2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;宏任务&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;宏任务&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;(setImmediate)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以发现，在不同的 node 环境下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;微任务队列中 process.nextTick 都有更高优先级，即使它后进入微任务队列，也会先打印微任务nextTick再微任务promise1;&lt;/li&gt;
&lt;li&gt;宏任务 setTimeout 比 setImmediate 优先级更高，宏任务2(setImmediate)是三个宏任务中最后打印的；&lt;/li&gt;
&lt;li&gt;在 node11.x 之前，微任务队列要等当前优先级的所有宏任务先执行完，在两个 setTimeout 之后才打印微任务promise2；在 node11.x 之后，微任务队列只用等当前这一个宏任务先执行完。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h1&gt;&lt;p&gt;事件循环中的任务被分为宏任务和微任务，是为了给高优先级任务一个插队的机会：微任务比宏任务有更高优先级。&lt;/p&gt;
&lt;p&gt;node 端的事件循环比浏览器更复杂，它的宏任务分为六个优先级，微任务分为两个优先级。node 端的执行规律是一个宏任务队列搭配一个微任务队列，而浏览器是一个单独的宏任务搭配一个微任务队列。但是在 node11 之后，node 和浏览器的规律趋同。&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="事件循环机制" scheme="https://fe32.top/tags/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/"/>
    
    <category term="宏/微任务" scheme="https://fe32.top/tags/%E5%AE%8F-%E5%BE%AE%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>再见收费的Navicat，操作所有数据库就靠它了</title>
    <link href="https://fe32.top/articles/db0307ver/"/>
    <id>https://fe32.top/articles/db0307ver/</id>
    <published>2022-03-07T12:39:22.000Z</published>
    <updated>2023-06-27T14:39:00.682Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;作为一名开发者，免不了要和数据库打交道，于是我们就需要一款顺手的数据库管理工具。&lt;/p&gt;
&lt;p&gt;今天跟大家推荐一款免费的，功能和 Navicat 有一拼的数据库管理工具 DBeaver，试用完后体验真心不错，于是就来给大家安利一波。&lt;/p&gt;
&lt;h2 id=&quot;关于-DBeaver&quot;&gt;&lt;a href=&quot;#关于-DBeaver&quot; class=&quot;headerlink&quot; title=&quot;关于 DBeaver&quot;&gt;&lt;/a&gt;关于 DBeaver&lt;/h2&gt;&lt;p&gt;DBeaver 是一个跨平台的数据库管理工具，支持 Windows、Linux 和 macOS。它有两个版本，企业版和社区版，对于个人开发者来说，社区版的功能已经足够强大。&lt;/p&gt;
&lt;p&gt;DBeaver 是由 Java 编写的，默认使用 JDK 11 进行编译。社区版基于 Apache-2.0 License 在 GitHub 上开源，目前已获得 24k+ 的星标。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dbeaver/dbeaver&quot;&gt;https://github.com/dbeaver/dbeaver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/be2809a5394b3.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;DBeaver 支持几乎所有主流的数据库，包括关系型数据库和非关系数据库。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/310901a6834b7.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-DBeaver&quot;&gt;&lt;a href=&quot;#安装-DBeaver&quot; class=&quot;headerlink&quot; title=&quot;安装 DBeaver&quot;&gt;&lt;/a&gt;安装 DBeaver&lt;/h2&gt;&lt;p&gt;可以通过 DBeaver 官方下载安装包，也可以通过 GitHub 下载 release 版本。&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://dbeaver.io/download/&quot;&gt;官方下载地址：https://dbeaver.io/download/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/2a0a6983e1602.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根据自己电脑的操作系统下载对应的安装包，完整安装后，第一步要做的是配置 Maven 镜像，否则在后续下载数据库驱动的时候会非常的慢。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/e36114a9cb374.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因为 DBeaver 是基于 &lt;a href=&quot;https://github.com/itwanger/toBeBetterJavaer/blob/master/docs/maven/maven.md&quot;&gt;Maven&lt;/a&gt;  构建的，数据库驱动也就是链接数据库的 JDBC 驱动是通过 Maven 仓库下载的。选择「首选项」→「Maven」，添加阿里云镜像地址：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://maven.aliyun.com/nexus/content/groups/public&quot;&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;和配置 Maven 镜像一样，如下图所示。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/34eb85c0b26ab.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置完成后，记得把阿里云镜像仓库置顶。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/ff2f54d468675.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;管理数据源&quot;&gt;&lt;a href=&quot;#管理数据源&quot; class=&quot;headerlink&quot; title=&quot;管理数据源&quot;&gt;&lt;/a&gt;管理数据源&lt;/h2&gt;&lt;p&gt;像使用 Navicat 一样，我们需要先建立连接，这里就以 MySQL 为例。点击「连接」小图标，选择数据库。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/822d5a9661036.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;点击下一步，这时候需要填写数据库连接信息。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/3ce1be99c4a4b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;点击「测试链接」，如果使用默认的 Maven 仓库时，下载驱动会非常慢，如下图所示，还容易失败「踩过的坑就不要再踩了」。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/b17a7d96b3ad9.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果你前面按照我说的配置了阿里云的 Maven 镜像，程序就不一样了，点了「测试链接」，瞬间会弹出「连接已成功」的提示框。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/e391bbd5b0037.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;链接成功后，就可以看到数据库中的表啊、视图啊、索引啊等等。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/dad8eb8a62a1b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;管理表&quot;&gt;&lt;a href=&quot;#管理表&quot; class=&quot;headerlink&quot; title=&quot;管理表&quot;&gt;&lt;/a&gt;管理表&lt;/h2&gt;&lt;p&gt;数据库连接成功后，最重要的还是操作表。&lt;/p&gt;
&lt;h3 id=&quot;查看表&quot;&gt;&lt;a href=&quot;#查看表&quot; class=&quot;headerlink&quot; title=&quot;查看表&quot;&gt;&lt;/a&gt;查看表&lt;/h3&gt;&lt;p&gt;选择一张表，双击后就可以看到表的属性了，可以查看表的列、约束（主键）、外键、索引等等信息。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/b26884c9e4242.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;点击「DDL（Data Definition Language，数据定义语言）」可以看到详细的建表语句。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/c03b4e755b99d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;点击「数据」可以查看表的数据，底部有「新增」、「修改」、「删除」等行操作按钮。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/22cbed2ca17fb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以在顶部的过滤框中填写筛选条件，然后直接查询结果。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/1ed21ab7c94bd.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果不想显示某一列的话，可以直接点击「自定义结果集」图表，将某个字段的状态设置为不可见即可。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/a198800c94a92.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;新增表&quot;&gt;&lt;a href=&quot;#新增表&quot; class=&quot;headerlink&quot; title=&quot;新增表&quot;&gt;&lt;/a&gt;新增表&lt;/h3&gt;&lt;p&gt;在左侧选择「表」，然后右键选择「新建表」即可建表id。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/fffab991896f1.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之后在右侧列的区域右键，选择「新建列」即可添加字段。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/21e349625e609.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比如说我们新建一个主键 ID，如下图所示。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/71462f0754318.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 DBeaver 中，[v] 表示真，[] 表示否。紧接着在「约束」里选择 ID 将其设置为主键。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/b1e92430b2792.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后点击保存，会弹出一个建表语句的预览框，点击「执行」即可完成表的创建。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/35400fef586a7.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;执行-SQL&quot;&gt;&lt;a href=&quot;#执行-SQL&quot; class=&quot;headerlink&quot; title=&quot;执行 SQL&quot;&gt;&lt;/a&gt;执行 SQL&lt;/h2&gt;&lt;p&gt;右键数据库表，选择右键菜单中的「SQL 编辑器」可以打开 SQL 编辑面板。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/ffd437fe81012.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后编辑 SQL 语句，点击运行的小图标就可以查询数据了。这个过程会有语法提示，非常 nice。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/9ccfb525c91c4.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;DBeaver 有一个很亮眼的操作就是，可以直接选中一条结果集，然后右键生成 SQL。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/63476632ed924.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比如说 insert 语句，这样再插入一条重复性内容的时候就非常方便了。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/a7fbbd96b841c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;外观配置&quot;&gt;&lt;a href=&quot;#外观配置&quot; class=&quot;headerlink&quot; title=&quot;外观配置&quot;&gt;&lt;/a&gt;外观配置&lt;/h2&gt;&lt;p&gt;可以在首选项里对外观进行设置，比如说把主题修改为暗黑色。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/a8253c95bab91.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后界面就变成了暗黑系。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/80e9824bc3aaa.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;还可以设置字体大小等。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/ba3cbdf5af5ae.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从整体的风格来看，DBeaver 和 Eclipse 有些类似，事实上也的确如此，DBeaver 是基于 Eclipse 平台构建的。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/07/f81150d8f9f7d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;总体来说，DBeaver是一款非常优秀的开源数据库管理工具了，功能很全面，日常的开发基本上是够用了。对比收费的 Navicat 和 DataGrip，可以说非常良心了。大家如果遇到收费版不能使用的时候，可以来体验一下社区版 DBeaver。&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="后端杂谈" scheme="https://fe32.top/categories/%E5%90%8E%E7%AB%AF%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="JAVA" scheme="https://fe32.top/tags/JAVA/"/>
    
    <category term="MYSQL" scheme="https://fe32.top/tags/MYSQL/"/>
    
    <category term="数据库" scheme="https://fe32.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="DataBase" scheme="https://fe32.top/tags/DataBase/"/>
    
  </entry>
  
  <entry>
    <title>C#、TypeScript之父Anders Hejlsberg：“会用Excel就是程序员”</title>
    <link href="https://fe32.top/articles/in168cz8/"/>
    <id>https://fe32.top/articles/in168cz8/</id>
    <published>2022-03-03T12:21:22.000Z</published>
    <updated>2023-06-27T14:39:00.737Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/8f606c7d2caa6.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;br&gt;

&lt;p&gt;作为Turbo Pascal、Delphi、C#和TypeScript等编程语言的创造者，Anders Hejlsberg是世界上最重要的计算机程序员之一。在构建微软.NET等开发环境方面极具影响力，Hejlsberg影响了数以百万计的软件开发人员。近日，Hejlsberg与TNS新闻编辑Darryl K.Taft进行了一场线上对话，围绕微软低代码/无代码、Web3等话题，分享了他对许多与软件开发相关的事情的看法。&lt;/p&gt;
&lt;h2 id=&quot;Excel是一种低代码-无代码工具&quot;&gt;&lt;a href=&quot;#Excel是一种低代码-无代码工具&quot; class=&quot;headerlink&quot; title=&quot;Excel是一种低代码/无代码工具&quot;&gt;&lt;/a&gt;Excel是一种低代码/无代码工具&lt;/h2&gt;&lt;p&gt;问：您对于低代码，无代码有什么看法？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anders Hejlsberg&lt;/strong&gt;：我认为这个领域的潜力巨大。我们常会忽略，其实我们已经拥有了世界上最好的编程语言之一，或许这取决于你如何定义Excel中编程语言。可以说Excel是一种低代码/无代码的程序编写方式，人们运行程序，而他们使用的电子表格就是程序。你可以做一些事情，输入一些东西，然后运行程序，程序会在电子表格的底层运行，并且给出结果。&lt;/p&gt;
&lt;p&gt;所以我认为挑战其实一直在于这些工具。当达到低代码环境的极限时，你需要找到设置合适的逃生舱口的方法，才不会陷入困境。而且这个逃生舱口，可以转移到一个更完整或完整的编程环境，这意味着有意义的可扩展性模型是必须的。&lt;/p&gt;
&lt;p&gt;因此，我们需要思考的事情还有很多，但这些事情往往不是最重要的，因为人们往往会转而关注绘制方框和线条，以及这些示例的演示效果。但我常常很好奇，这些工具是否能适应现实世界？很多都不能，但有些可以。这是有趣的地方。&lt;/p&gt;
&lt;p&gt;问：我的意思是，整体的主旨是努力让更多人进入开发的世界。其中一部分人想要走的更远，成为专业人士，或者至少更加熟练。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anders Hejlsberg&lt;/strong&gt;：是的。如果你去问所有Excel用户，他们都不会自称程序员。但是，从某种意义上来说，他们是。&lt;/p&gt;
&lt;p&gt;问：没错，我比较喜欢把这比作 “&lt;strong&gt;Blue Apron&lt;/strong&gt;” 和 “&lt;strong&gt;HelloFresh&lt;/strong&gt;” 这样的套餐服务——它们会让你开始学习烹饪，并且自己动手，做得更好。你认为在软件开发中下一个要克服的挑战是什么？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anders Hejlsberg&lt;/strong&gt;：在我们编码和机器学习如何帮助我们之间，仍然有非常大的差距。因为人类大脑以及神经网络的工作方式，从来没有真正关于0和1以及绝对正确的答案，而都是统计和模糊逻辑。然而，所有的编程语言都牢固地扎根于逻辑和可证明性等等。这两种世界观之间存在着巨大的差距。看看我们最终如何弥合这一差距的（如果说我们最终做到了的话）。&lt;/p&gt;
&lt;h2 id=&quot;软件开发中的安全性&quot;&gt;&lt;a href=&quot;#软件开发中的安全性&quot; class=&quot;headerlink&quot; title=&quot;软件开发中的安全性&quot;&gt;&lt;/a&gt;软件开发中的安全性&lt;/h2&gt;&lt;p&gt;问：下面我们来谈谈安全问题。在软件开发中，安全性和整个shift left的作用有多重要？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anders Hejlsberg&lt;/strong&gt;：这取决于你在堆栈中的位置。对于编程语言来说，安全性非常重要，起码这对我的工作影响很大，甚至可以说类型检查器是一种安全形式。这是软件中可利用的漏洞，所以从这个意义上来说，编程语言间接地考虑了安全性。&lt;/p&gt;
&lt;p&gt;创造出可以分析代码并且指出可能存在安全漏洞的工具，是我们看待安全性的另一种方式。但很显然，这是个现实问题。世界各地也有人每天上班，他们的工作就是黑入西方国家的公司，从而获得薪水。这细思极恐。有很多人靠滥用科技谋生。虽然这一点令人难过，但这就是现实。&lt;/p&gt;
&lt;h2 id=&quot;Web3&quot;&gt;&lt;a href=&quot;#Web3&quot; class=&quot;headerlink&quot; title=&quot;Web3&quot;&gt;&lt;/a&gt;Web3&lt;/h2&gt;&lt;p&gt;问：您对Web3有什么看法？您认为是否需要新的工具进行Web3的开发呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anders Hejlsberg&lt;/strong&gt;：首先，我们要对Web3的概念达成共识，因为人们对此总是各持己见。我确实比较喜欢创造者概念，以及创造数字资产并获得奖励的能力。但是，在这个领域也有很多骗子、挂羊头卖狗肉的人和急功近利的人。而且还会造成大量的环境污染，虽然可以将其归因于一些正在进行的采矿活动和能源的使用，所以这是一个多样的世界。我们将看到这一切的结果。因此，我喜欢它的某些部分，也反对它的某些部分。&lt;/p&gt;
&lt;h2 id=&quot;潜力巨大的项目：GitHub构建的Copilot&quot;&gt;&lt;a href=&quot;#潜力巨大的项目：GitHub构建的Copilot&quot; class=&quot;headerlink&quot; title=&quot;潜力巨大的项目：GitHub构建的Copilot&quot;&gt;&lt;/a&gt;潜力巨大的项目：GitHub构建的Copilot&lt;/h2&gt;&lt;p&gt;问：我知道您在微软需要做的事情很多，但在微软以外，有没有什么很棒的项目或者工作吸引您的关注？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anders Hejlsberg&lt;/strong&gt;：我认为微软肯定有一些非常有趣的项目。比如开发者工具、人工智能、机器学习，还有很多其他有意思的事。不知道你是否了解GitHub正在构建的Copilot的项目，在世界上所有开源代码上训练一个机器学习网络，然后让它给出答案，是不是很棒？当然，这仍然有点像西大荒，因为有各种机遇和不可掌控的因素存在，以及知识产权等未解决问题，但它展现出巨大的潜力。所以我认为这很吸引人，我正在密切关注这个问题。&lt;/p&gt;
&lt;p&gt;问：我认为这是2021年的最好的编程项目，涉及到相当大的领域。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anders Hejlsberg&lt;/strong&gt;：是的，这个项目确实很吸引人。尤其是作为一名程序员，它在很大程度上让人洞察到我们谈论的是什么样的智能系统。但从某种意义上说，用智能这个词有点不恰当，如果有人以前写过这段代码，它就可以快速地从机器模型聚合内存中快速查找到，这就相当了不起。但是，如果以前没有人写过，它必须要思考解决方案，结果可能出人意料，所以在这方面还有很多需要思考的地方。但这是一个了不起的工具，因为它把再利用的概念提升到了一个新的水平，让我们不用再重复造轮子。&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://thenewstack.io/microsofts-programming-language-czar-anders-hejlsberg-the-interview&quot;&gt;https://thenewstack.io/microsofts-programming-language-czar-anders-hejlsberg-the-interview&lt;/a&gt;&lt;br&gt;本文为CSDN翻译：&lt;a</summary>
        
      
    
    
    
    <category term="但当涉猎" scheme="https://fe32.top/categories/%E4%BD%86%E5%BD%93%E6%B6%89%E7%8C%8E/"/>
    
    
    <category term="Anders Hejlsberg" scheme="https://fe32.top/tags/Anders-Hejlsberg/"/>
    
  </entry>
  
  <entry>
    <title>SQL编程思想：一切皆关系</title>
    <link href="https://fe32.top/articles/sql228ba/"/>
    <id>https://fe32.top/articles/sql228ba/</id>
    <published>2022-03-03T09:24:34.000Z</published>
    <updated>2023-06-27T14:39:00.737Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在计算机领域有许多伟大的设计理念和思想，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Unix 中，一切皆文件。&lt;/li&gt;
&lt;li&gt;在面向对象的编程语言中，一切皆对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系数据库同样也有自己的设计思想：&lt;strong&gt;在 SQL 中，一切皆关系&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;关系模型&quot;&gt;&lt;a href=&quot;#关系模型&quot; class=&quot;headerlink&quot; title=&quot;关系模型&quot;&gt;&lt;/a&gt;关系模型&lt;/h2&gt;&lt;p&gt;关系模型（Relational model）由 E.F.Codd 博士于 1970 年提出，以集合论中的关系概念为基础；无论是现实世界中的实体对象还是它们之间的联系都使用关系表示。我们在数据库系统中看到的关系就是二维表（Table），由行（Row）和列（Column）组成。因此，也可以说关系表是由数据行构成的集合。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/7d6fa0f3b87a3.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关系模型由&lt;strong&gt;数据结构&lt;/strong&gt;、&lt;strong&gt;关系操作&lt;/strong&gt;、&lt;strong&gt;完整性约束&lt;/strong&gt; 三部分组成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系模型中的数据结构就是关系表，包括 &lt;strong&gt;基础表&lt;/strong&gt;、&lt;strong&gt;派生表&lt;/strong&gt;（查询结果）和 &lt;strong&gt;虚拟表&lt;/strong&gt;（视图）。&lt;/li&gt;
&lt;li&gt;常用的关系操作包括 &lt;strong&gt;增加&lt;/strong&gt;、&lt;strong&gt;删除&lt;/strong&gt;、&lt;strong&gt;修改&lt;/strong&gt; 和 &lt;strong&gt;查询&lt;/strong&gt;（CRUD），使用的就是 SQL 语言。其中查询操作最为复杂，包括选择（Selection）、投影（Projection）、并集（Union）、交集（Intersection）、差集（Exception）以及笛卡儿积（Cartesian product）等。&lt;/li&gt;
&lt;li&gt;完整性约束用于维护数据的完整性或者满足业务约束的需求，包括&lt;strong&gt;实体完整性&lt;/strong&gt;（主键约束）、&lt;strong&gt;参照完整性&lt;/strong&gt;（外键约束）以及&lt;strong&gt;用户定义的完整性&lt;/strong&gt;（非空约束、唯一约束、检查约束和默认值）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们今天的主题是关系操作语言，也就是 &lt;code&gt;SQL&lt;/code&gt;。本文使用的示例数据来源于&lt;a href=&quot;https://blog.csdn.net/horses/article/details/86518676&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;面向集合&quot;&gt;&lt;a href=&quot;#面向集合&quot; class=&quot;headerlink&quot; title=&quot;面向集合&quot;&gt;&lt;/a&gt;面向集合&lt;/h2&gt;&lt;p&gt;SQL（结构化查询语言）是操作关系数据库的标准语言。SQL 非常接近英语，使用起来非常简单。它在设计之初就考虑了非技术人员的使用需求，我们通常只需说明想要的结果（What），而将数据处理的过程（How）交给数据库管理系统。所以说，SQL 才是真正给人用的编程语言！😎&lt;/p&gt;
&lt;p&gt;接下来我们具体分析一下关系的各种操作语句；目的是为了让大家能够了解 &lt;strong&gt;SQL 是一种面向集合的编程语言，它的操作对象是集合，操作的结果也是集合&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📝在关系数据库中，关系、表、集合三者通常表示相同的概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面是一个简单的查询语句：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; employee_id, first_name, last_name, hire_date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; employees;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;它的作用就是从 employees 表中查询员工信息。显然，我们都知道 FROM 之后是一个表（关系、集合）。不仅如此，整个查询语句的结果也是一个表。所以，我们可以将上面的查询作为表使用：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; employee_id, first_name, last_name, hire_date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; employees) t;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;括号内的查询语句被称为派生表，我们给它指定了一个别名叫做 t。同样，整个查询结果也是一个表；这就意味着我们可以继续嵌套，虽然这么做很无聊。&lt;/p&gt;
&lt;p&gt;我们再看一个 PostgreSQL 中的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- PostgreSQL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;upper&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;sql&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| upper |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;comment&quot;&gt;-------|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   SQL |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;upper() 是一个大写转换的函数。它出现再 FROM 子句中，意味着它的结果也是一个表，只不过是 1 行 1 列的特殊表。&lt;/p&gt;
&lt;p&gt;SELECT 子句用于指定需要查询的字段，可以包含表达式、函数值等。SELECT 在关系操作中被称为投影（Projection），看下面的示意图应该就比较好理解了。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/872a1138bb744.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;除了 SELECT 之外，还有一些常用的 SQL 子句。&lt;/p&gt;
&lt;p&gt;WHERE 用于指定数据过滤的条件，在关系运算中被称为选择（Selection），示意图如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/06a04e23529e3.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ORDER BY 用于对查询的结果进行排序，示意图如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/96d1b82a6555a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;总之，SQL 可以完成各种数据操作，例如过滤、分组、排序、限定数量等；所有这些操作的对象都是关系表，结果也是关系表。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/62691f71dc7bd.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在这些关系操作中，有一个比较特殊，就是分组。&lt;/p&gt;
&lt;h2 id=&quot;GROUP-BY&quot;&gt;&lt;a href=&quot;#GROUP-BY&quot; class=&quot;headerlink&quot; title=&quot;GROUP BY&quot;&gt;&lt;/a&gt;GROUP BY&lt;/h2&gt;&lt;p&gt;分组（ GROUP BY）操作和其他的关系操作不同，因为它改变了关系的结构。来看下面的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; department_id, &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;(*), first_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; employees&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; department_id;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;该语句的目的是按照部门统计员工的数量，但是存在一个语法错误，就是 first_name 不能出现在查询列表中。原因在于按照部门进行分组的话，每个部门包含多个员工；无法确定需要显示哪个员工的姓名，这是一个逻辑上的错误。&lt;/p&gt;
&lt;p&gt;所以说，GROUP BY 改变了集合元素（数据行）的结构，创建了一个全新的关系。分组操作的示意图如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/11c157ae1550d.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;尽管如此，GROUP BY 的结果仍然是一个集合。&lt;/p&gt;
&lt;h2 id=&quot;UNION&quot;&gt;&lt;a href=&quot;#UNION&quot; class=&quot;headerlink&quot; title=&quot;UNION&quot;&gt;&lt;/a&gt;UNION&lt;/h2&gt;&lt;p&gt;SQL 面向集合特性最明显的体现就是 &lt;strong&gt;UNION&lt;/strong&gt;（并集运算）、&lt;strong&gt;INTERSECT&lt;/strong&gt;（交集运算）和 &lt;strong&gt;EXCEPT/MINUS&lt;/strong&gt;（差集运算）。&lt;/p&gt;
&lt;p&gt;这些集合运算符的作用都是将两个集合并成一个集合，因此需要满足以下条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两边的集合中字段的数量和顺序必须相同；&lt;/li&gt;
&lt;li&gt;两边的集合中对应字段的类型必须匹配或兼容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体来说，UNION 和 UNION ALL 用于计算两个集合的并集，返回出现在第一个查询结果或者第二个查询结果中的数据。它们的区别在于 UNION 排除了结果中的重复数据，UNION ALL 保留了重复数据。下面是 UNION 操作的示意图：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/8d6cfd5b642f7.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;INTERSECT 操作符用于返回两个集合中的共同部分，即同时出现在第一个查询结果和第二个查询结果中的数据，并且排除了结果中的重复数据。INTERSECT 运算的示意图如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/5527333e9a514.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;EXCEPT 或者 MINUS 操作符用于返回两个集合的差集，即出现在第一个查询结果中，但不在第二个查询结果中的记录，并且排除了结果中的重复数据。EXCEPT 运算符的示意图如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/38f2c72b0fc15.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;除此之外，DISTINCT 运算符用于消除重复数据，也就是排除集合中的重复元素。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;📝SQL 中的关系概念来自数学中的集合理论，因此 UNION、INTERSECT 和 EXCEPT 分别来自集合论中的并集（∪ \cup∪）、交集（∩ \cap∩）和差集（∖ \setminus∖）运算。需要注意的是，集合理论中的集合不允许存在重复的数据，但是 SQL 允许。因此，SQL 中的集合也被称为多重集合（multiset）；多重集合与集合理论中的集合都是无序的，但是 SQL 可以通过 ORDER BY 子句对查询结果进行排序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;JOIN&quot;&gt;&lt;a href=&quot;#JOIN&quot; class=&quot;headerlink&quot; title=&quot;JOIN&quot;&gt;&lt;/a&gt;JOIN&lt;/h2&gt;&lt;p&gt;在 SQL 中，不仅实体对象存储在关系表中，对象之间的联系也存储在关系表中。因此，当我们想要获取这些相关的数据时，需要使用到另一个操作：连接查询（JOIN）。&lt;/p&gt;
&lt;p&gt;常见的 SQL连接查类型包括&lt;strong&gt;内连接&lt;/strong&gt;、&lt;strong&gt;外连接&lt;/strong&gt;、&lt;strong&gt;交叉连接&lt;/strong&gt;等。其中，外连接又可以分为&lt;strong&gt;左外连接&lt;/strong&gt;、&lt;strong&gt;右外连接&lt;/strong&gt;以及&lt;strong&gt;全外连接&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;内连接（Inner Join）返回两个表中满足连接条件的数据，内连接的原理如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/affec83915ff5.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;左外连接（Left Outer Join）返回左表中所有的数据；对于右表，返回满足连接条件的数据；如果没有就返回空值。左外连接的原理如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/ee3cf568b8329.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;右外连接（Right Outer Join）返回右表中所有的数据；对于左表，返回满足连接条件的数据，如果没有就返回空值。右外连接与左外连接可以互换，以下两者等价：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;t1 RIGHT JOIN t2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t2 LEFT JOIN t1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;全外连接（Full Outer Join）等价于左外连接加上右外连接，同时返回左表和右表中所有的数据；对于两个表中不满足连接条件的数据返回空值。全外连接的原理如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/c7ca1e4c0c452.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;交叉连接也称为笛卡尔积（Cartesian Product）。两个表的交叉连接相当于一个表的所有行和另一个表的所有行两两组合，结果的数量为两个表的行数相乘。交叉连接的原理如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/03/45ac03b347bf7.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;📝其他类型的连接还有半连接（SEMI JOIN）、反连接（ANTI JOIN）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;集合操作将两个集合合并成一个更大或更小的集合；连接查询将两个集合转换成一个更大或更小的集合，同时获得了一个更大的元素（更多的列）。很多时候集合操作都可以通过连接查询来实现，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; department_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; departments&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; department_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; employees;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;等价于：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COALESCE&lt;/span&gt;(d.department_id, e.department_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; departments d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;FULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;JOIN&lt;/span&gt; employees e &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; (e.department_id = d.department_id);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们已经介绍了许多查询的示例，接下来看看其他的数据操作。&lt;/p&gt;
&lt;h2 id=&quot;DML&quot;&gt;&lt;a href=&quot;#DML&quot; class=&quot;headerlink&quot; title=&quot;DML&quot;&gt;&lt;/a&gt;DML&lt;/h2&gt;&lt;p&gt;DML 表示数据操作语言，也就是插入、更新和删除。以下是一个插入语句示例：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- MySQL、SQL Server 等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- Oracle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; DUAL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ALL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; DUAL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ALL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; DUAL);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们通过一个 INSERT 语句插入了 3 条记录，或者说是插入了一个包含 3 条记录的关系表。因为，UNION ALL 返回的是一个关系表。VALUES 同样是指定了一个关系表，在 &lt;code&gt;SQL Server&lt;/code&gt; 和 &lt;code&gt;PostgreSQL&lt;/code&gt; 中支持以下语句：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;前面我们已经说过，FROM 之后是一个关系表，所以这里的 VALUES 也是一样。由于我们经常插入单条记录，并没有意识到实际上是以表为单位进行操作。&lt;/p&gt;
&lt;p&gt;同样，UPDATE 和 DELETE 语句也都是以关系表为单位的操作；只不过我们习惯了说更新一行数据或者删除几条记录。&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a href=&quot;https://blog.csdn.net/horses/article/details/104553075&quot;&gt;不剪发的Tony老师 -</summary>
        
      
    
    
    
    <category term="后端杂谈" scheme="https://fe32.top/categories/%E5%90%8E%E7%AB%AF%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="SQL" scheme="https://fe32.top/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>为什么魂斗罗只有128KB却可以实现那么长的剧情？</title>
    <link href="https://fe32.top/articles/contra128/"/>
    <id>https://fe32.top/articles/contra128/</id>
    <published>2022-02-19T10:34:13.000Z</published>
    <updated>2023-06-27T14:39:00.703Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今天跟大家分享一下为什么魂斗罗只有 128KB， 却可以实现那么长的剧情？&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/71f4b68b4545c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;br&gt;

&lt;p&gt;现代程序员 A 和 1980 年代游戏程序员 B 的对话：&lt;/p&gt;
&lt;p&gt;A：为什么你用 128KB 能实现这么多画面、音乐、动画？&lt;/p&gt;
&lt;p&gt;B：128KB 还不够么？其实为了表现力已经相当奢侈了，加了很多不重要的细节。&lt;/p&gt;
&lt;p&gt;A：就说你们的音乐，这个音乐，我压到最低码率的 mp3，也得至少 1MB 吧。&lt;/p&gt;
&lt;p&gt;B：你怎么压的？一首背景音乐怎么可能超过 1KB。&lt;/p&gt;
&lt;p&gt;A：那你实现全屏卷轴，用了多少显存？&lt;/p&gt;
&lt;p&gt;B：一共就只有 2KB 显存，多了也放不下啊。&lt;/p&gt;
&lt;p&gt;A：……&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/b2b185024780e.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;我们对“数据量”无法直观认识&quot;&gt;&lt;a href=&quot;#我们对“数据量”无法直观认识&quot; class=&quot;headerlink&quot; title=&quot;我们对“数据量”无法直观认识&quot;&gt;&lt;/a&gt;我们对“数据量”无法直观认识&lt;/h2&gt;&lt;p&gt;除非是专家，一般人根本无法估算到底多大算大，多小算小。一般人对“数据量”并没什么概念。&lt;/p&gt;
&lt;p&gt;一篇 800 字的作文有多少数据量？按照 GBK 编码，约 1.6KB，按照 UTF-8 编码，则是 2.4KB。只写了 1 个字的作文，按理来说 1~3 字节就够了。但只写 1 个字的 word 文档，有 10956 字节。而由于硬盘格式化要求，再多占用 1332 字节。我就写了一个字，真的什么都没干。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/dc31f05aea8a8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;br&gt;

&lt;p&gt;现实中常见的产品、流行的技术，实际上和时代背景密切相关。&lt;/p&gt;
&lt;p&gt;当你抱着 15 寸笔记本还嫌小的时候，1990 年代初的家庭，可是一家人围着 14~18 寸的球面电视看的。把雪碧拿给古代人喝一口，估计他会齁得要死，必须喝点水压压惊。&lt;/p&gt;
&lt;p&gt;当物质基础变得十分丰富的时候，一定会产生无法避免的“浪费”，这种“浪费”会进一步改变人感受的阈值，对度量的估计都变得紊乱了。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/e1df078bc5cd1.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;FC时代的图形技术&quot;&gt;&lt;a href=&quot;#FC时代的图形技术&quot; class=&quot;headerlink&quot; title=&quot;FC时代的图形技术&quot;&gt;&lt;/a&gt;FC时代的图形技术&lt;/h2&gt;&lt;p&gt;由于早期的记忆芯片（ROM）非常贵，而且大容量磁盘的技术也不成熟，所以暂且不论硬件计算能力，仅仅是想增加游戏的总容量也非常困难。所以自然会使用符合当时水平的数据结构。&lt;/p&gt;
&lt;p&gt;以红白机 FC 为例，它的分辨率为 256x240。分辨率不算低，但却只有 2KB 显存，而且还要实现全屏卷轴效果。所以在 FC 设计之初，从硬件上就提供了充分利用显存的方法——使用 Tile（瓦片)。&lt;/p&gt;
&lt;p&gt;对每一个场景来说，使用若干数量的瓦片，场景用有限的瓦片拼接即可。这种“二级”表示方法能极大节约存储量。&lt;/p&gt;
&lt;p&gt;具体一些原理讲解可以看一些科普，比如这个：&lt;a href=&quot;https://www.bilibili.com/video/BV19J411e763&quot;&gt;https://www.bilibili.com/video/BV19J411e763&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/6c9f69a761d8c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;音频容量和代码容量&quot;&gt;&lt;a href=&quot;#音频容量和代码容量&quot; class=&quot;headerlink&quot; title=&quot;音频容量和代码容量&quot;&gt;&lt;/a&gt;音频容量和代码容量&lt;/h2&gt;&lt;p&gt;现代音乐格式往往直接保存声道的波形，这种做法保真度高、通用性强，但很显然占用空间多，一首曲子的容量以千字节、兆字节计算。&lt;/p&gt;
&lt;p&gt;而八位芯片时代的音频解决方案，关键是一颗专用芯片，例如 FC 用的理光  2A03：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/6639096679711.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;音频芯片可以产生合成音效，能提供的音色可以在一定程度上配置，但非常有限。听听 FC 游戏的音乐可以体会到常用的音色几乎一样。&lt;/p&gt;
&lt;p&gt;我觉得这个音频芯片最厉害的地方是可以同时播放几个音轨（但不能是和弦那种“同时”），《魂斗罗》、《沙罗曼蛇》、《忍者龙剑传》的殿堂级音乐，主要是靠多个音轨的交替配合实现的。&lt;/p&gt;
&lt;p&gt;每个音符只要记录音色、频率和音高就足够了，音频芯片自然会识别出来。把音符按时间排列好就是“乐谱”了，可以简单理解为“简谱”。&lt;/p&gt;
&lt;p&gt;这种简谱需要的数据量十分有限，而且大部分游戏音乐都是循环播放，数据量更是小的可怜。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/c93b491e4e1fc.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;代码也是类似的。&lt;/p&gt;
&lt;p&gt;FC 时代的游戏，没有所谓的“引擎层”，或者说引擎层就是“硬件层”。任天堂的主机完全是为游戏而设计的，瓦片、调色板、音乐、音效等基本功能已经预先考虑到了，这样一来就节约了大量底层代码。&lt;/p&gt;
&lt;p&gt;程序员要仔细研究文档，在硬件框架下思考问题，比如如何显示图片、如何卷动屏幕等等；而且还要非常熟悉硬件底层和汇编，不要浪费代码空间。&lt;/p&gt;
&lt;p&gt;一来二去，代码也能写的非常小。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/02/19/cff6a1bc9bf3d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;br&gt;

&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;原文链接：&lt;a</summary>
        
      
    
    
    
    <category term="但当涉猎" scheme="https://fe32.top/categories/%E4%BD%86%E5%BD%93%E6%B6%89%E7%8C%8E/"/>
    
    
    <category term="FC时代游戏" scheme="https://fe32.top/tags/FC%E6%97%B6%E4%BB%A3%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>6 Fun Things You Can Do With Just CSS</title>
    <link href="https://fe32.top/articles/c6func118/"/>
    <id>https://fe32.top/articles/c6func118/</id>
    <published>2022-01-18T13:21:48.000Z</published>
    <updated>2023-06-27T14:39:00.836Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/19/54a3fde280684.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;Love it or hate it, CSS(Cascading Style Sheets) is the language we use to style the HTML elements.&lt;/p&gt;
&lt;p&gt;While there are some fabulous preprocessors like SCSS(that get compiled into CSS eventually) and offer more features than normal CSS, this does not mean that you can’t do amazing things by just using plain, standard CSS.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/how-many-css-properties-are-there/#:~:text=520%20distinct%20property%20names%20from,reports%20and%2066%20editors&#39;%20drafts.&quot;&gt;CSS has 520 distinct&lt;/a&gt;  and while you may not need to know more than 30 or 50 properties, exploring the uncommon CSS properties can surely help you achieve more with just your stylesheets.&lt;/p&gt;
&lt;p&gt;Below are 6 amazing things you can do with just CSS:&lt;/p&gt;
&lt;h2 id=&quot;Create-Portraits-amp-Add-Effects&quot;&gt;&lt;a href=&quot;#Create-Portraits-amp-Add-Effects&quot; class=&quot;headerlink&quot; title=&quot;Create Portraits &amp;amp; Add Effects&quot;&gt;&lt;/a&gt;Create Portraits &amp;amp; Add Effects&lt;/h2&gt;&lt;p&gt;CSS allows you to easily add some eye-catching filters and effects to your photos, without you even touching JavaScript.&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/19/849b5df57b5ea.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above effect is created just by using the &lt;code&gt;background-clip&lt;/code&gt; property of CSS.&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;70vh&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-position&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;photo.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;-webkit-background-clip&lt;/span&gt;: text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-attachment&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-clip&lt;/span&gt;:text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-repeat&lt;/span&gt;: no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;-webkit-text-fill-color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: black;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;While my &lt;code&gt;p&lt;/code&gt; tag contains some text.&lt;br&gt;You can also use &lt;code&gt;mix-blend-mode&lt;/code&gt; which determines how content should blend with the content of the element’s parent and the element’s background.&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/19/9a176839c87c9.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Linearly-Scale-Text-In-Accordance-With-Viewport&quot;&gt;&lt;a href=&quot;#Linearly-Scale-Text-In-Accordance-With-Viewport&quot; class=&quot;headerlink&quot; title=&quot;Linearly Scale Text In Accordance With Viewport&quot;&gt;&lt;/a&gt;Linearly Scale Text In Accordance With Viewport&lt;/h2&gt;&lt;p&gt;Making your website respond to change in the viewport can be a cumbersome process that often involves rewriting parts of CSS, and testing multiple breakpoints.&lt;/p&gt;
&lt;p&gt;But it does not have to be so complicated and tiresome always.&lt;/p&gt;
&lt;p&gt;Using just one line of CSS, you can scale text between a minimum and maximum sizes as the viewport increases or decreases.&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/19/1be98a74a1feb.gif&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is done via the &lt;code&gt;clamp&lt;/code&gt; property.&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;clamp&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;minimum&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;preferred&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;maximum&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The values are pretty self-explanatory. The &lt;code&gt;clamp&lt;/code&gt; property returns a value that is between the minimum and the maximum values. The middle argument, i.e. “preferred” is a percentage of the viewport.&lt;/p&gt;
&lt;p&gt;Let’s see this in practice.&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;clamp&lt;/span&gt;(500&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;, 50%, 1500&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;When the viewport width is 1600px then the preferred value will be 50% of 1600px, that is, 800px. When the viewport is 700px, the preferred should be 50% of 700, that is, 350px.&lt;/p&gt;
&lt;p&gt;But since the minimum is 500px, it will return 500px. The same logic applies to the maximum value of 1500px.&lt;/p&gt;
&lt;p&gt;You can see from the media provided above as well. The minimum was 450px, hence you don’t see any change when the viewport becomes less than 900px.&lt;/p&gt;
&lt;h2 id=&quot;Simple-Photoshop&quot;&gt;&lt;a href=&quot;#Simple-Photoshop&quot; class=&quot;headerlink&quot; title=&quot;Simple Photoshop&quot;&gt;&lt;/a&gt;Simple Photoshop&lt;/h2&gt;&lt;p&gt;CSS provides various properties to edit and apply effects to images. Some of these properties are discussed above, such as the &lt;code&gt;mix-blend-mode&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;CSS offers various properties to manipulate images. Some of them are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Brightness: filter: brightness(90%)&lt;/li&gt;
&lt;li&gt;Blur: filter: blur(9px)&lt;/li&gt;
&lt;li&gt;Saturation: filter: saturate(4)&lt;/li&gt;
&lt;li&gt;Opacity: filter: oapcity(0.3)&lt;/li&gt;
&lt;li&gt;Hue: filter: hue-rotate(45deg)&lt;/li&gt;
&lt;li&gt;Drop Shadow: filter: drop-shadow(30px 10px 4px #4444dd)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The picture below has a blur filter applied to it.&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/19/73f65d582a83c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are more filters and you can read about them &lt;span style=&quot;text-decoration:underline&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/filter-function&quot;&gt;here&lt;/a&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Fullscreen&quot;&gt;&lt;a href=&quot;#Fullscreen&quot; class=&quot;headerlink&quot; title=&quot;Fullscreen&quot;&gt;&lt;/a&gt;Fullscreen&lt;/h2&gt;&lt;p&gt;If you have ever made a blog site or any site that involves displaying images, you must have provided some functionality to make the images go full screen.&lt;/p&gt;
&lt;p&gt;Even Medium does it, when you click on an image it enlarges.&lt;/p&gt;
&lt;p&gt;While you need JavaScript to make elements go full screen, by using the &lt;code&gt;requestFullscreen()&lt;/code&gt; method, there is a CSS pseudo-class &lt;code&gt;:fullscreen&lt;/code&gt; that allows you to style elements once they are in fullscreen mode.&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:fullscreen&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: yellow;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;You can easily apply filters or change background(since elements that go full screen preserve their aspect ratio, leaving a white background behind).&lt;/p&gt;
&lt;h2 id=&quot;Pie-Charts&quot;&gt;&lt;a href=&quot;#Pie-Charts&quot; class=&quot;headerlink&quot; title=&quot;Pie Charts&quot;&gt;&lt;/a&gt;Pie Charts&lt;/h2&gt;&lt;p&gt;You can easily create pie charts using CSS only, with just two lines of CSS.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;conic-gradient()&lt;/code&gt; CSS function, you can create images consisting of the gradient with color transitions rotated around a center point.&lt;/p&gt;
&lt;p&gt;The most practical use case of this function, in my opinion, is creating pie charts.&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;conic-gradient&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;red&lt;/span&gt; 20%, &lt;span class=&quot;selector-tag&quot;&gt;purple&lt;/span&gt; 0 60%, &lt;span class=&quot;selector-tag&quot;&gt;yellow&lt;/span&gt; 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;border-radius&lt;/span&gt;: 50%;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The above code will render the following:&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/19/0883c17845de2.jpeg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result of the &lt;code&gt;conic-gradient()&lt;/code&gt; function is an object of the &lt;span style=&quot;text-decoration:underline&quot;&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/gradient&quot;&gt;gradient&lt;/a&gt;&lt;/span&gt; datatype.&lt;/p&gt;
&lt;p&gt;You can find browser compatibility &lt;span style=&quot;text-decoration:underline&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient()#browser_compatibility&quot;&gt;here&lt;/a&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Gradient-Text&quot;&gt;&lt;a href=&quot;#Gradient-Text&quot; class=&quot;headerlink&quot; title=&quot;Gradient Text&quot;&gt;&lt;/a&gt;Gradient Text&lt;/h2&gt;&lt;p&gt;Gradients when used correctly can provide your site with a breath of fresh air.&lt;/p&gt;
&lt;p&gt;Chances are you already know how to work with gradients. If not, you can always use sites like &lt;span style=&quot;text-decoration:underline&quot;&gt;&lt;a href=&quot;https://www.grabient.com/&quot;&gt;Grabient&lt;/a&gt;&lt;/span&gt; which lets you customize the gradient and provide the CSS for it.&lt;/p&gt;
&lt;p&gt;But do you know you can easily apply a gradient to text as well?&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.text&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;linear-gradient&lt;/span&gt;(to right, red &lt;span class=&quot;number&quot;&gt;0%&lt;/span&gt;, purple &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;attribute&quot;&gt;-webkit-background-clip&lt;/span&gt;: text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;attribute&quot;&gt;-webkit-text-fill-color&lt;/span&gt;: transparent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;attribute&quot;&gt;font&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  size: &lt;span class=&quot;number&quot;&gt;10vw&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;And you get awesome gradient text with just this.&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/19/62e443571397c.jpeg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;HTML and CSS are the fundamental building blocks of web development and it’s a myth you can’t build some great sites using just these two technologies.&lt;/p&gt;
&lt;p&gt;While you need JavaScript for functionality, HTML and CSS alone can help you build beautiful marketing and landing sites with bare minimum JavaScript(for converting leads).&lt;/p&gt;
&lt;p&gt;I have seen many freelancers get away with just CSS and HTML skills.&lt;/p&gt;
&lt;p&gt;I hope you enjoyed this article!&lt;/p&gt;
&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;This article is from: &lt;a href=&quot;https://javascript.plainenglish.io/6-fun-things-you-can-do-with-css-1acabc8bf072&quot;&gt;6 Fun Things You Can Do With Just CSS&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Recommended reading&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://javascript.plainenglish.io/5-html-tricks-nobody-is-talking-about-a0480104fe19&quot;&gt;5 HTML Tricks Nobody is Talking About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://javascript.plainenglish.io/rest-is-dying-get-rid-of-it-d43e6ef80cbe&quot;&gt;REST is Dying. Get Rid of It.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://javascript.plainenglish.io/the-10-most-popular-programming-articles-december-2021-e1aace2c795c&quot;&gt;The 10 Most Popular Programming Articles(December</summary>
        
      
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>2021，CSS 杀疯了！</title>
    <link href="https://fe32.top/articles/amo9485t/"/>
    <id>https://fe32.top/articles/amo9485t/</id>
    <published>2021-12-16T06:34:26.000Z</published>
    <updated>2023-06-27T14:39:00.844Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;tip cogs faa-horizontal&quot;&gt;&lt;p&gt;2021 年已接近尾声，CSS 作为前端最流行的技术之一，这一年到底有怎样的发展呢？一起来看看吧&lt;/p&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;本文所有指标均来自 HTTP Archive 数据集。HTTP Archive 是一个社区运行的项目，自 2010 年以来一直在跟踪网络的构建方式。在幕后使用 WebPageTest 和 Lighthouse，每月测试大约 820 万个网站的元数据，并将其包含在公共 BigQuery 数据库中进行分析。&lt;br&gt;&lt;br&gt;测试网站：820万个；&lt;br&gt;&lt;br&gt;数据处理：39.5TB。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;样式表大小&lt;br&gt;下面是每个样式表文件的大小分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/b0dafc5c650ed.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
CSS文件每年的大小都在不断增长，中等页面的CSS文件大约 &lt;span class=&quot;p blue&quot;&gt;70KB&lt;/span&gt;，较大页面的CSS文件大约 &lt;span class=&quot;p blue&quot;&gt;250KB&lt;/span&gt;。与2020年相比，CSS文件大小的中位数增加了 &lt;span class=&quot;p blue&quot;&gt;7.9%&lt;/span&gt;，同时，移动端CSS所有的百分比都略低于Web端CSS。&lt;br&gt;&lt;br&gt;在所有测试到的CSS文件中，最大的Web页面CSS文件大小为 64,628 KB，最大的移动页面CSS文件大小为 17,823 KB。&lt;/li&gt;
&lt;li&gt;预处理器&lt;br&gt;页面的CSS大小并未受到预处理器的显著影响。&lt;span class=&quot;p blue&quot;&gt;17%的Web页面&lt;/span&gt; 和 &lt;span class=&quot;p blue&quot;&gt;16.5%的移动页面&lt;/span&gt;包含预处理器，略高于去年的 &lt;span class=&quot;p blue&quot;&gt;15%&lt;/span&gt;。具体使用的样式如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/7d7e584cd2cd9.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;样式表数量&lt;br&gt;下面是每个页面使用的外部样式表的数量分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/f56585b7b61fa.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
今年每个页面的样式表分布相对于去年有所增加，第50-90百分位的都增加了一个，第10-15百分位的都没有变化。&lt;br&gt;今年，外部样式表数量最多的记录是 &lt;span class=&quot;p blue&quot;&gt;2368&lt;/span&gt; ，比2020年的 &lt;span class=&quot;p blue&quot;&gt;1379&lt;/span&gt; ，增加了大约一倍。&lt;/li&gt;
&lt;li&gt;样式表规则&lt;br&gt;下面是每个页面的样式规则数量分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/b26131bfbbd17.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
与去年相比，较高百分位的数量几乎没有变化，较低百分位的数量略有上升。在多数百分位的数量分布中，Web页面相对于移动页面的样式规则更多一点。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;选择器&quot;&gt;&lt;a href=&quot;#选择器&quot; class=&quot;headerlink&quot; title=&quot;选择器&quot;&gt;&lt;/a&gt;选择器&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;class&lt;br&gt;最常用的class名称如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/35070855a14f4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;id&lt;br&gt;最常用的id名称如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/7cbe1543d690d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;属性选择器&lt;br&gt;最常用的属性选择器如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/4a4140c792c8e.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
最常用的属性选择器是&lt;code&gt;type&lt;/code&gt;，它可以用于选择表单控件，如复选框、单选按钮、文本输入等。&lt;/li&gt;
&lt;li&gt;伪类&lt;br&gt;最常用的伪类如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/57df71153723f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
和 2020 年一样，用户操作伪类&lt;code&gt;:hover&lt;/code&gt;、&lt;code&gt;:focus&lt;/code&gt;和&lt;code&gt;:active&lt;/code&gt;占据了前三名，它们都出现在至少三分之二的页面中。&lt;/li&gt;
&lt;li&gt;伪元素&lt;br&gt;最常用的伪元素如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/f4c651c70a6ba.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;!important&lt;br&gt;每个页面使用&lt;code&gt;!important&lt;/code&gt;的比例如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/1a33651a0f232.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
调查发现，移动页面中最多有17,990 条&lt;code&gt;!important&lt;/code&gt;规则，Web页面中最多有17,648 条&lt;code&gt;!important&lt;/code&gt;规则。&lt;br&gt;&lt;br&gt;使用&lt;code&gt;!important&lt;/code&gt;规则的样式属性分布如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/e8af10d72b1e7.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;值和单位&quot;&gt;&lt;a href=&quot;#值和单位&quot; class=&quot;headerlink&quot; title=&quot;值和单位&quot;&gt;&lt;/a&gt;值和单位&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;长度&lt;br&gt;最受欢迎的长度单位：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/a844e17c2dd0a.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
像素单位仍然是迄今为止最常用的长度单位，出现在了大约71%的页面中。&lt;br&gt;&lt;br&gt;下面是每个属性的长度类型分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/089a4e29d7f26.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
下面是最常用的字体相对长度单位分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/fad793e568883.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
0长度的使用单位分布如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/3e3cf15233c17.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
接近88%的值都直接省略了单位，剩下的有单位的几乎都是&lt;code&gt;px&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;计算&lt;br&gt;下面是使用&lt;code&gt;calc()函数&lt;/code&gt;的最常用的属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/29ab56627bce3.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
去过去几年一样，最常用的用法&lt;code&gt;calc()&lt;/code&gt;是用来设置&lt;code&gt;width&lt;/code&gt;的。&lt;br&gt;&lt;br&gt;下面是&lt;code&gt;calc()函数&lt;/code&gt;中最常用的长度单位：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/75c78f9891b13.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;code&gt;calc()函数&lt;/code&gt;中单位数量的分布如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/3fa09b8430d29.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;code&gt;calc()&lt;/code&gt;值是相对简单的，绝大多数使用两种不同单位进行计算，例如从百分比值的计算结果中减去像素。总共 99% 的&lt;code&gt;calc()表达式&lt;/code&gt;使用了一种或两种单位类型。&lt;/li&gt;
&lt;li&gt;全局关键字&lt;br&gt;下面是最常用的全局关键字以及其分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/4c86493e717de.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;颜色&lt;br&gt;最常用的颜色格式如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/44a4206f96d34.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
很长一段时间内，#RRGGBB格式一直是使用最多的颜色格式，超过了一半的颜色声明会使用这种格式。颜色值的 75% 都是使用十六进制和 RGB 语法表示的。&lt;br&gt;&lt;br&gt;最常用的颜色关键字值：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/f58e142314df0.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;CSS中图片格式&lt;br&gt;下面是CSS中图像格式比例分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/75df2a9bb62f4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;CSS中图片格式&lt;br&gt;下面是CSS样式文件在中加载的图像数量分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/cd4000b071c49.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
大多数的CSS不会加载大量的图片。在调查中，站点图片最多的CSS，其Web页面CSS中加载了&lt;span class=&quot;p blue&quot;&gt;6088&lt;/span&gt; 张图片，移动页面CSS中加载了 &lt;span class=&quot;p blue&quot;&gt;6089&lt;/span&gt; 张图片。&lt;/li&gt;
&lt;li&gt;CSS中图片大小&lt;br&gt;下面是通过CSS加载的外部图片的大小分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/c44d1e78ecc9e.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
总体来说，移动页面会比Web页面CSS加载的外部图片略小。在调查中，有一个页面CSS加载的图片总大小达到314,386.1 KB。&lt;br&gt;&lt;br&gt;下面是按照图片格式在移动页面上通过CSS加载的外部图像大小分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/e611e4be0b24d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
有趣的是，在第 90 个百分位数时，GIF 图像平均比 SVG 文件还要小。&lt;/li&gt;
&lt;li&gt;渐变&lt;br&gt;下面是常见的使用渐变的属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/0d75110164472.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
下面是最常用的渐变值：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/7917c98fd4195.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;布局&quot;&gt;&lt;a href=&quot;#布局&quot; class=&quot;headerlink&quot; title=&quot;布局&quot;&gt;&lt;/a&gt;布局&lt;/h2&gt;&lt;p&gt;下面是最长使用的布局类型：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/135a2532bec00.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;需要注意，这里并不是页面主要布局的方式，而是说&lt;code&gt;position: absolute&lt;/code&gt;出现在我们分析的页面的 93% 的样式中。同样，&lt;code&gt;display: grid&lt;/code&gt; 出现在 36% 的页面样式中，但这并不意味着所有页面的 37% 是 &lt;code&gt;Grid&lt;/code&gt;布局，只是该组合出现在样式表的某些地方。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Flexbox和Grid布局&lt;br&gt;下面是在移动设备上采用Flexbox和Grid布局的比例分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/cd58d5ad78e98.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
使用&lt;code&gt;Flexbox&lt;/code&gt;和&lt;code&gt;Grid&lt;/code&gt;布局一直在持续增长。2019 年，&lt;code&gt;Flexbox&lt;/code&gt; 布局的采用率为 41%；2020 年为 63%。今年，&lt;code&gt;Flexbox&lt;/code&gt; 在移动端和桌面端分别达到 71% 和 73%。同时，Grid 布局的采用率每年都在会翻倍，从 2% 到 4%，现在是 8%。&lt;/li&gt;
&lt;li&gt;多列布局&lt;br&gt;使用多列布局的页面的百分比：20%。&lt;/li&gt;
&lt;li&gt;border-box数量&lt;br&gt;每个页面中使用box-sizing: border-box的数量分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/5ed47f0b3d1f4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;过渡和动画&lt;br&gt;动画仍然是被广泛使用的，animation属性在 77% 的移动页面和 73% 的桌面页面上使用。transition属性在 85% 的移动页面和 90% 的桌面页面上使用。&lt;br&gt;最常使用过渡的属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/39ea847df09de.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
过渡持续时间的分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/7e221dd1f580e.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
即使在第 90 个百分位，过渡持续时间的中位数也仅为半秒。&lt;br&gt;&lt;br&gt;延迟过渡的分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/1bedad42f820c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
可以看到，最高的过渡延迟中位数是 1.7 秒，第 10 个百分位数的中位数延迟大约不到负三分之一秒，这表明大量过渡是在生成的动画中途开始的。&lt;br&gt;&lt;br&gt;过渡计时功能的分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/81017d0353660.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
最常用的动画类型：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/a93ca75cf4d6d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;响应式设计&quot;&gt;&lt;a href=&quot;#响应式设计&quot; class=&quot;headerlink&quot; title=&quot;响应式设计&quot;&gt;&lt;/a&gt;响应式设计&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;媒体查询功能&lt;br&gt;最常用的用作媒体查询的功能如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/d8e6963f301c1.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;code&gt;max-width&lt;/code&gt; 和 &lt;code&gt;min-width&lt;/code&gt; 是迄今为止最受欢迎的查询功能。&lt;/li&gt;
&lt;li&gt;媒体查询断点&lt;br&gt;最常用的媒体查询断点值：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/597649aaf08bc.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
今为止最常见的断点是 767 和 768 px，这与 iPad 在纵向模式下的分辨率非常吻合。767px 被大量用作最大宽度断点，而很少用作最小宽度值。786px经常被用作最小和最大断点。&lt;/li&gt;
&lt;li&gt;媒体查询属性&lt;br&gt;通过媒体查询最常更改的属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/3c71126912824.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
最常设置的属性是&lt;code&gt;display&lt;/code&gt;，紧随其后的是&lt;code&gt;color&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, 和 &lt;code&gt;height&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;特征查询&quot;&gt;&lt;a href=&quot;#特征查询&quot; class=&quot;headerlink&quot; title=&quot;特征查询&quot;&gt;&lt;/a&gt;特征查询&lt;/h2&gt;&lt;p&gt;特征查询 ( @supports) 的使用继续保持增长。2019 年，有 30% 的页面在使用，2020年为 39% 。2021 年，将近 48% 的页面使用特征查询来决定在什么上下文中应用哪种 CSS。&lt;/p&gt;
&lt;p&gt;最常使用的特征查询的依据分布如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/f6d558955cdc8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;粘性定位是最受欢迎的查询依据，占所有特征查询的一半以上。&lt;/p&gt;
&lt;h2 id=&quot;自定义属性&quot;&gt;&lt;a href=&quot;#自定义属性&quot; class=&quot;headerlink&quot; title=&quot;自定义属性&quot;&gt;&lt;/a&gt;自定义属性&lt;/h2&gt;&lt;p&gt;2019-2021 年自定义属性使用的变化如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/76e8ee59c15bf.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;图片今年，28.6% 的移动页面和 28.3% 的桌面页面定义了自定义属性（也就是CSS变量）。并且，35.2% 的移动页面和 35.6% 的桌面页面包含至少一个&lt;code&gt;var()&lt;/code&gt;值。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命名&lt;br&gt;对于自定义属性的命名，最常使用的自定义属性名称如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/9d24977937ff0.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
使用最多的自定义属性是&lt;code&gt;--wp&lt;/code&gt; 开头的，这些都是 &lt;code&gt;WordPress&lt;/code&gt; 网站中的属性。&lt;/li&gt;
&lt;li&gt;用法&lt;br&gt;最常用自定义属性的属性如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/c76d6db7d9331.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
自定义属性值类型的分布如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/dad81a350d319.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;复杂&lt;br&gt;自定义属性是可以包含其他自定义属性的：&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:root&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;--base-hue&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;335&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/* depth = 0 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;--base-color&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;hsl&lt;/span&gt;(var(--base-hue) &lt;span class=&quot;number&quot;&gt;90%&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* depth = 1 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;--background&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;linear-gradient&lt;/span&gt;(var(--base-color), black); &lt;span class=&quot;comment&quot;&gt;/* depth = 2 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
自定义属性深度的分布如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/234c724f34ca1.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
绝大多数自定义属性的值深度为零：它们没有在自己的值中包含其他自定义属性的值。近三分之一有一个深度级别，除此之外，几乎没有深度为两个或更多的自定义属性值。&lt;br&gt;&lt;br&gt;除此之外，使用自定义属性值的选择器， 60% 设置在根元素上（使用:root或html选择器），大约 5% 设置在&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;元素上。其余的应用于根元素的某些后代而不是&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. 这意味着大约三分之二的自定义属性被用作实际上是全局常量。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;国际化&quot;&gt;&lt;a href=&quot;#国际化&quot; class=&quot;headerlink&quot; title=&quot;国际化&quot;&gt;&lt;/a&gt;国际化&lt;/h2&gt;&lt;p&gt;对于不同语言，其可能存在不用的书写形式，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;英文字符是从左到右书写的；&lt;/li&gt;
&lt;li&gt;阿拉伯语、希伯来语和乌尔都语都是从右到左书写，&lt;/li&gt;
&lt;li&gt;汉语、蒙古语、日语可以从上到下书写。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于这些复杂的情况，&lt;code&gt;HTML&lt;/code&gt;和&lt;code&gt;CSS&lt;/code&gt;都提供了对应的处理方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方向&lt;br&gt;可以使用 CSS 的direction属性来强制执行文本的方向。该属性在 11% 的元素上被使用，在 3% 的页面上的元素上被使用。在使用 CSS 设置方向的页面中，92% 的 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 元素和 82% 的 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 元素被设置为&lt;code&gt;ltr&lt;/code&gt;（从左到右），只有 9%页面中将该属性设置为&lt;code&gt;rtl&lt;/code&gt;（从右到左）。&lt;/li&gt;
&lt;li&gt;逻辑属性&lt;br&gt;另一个对国际化有用的 CSS 特性就是“逻辑”属性。比如&lt;code&gt;margin-block-start&lt;/code&gt; 、&lt;code&gt;padding-inline-end&lt;/code&gt;等，以及&lt;code&gt;text-align&lt;/code&gt;属性的属性值&lt;code&gt;start&lt;/code&gt;和&lt;code&gt;end&lt;/code&gt;等。这些属性和值都和文本流的方向相关。&lt;br&gt;下面是逻辑属性的属性类型分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/361a79bfbc98f.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
统计发现，只有 4% 的页面使用了逻辑属性。在这些页面中，大约 33% 的页面使用它来设置 &lt;code&gt;text-align&lt;/code&gt; 为 &lt;code&gt;start&lt;/code&gt; 或 &lt;code&gt;end&lt;/code&gt;。另外 46% 设置了逻辑边距和填充。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;CSS-in-JS&quot;&gt;&lt;a href=&quot;#CSS-in-JS&quot; class=&quot;headerlink&quot; title=&quot;CSS in JS&quot;&gt;&lt;/a&gt;CSS in JS&lt;/h2&gt;&lt;p&gt;下面是使用的CSS-in-JS 库的分布情况：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/394faf0f06da6.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;统计发现，大约 3% 的页面使用了 CSS-in-JS。其中&lt;code&gt;Styled Component&lt;/code&gt;就占了一半多。&lt;/p&gt;
&lt;h2 id=&quot;简写&quot;&gt;&lt;a href=&quot;#简写&quot; class=&quot;headerlink&quot; title=&quot;简写&quot;&gt;&lt;/a&gt;简写&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;简写属性&lt;br&gt;有些样式表中混合了简写属性&lt;code&gt;background&lt;/code&gt;和普通属性&lt;code&gt;background-size&lt;/code&gt;，在相应的简写属性之后出现的普通属性最常见的如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/3a861fae108e8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;background&lt;br&gt;可以看到，&lt;code&gt;background&lt;/code&gt;相关的普通属性是使用最多的，下面是最常用的&lt;code&gt;background&lt;/code&gt;属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/5d4eed03a7605.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;padding和margin&lt;br&gt;下面是最常用的padding和margin属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/d97290cee1ae8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;font&lt;br&gt;下面是最常用的字体属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/8fa40a945c0de.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Flexbox&lt;br&gt;下面是最常用的 Flexbox 相关属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/425f83641b43c.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Grid&lt;br&gt;下面是最常用的 Grid 相关属性：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/1c0c71a6a46a4.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;错误类型&quot;&gt;&lt;a href=&quot;#错误类型&quot; class=&quot;headerlink&quot; title=&quot;错误类型&quot;&gt;&lt;/a&gt;错误类型&lt;/h2&gt;&lt;p&gt;下面来看&lt;code&gt;CSS&lt;/code&gt;中常见的一些错误。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重复声明&lt;br&gt;“声明重复”的数量——通过确定有多少声明使用相同的属性和值，以及有多少声明在页面的内部是唯一的，从而粗略估计样式表的效率。&lt;br&gt;&lt;br&gt;下面是每个页面重复声明的分布：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/2794b83a86a3d.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;不存在的属性&lt;br&gt;最常见的不存在的属性如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/e5fe573cf38f0.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;预处理器Sass&quot;&gt;&lt;a href=&quot;#预处理器Sass&quot; class=&quot;headerlink&quot; title=&quot;预处理器Sass&quot;&gt;&lt;/a&gt;预处理器Sass&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Sass&lt;/code&gt;是最流行的CSS预处理器之一，最常用的&lt;code&gt;Sass&lt;/code&gt;函数调用如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/5b862810e89c5.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以发现， &lt;code&gt;Sass&lt;/code&gt;函数中有 28% 是修改颜色的函数（例如&lt;code&gt;darken&lt;/code&gt;、&lt;code&gt;mix&lt;/code&gt;），另外 6% 用于读取颜色（例如&lt;code&gt;alpha&lt;/code&gt;、&lt;code&gt;blue&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;下面是 &lt;code&gt;Sass&lt;/code&gt; 中最常用的流控制结构：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/14b61d98147c8.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下面是 &lt;code&gt;Sass&lt;/code&gt; 中最常用的规则嵌套：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/16/437fa762aeae1.webp&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Sass&lt;/code&gt;的一个主要优点就是能够将规则嵌套在其他规则中，从而避免编写重复的选择器模式。统计发现，87% 的&lt;code&gt;Sass&lt;/code&gt;样式表使用了规则嵌套。&lt;/p&gt;
&lt;p&gt;这就是2021年&lt;code&gt;CSS&lt;/code&gt;的使用趋势，期待&lt;code&gt;CSS&lt;/code&gt;在未来的发展~&lt;/p&gt;
&lt;p&gt;关于本文：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://almanac.httparchive.org/en/2021/css&quot;&gt;https://almanac.httparchive.org/en/2021/css&lt;/a&gt; &lt;br&gt;&lt;br&gt;作者：Eric A. Meyer、Shuvam</summary>
        
      
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>记录关于Vue+element-Ui的系列问题</title>
    <link href="https://fe32.top/articles/ele265ui/"/>
    <id>https://fe32.top/articles/ele265ui/</id>
    <published>2021-11-25T10:43:44.000Z</published>
    <updated>2023-06-27T14:39:00.606Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;tip cogs faa-horizontal animated&quot;&gt;&lt;p&gt;这里将记录自己工作或学习中关于&lt;code&gt;Vue+element-ui&lt;/code&gt;的系列问题，如果您有有更好的解决方法可以在下面进行评论喔~ &lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;DatePicker快捷选项&quot;&gt;&lt;a href=&quot;#DatePicker快捷选项&quot; class=&quot;headerlink&quot; title=&quot;DatePicker快捷选项&quot;&gt;&lt;/a&gt;DatePicker快捷选项&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @name:  range-pick-opt.js 日期选择器快捷选项 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @Author: tzy1997&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @Date: 2020-11-18 17:30:20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @LastEditors: tzy1997&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @LastEditTime: 2021-11-22 15:16:14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; i18n &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@/lang&#39;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;// 如果不需要 中英文则注释掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//时间选择&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; rangePickerOptions = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    shortcuts: [{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;今天&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t1&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;昨天&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t2&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start.setTime(start.getTime() - &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;最近一周&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t3&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start.setTime(start.getTime() - &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;当前月&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t4&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start.setDate(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start.getTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;上个月&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t5&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; oDate = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; year = oDate.getFullYear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; month = oDate.getMonth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; start, end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (month == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    year--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(year, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(year, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(year, month - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(year, month, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;最近一个月&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t6&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start.setTime(start.getTime() - &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;最近三个月&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t7&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start.setTime(start.getTime() - &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;最近半年&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t8&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start.setTime(start.getTime() - &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// text: &quot;今年至今&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            text: i18n.t(&lt;span class=&quot;string&quot;&gt;&#39;shortcuts.t9&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;picker&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; end = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;().getFullYear(), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                picker.$emit(&lt;span class=&quot;string&quot;&gt;&quot;pick&quot;&lt;/span&gt;, [start, end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; rangePickerOptions&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在组件中直接引入，然后在&lt;code&gt;data&lt;/code&gt; 声明变量使用就好。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; rangePickerOptions &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;@/utils/range-pick-opt&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;template&lt;/code&gt; 代码&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;el-date-picker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v-model=&quot;PerFilter.interval&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type=&quot;daterange&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unlink-panels&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size=&quot;small&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    format=&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value-format=&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :range-separator=&quot;$t(&#39;tagText.to&#39;)&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :start-placeholder=&quot;$t(&#39;tagText.order_time_st&#39;)&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :end-placeholder=&quot;$t(&#39;tagText.order_time_ed&#39;)&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :picker-options=&quot;rangePickerOptions&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    popper-class=&quot;date-picker-class&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clearable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;el-date-picker&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/a410a6733bd53.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/9945aa3244865.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;Select滚动加载-支持远程搜索&quot;&gt;&lt;a href=&quot;#Select滚动加载-支持远程搜索&quot; class=&quot;headerlink&quot; title=&quot;Select滚动加载 支持远程搜索&quot;&gt;&lt;/a&gt;Select滚动加载 支持远程搜索&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;滚动加载数据&lt;br&gt;在入口文件 &lt;code&gt;main.js&lt;/code&gt; 中加入以下代码生成自定义指令&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Vue.directive(&lt;span class=&quot;string&quot;&gt;&#39;loadmore&#39;&lt;/span&gt;, {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;bind&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el, binding&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 获取element-ui定义好的scroll盒子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; SELECTWRAP_DOM = el.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.el-select-dropdown .el-select-dropdown__wrap&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SELECTWRAP_DOM.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;scroll&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CONDITION = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.scrollHeight - &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.scrollTop &amp;lt;= &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.clientHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (CONDITION) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                binding.value()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;code&gt;template&lt;/code&gt; 代码&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;el-select&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v-model=&quot;form.tid&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clearable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filterable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reserve-keyword&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v-loadmore=&quot;loadMore&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :remote-method=&quot;remoteMethod&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;el-option&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v-for=&quot;(item, index) in list&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :key=&quot;index&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :label=&quot;item.username&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :value=&quot;item.uid&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;自定义的内容&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;el-option&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;el-select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;code&gt;data&lt;/code&gt;中需要声明的变量：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data(){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status:&#39;loadmore&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form:{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tid:0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadmorePage: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pageNum: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pageSize: 20,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;code&gt;methods&lt;/code&gt;中的方法:&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;loadMore&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.status == &lt;span class=&quot;string&quot;&gt;&quot;nomore&quot;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 已经到最后一页了  return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.loadmorePage.pageNum += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getList();  &lt;span class=&quot;comment&quot;&gt;// 获取目标数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getList&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; { Code, Data, Page } = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getApi({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Page: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PageNum: &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.loadmorePage.pageNum,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PageSize: &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.loadmorePage.pageSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filter: value,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!Data || !Data.length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.status = &lt;span class=&quot;string&quot;&gt;&quot;nomore&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// haxNextPage 是否有下一页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!Page || !Page.haxNextPage) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.status = &lt;span class=&quot;string&quot;&gt;&quot;nomore&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.list = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.list.concat(Data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.status = &lt;span class=&quot;string&quot;&gt;&quot;loadmore&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.list = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.list.concat(Data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
效果如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/961fbc0125a50.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
往下滚动 加载第二页的数据&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/f44a0aca83753.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
往下滚动 加载第三页的数据&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/1d5d15491c2c8.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/490d33e1da61c.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
往下滚动 继续 加载下一页的数据&lt;br&gt;直到加载完所有的数据 则 return&lt;/li&gt;
&lt;li&gt;远程搜索&lt;br&gt;&lt;code&gt;methods&lt;/code&gt;中的方法:&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;remoteMethod&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;query&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// query 搜索框输入的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.list = [];  &lt;span class=&quot;comment&quot;&gt;// 置空数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.loadmorePage.pageNum = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 重置页码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getList(query); &lt;span class=&quot;comment&quot;&gt;// 按 query 搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
效果如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/07/a64d8d276354a.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;上传图片&quot;&gt;&lt;a href=&quot;#上传图片&quot; class=&quot;headerlink&quot; title=&quot;上传图片&quot;&gt;&lt;/a&gt;上传图片&lt;/h2&gt;&lt;p&gt;&lt;code&gt;template&lt;/code&gt; 代码:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;el-form-item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;prop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;srvimage&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;图片&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;el-upload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class=&quot;avatar-uploader&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :show-file-list=&quot;false&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list-type=&quot;picture-card&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        action=&quot;#&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accept=&quot;.jpg, .jpeg, .png, .gif, .bmp, .JPG, .JPEG, .PBG, .GIF, .BMP&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :limit=&quot;1&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :before-upload=&quot;beforeAvatarUpload&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;imageUrl&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;imageUrl&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;avatar&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-else&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;el-icon-plus avatar-uploader-icon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;el-upload&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;el-form-item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;data&lt;/code&gt; 中需要声明的变量：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data(){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        imageUrl: &quot;&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Api接口 在页面引入即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;traderServerPicture&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; config = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        headers: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;multipart/form-data;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; request({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: &lt;span class=&quot;string&quot;&gt;&quot;mt4/tdserver/picture&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        method: &lt;span class=&quot;string&quot;&gt;&quot;post&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//上传标题图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;beforeAvatarUpload&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;file&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//上传前对图片类型和大小进行判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isJPG = file.type === &lt;span class=&quot;string&quot;&gt;&quot;image/jpeg&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isGIF = file.type === &lt;span class=&quot;string&quot;&gt;&quot;image/gif&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isPNG = file.type === &lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isBMP = file.type === &lt;span class=&quot;string&quot;&gt;&quot;image/bmp&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isLt2M = file.size / &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isJPG &amp;amp;&amp;amp; !isGIF &amp;amp;&amp;amp; !isPNG &amp;amp;&amp;amp; !isBMP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.$message.error(&lt;span class=&quot;string&quot;&gt;&quot;上传头像图片只能是 JPG/GIF/PNG/BMP 格式!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isLt2M) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.$message.error(&lt;span class=&quot;string&quot;&gt;&quot;上传头像图片大小不能超过 2MB!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将文件转化为formdata数据上传&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; formData = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FormData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    formData.append(&lt;span class=&quot;string&quot;&gt;&quot;uploadfile&quot;&lt;/span&gt;, file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    traderServerPicture(formData).then(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 你的业务逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .catch(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.$message.error(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;},&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;寻轮调用接口&quot;&gt;&lt;a href=&quot;#寻轮调用接口&quot; class=&quot;headerlink&quot; title=&quot;寻轮调用接口&quot;&gt;&lt;/a&gt;寻轮调用接口&lt;/h2&gt;&lt;p&gt;给页面绑定一个ID，目的是为了 离开该页面后 不再轮询调用接口。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/03/23/c10517793844b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;data&lt;/code&gt;中需要声明的变量：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data(){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timer: null, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;methods&lt;/code&gt;中的方法:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getDataListSeconds&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; baseURL =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.env.NODE_ENV === &lt;span class=&quot;string&quot;&gt;&quot;production&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ? process.env.VUE_APP_BASE_API&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        : &lt;span class=&quot;string&quot;&gt;&quot;/api&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    axios({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${baseURL}&lt;/span&gt;/xxx/xxx/list`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        method: &lt;span class=&quot;string&quot;&gt;&quot;post&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        headers: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;X-Token&quot;&lt;/span&gt;: getToken()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 你的业务逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;error&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.$message.error(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定时获取接口信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;intervalData&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.timer = &lt;span class=&quot;built_in&quot;&gt;setInterval&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 离开页面时 不再调用接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;isInterval&quot;&lt;/span&gt;) === &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;clearInterval&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.timer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.getDataListSeconds();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="Element-UI" scheme="https://fe32.top/tags/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>关于JavaScript常用的工具函数汇总</title>
    <link href="https://fe32.top/articles/ut0927il/"/>
    <id>https://fe32.top/articles/ut0927il/</id>
    <published>2021-09-27T09:36:06.000Z</published>
    <updated>2023-06-27T14:39:00.682Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;div class=&quot;tip faa-horizontal animated&quot;&gt;&lt;p&gt;随着开发经验的积累，很多人会有自己的常用站点，一些网址收藏，自己造的轮子或者别人的轮子，工具函数库等等。&lt;br&gt;这里提供一些常用的工具函数，如果你也有一些觉得挺不错的库，欢迎在下方评论💓。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;格式化时间戳&quot;&gt;&lt;a href=&quot;#格式化时间戳&quot; class=&quot;headerlink&quot; title=&quot;格式化时间戳&quot;&gt;&lt;/a&gt;格式化时间戳&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;formatDateTimeStamp&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;date, fmt&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 格式化时间戳 : formatDateTimeStamp(new Date(time),&#39;yyyy-MM-dd hh:mm:ss&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;regexp&quot;&gt;/(y+)/&lt;/span&gt;.test(fmt)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt = fmt.replace(&lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;.$1, (date.getFullYear() + &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;).substr(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; - &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;.$1.length))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; o = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;M+&#39;&lt;/span&gt;: date.getMonth() + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;d+&#39;&lt;/span&gt;: date.getDate(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;h+&#39;&lt;/span&gt;: date.getHours(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;m+&#39;&lt;/span&gt;: date.getMinutes(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;s+&#39;&lt;/span&gt;: date.getSeconds()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; o) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`(&lt;span class=&quot;subst&quot;&gt;${k}&lt;/span&gt;)`&lt;/span&gt;).test(fmt)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; str = o[k] + &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fmt = fmt.replace(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;.$1, (&lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;.$1.length === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                str :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                padLeftZero(str))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fmt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;padLeftZero&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;str&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;00&#39;&lt;/span&gt; + str).substr(str.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parseTime&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;time, cFormat&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;.length === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; format = cFormat || &lt;span class=&quot;string&quot;&gt;&#39;{y}-{m}-{d} {h}:{i}:{s}&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; time === &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        date = time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; time === &lt;span class=&quot;string&quot;&gt;&#39;string&#39;&lt;/span&gt;) &amp;amp;&amp;amp; (&lt;span class=&quot;regexp&quot;&gt;/^[0-9]+$/&lt;/span&gt;.test(time))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(time)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; time === &lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;) &amp;amp;&amp;amp; (time.toString().length === &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time = time * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        date = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(time)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; formatObj = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y: date.getFullYear(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m: date.getMonth() + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        d: date.getDate(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        h: date.getHours(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i: date.getMinutes(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s: date.getSeconds(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a: date.getDay()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; time_str = format.replace(&lt;span class=&quot;regexp&quot;&gt;/{([ymdhisa])+}/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;result, key&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value = formatObj[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Note: getDay() returns 0 on Sunday&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (key === &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;日&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;一&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;二&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;三&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;四&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;五&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;六&#39;&lt;/span&gt;][value]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value.toString().padStart(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; time_str&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for example&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// formatDateTimeStamp(new Date(1632744272 * 1000),&#39;yyyy-MM-dd hh:mm:ss&#39;) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// parseTime(1632744272) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出 ---&amp;gt; 2021-09-27 20:04:32 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;时间格式化-几分钟前-几小时前&quot;&gt;&lt;a href=&quot;#时间格式化-几分钟前-几小时前&quot; class=&quot;headerlink&quot; title=&quot;时间格式化 几分钟前 几小时前&quot;&gt;&lt;/a&gt;时间格式化 几分钟前 几小时前&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{number}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;time&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;option&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;formatTime&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;time, option&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; + time).length === &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(time) * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time = +time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; d = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(time)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; now = &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; diff = (now - d) / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (diff &amp;lt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;刚刚&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (diff &amp;lt; &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// less 1 hour&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.ceil(diff / &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;分钟前&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (diff &amp;lt; &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.ceil(diff / &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;小时前&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (diff &amp;lt; &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;1天前&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; parseTime(time, option)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d.getMonth() +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;月&#39;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d.getDate() +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;日&#39;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d.getHours() +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;时&#39;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d.getMinutes() +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;分&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for example &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// formatTime(1632600000)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 测试时间 ---&amp;gt; 2021-09-27 20:25:30 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出 ---&amp;gt; 一天前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Show plural label if time is plural number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{number}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;time&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;label&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@return &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pluralize&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;time, label&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (time === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; time + label + &lt;span class=&quot;string&quot;&gt;&#39; ago&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; time + label + &lt;span class=&quot;string&quot;&gt;&#39;s&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39; ago&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{number}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;time&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timeAgo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;time&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; between = &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now() / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; - &lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;(time)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (between &amp;lt; &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pluralize(~~(between / &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39; minute&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (between &amp;lt; &lt;span class=&quot;number&quot;&gt;86400&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pluralize(~~(between / &lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39; hour&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pluralize(~~(between / &lt;span class=&quot;number&quot;&gt;86400&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39; day&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for example &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// timeAgo(1632200000)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 测试时间 ---&amp;gt; 2021-09-27 20:45:46 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出 ---&amp;gt; 6 days ago&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;url参数转为对象&quot;&gt;&lt;a href=&quot;#url参数转为对象&quot; class=&quot;headerlink&quot; title=&quot;url参数转为对象&quot;&gt;&lt;/a&gt;url参数转为对象&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;url&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{Object}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getQueryObject&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;url&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = url == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.href : url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; search = url.substring(url.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; obj = {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; reg = &lt;span class=&quot;regexp&quot;&gt;/([^?&amp;amp;=]+)=([^?&amp;amp;=]*)/g&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    search.replace(reg, &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;rs, $&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, $&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; name = &lt;span class=&quot;built_in&quot;&gt;decodeURIComponent&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; val = &lt;span class=&quot;built_in&quot;&gt;decodeURIComponent&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        val = &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;(val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj[name] = val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; obj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;url&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{Object}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;param2Obj&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;url&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; search = url.split(&lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!search) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;{&quot;&#39;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;decodeURIComponent&lt;/span&gt;(search)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .replace(&lt;span class=&quot;regexp&quot;&gt;/&quot;/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\\&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;amp;/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&quot;,&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .replace(&lt;span class=&quot;regexp&quot;&gt;/=/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&quot;:&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .replace(&lt;span class=&quot;regexp&quot;&gt;/\+/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;) +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;&quot;}&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for example &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// getQueryObject(&#39;http://xxxxxx/index?id=123&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// param2Obj(&#39;http://xxxxxx/index?id=123&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出 ---&amp;gt; {id: &quot;123&quot;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;对象序列化【对象转url参数】&quot;&gt;&lt;a href=&quot;#对象序列化【对象转url参数】&quot; class=&quot;headerlink&quot; title=&quot;对象序列化【对象转url参数】&quot;&gt;&lt;/a&gt;对象序列化【对象转url参数】&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Array}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;actual&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{Array}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cleanArray&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;actual&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; newArray = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; actual.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (actual[i]) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            newArray.push(actual[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; newArray&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Object}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;obj&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{Array}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;param&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!obj) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cleanArray(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(obj).map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;key&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj[key] === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(key) + &lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(obj[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ).join(&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stringfyQueryStr&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;{ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!obj) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; pairs = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; obj) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; value = obj[key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; value.length; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                pairs.push(&lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(key + &lt;span class=&quot;string&quot;&gt;&#39;[&#39;&lt;/span&gt; + i + &lt;span class=&quot;string&quot;&gt;&#39;]&#39;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(value[i]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pairs.push(&lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(key) + &lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(obj[key]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pairs.join(&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for example&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;param({&lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;1111&#39;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;sex&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;wwww&#39;&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringfyQueryStr({&lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;1111&#39;&lt;/span&gt;,&lt;span class=&quot;attr&quot;&gt;sex&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;wwww&#39;&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ---&amp;gt; 输出 name=1111&amp;amp;sex=wwww&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;本地存储&quot;&gt;&lt;a href=&quot;#本地存储&quot; class=&quot;headerlink&quot; title=&quot;本地存储&quot;&gt;&lt;/a&gt;本地存储&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; store = { &lt;span class=&quot;comment&quot;&gt;// 本地存储&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    set: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, value, day&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; d = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; time = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        day = (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(day) === &lt;span class=&quot;string&quot;&gt;&#39;undefined&#39;&lt;/span&gt; || !day) ? &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : day &lt;span class=&quot;comment&quot;&gt;// 时间,默认存储1天&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time = d.setHours(d.getHours() + (&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; * day)) &lt;span class=&quot;comment&quot;&gt;// 毫秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;localStorage&lt;/span&gt;.setItem(name, &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data: value,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            time: time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        })) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    get: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; data = &lt;span class=&quot;built_in&quot;&gt;localStorage&lt;/span&gt;.getItem(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!data) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; obj = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;().getTime() &amp;gt; obj.time) { &lt;span class=&quot;comment&quot;&gt;// 过期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;localStorage&lt;/span&gt;.removeItem(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; obj.data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clear: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 清空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name) { &lt;span class=&quot;comment&quot;&gt;// 删除键为name的缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;localStorage&lt;/span&gt;.removeItem(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; { &lt;span class=&quot;comment&quot;&gt;// 清空全部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;localStorage&lt;/span&gt;.clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;cookie操作&quot;&gt;&lt;a href=&quot;#cookie操作&quot; class=&quot;headerlink&quot; title=&quot;cookie操作&quot;&gt;&lt;/a&gt;cookie操作&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; cookie = { &lt;span class=&quot;comment&quot;&gt;// cookie操作【set，get，del】&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    set: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, value, day&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; oDate = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        oDate.setDate(oDate.getDate() + (day || &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.cookie = name + &lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt; + value + &lt;span class=&quot;string&quot;&gt;&#39;;expires=&#39;&lt;/span&gt; + oDate + &lt;span class=&quot;string&quot;&gt;&quot;; path=/;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    get: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; str = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; arr = str.split(&lt;span class=&quot;string&quot;&gt;&#39;; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; newArr = arr[i].split(&lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newArr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] === name) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; newArr[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    del: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;.set(name, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;数字格式化单位&quot;&gt;&lt;a href=&quot;#数字格式化单位&quot; class=&quot;headerlink&quot; title=&quot;数字格式化单位&quot;&gt;&lt;/a&gt;数字格式化单位&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Number formatting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * like 10000 =&amp;gt; 10k&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{number}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;num&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{number}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;digits&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;numberFormatter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num, digits&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; si = [{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value: &lt;span class=&quot;number&quot;&gt;1E18&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            symbol: &lt;span class=&quot;string&quot;&gt;&#39;E&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value: &lt;span class=&quot;number&quot;&gt;1E15&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            symbol: &lt;span class=&quot;string&quot;&gt;&#39;P&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value: &lt;span class=&quot;number&quot;&gt;1E12&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            symbol: &lt;span class=&quot;string&quot;&gt;&#39;T&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value: &lt;span class=&quot;number&quot;&gt;1E9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            symbol: &lt;span class=&quot;string&quot;&gt;&#39;G&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value: &lt;span class=&quot;number&quot;&gt;1E6&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            symbol: &lt;span class=&quot;string&quot;&gt;&#39;M&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value: &lt;span class=&quot;number&quot;&gt;1E3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            symbol: &lt;span class=&quot;string&quot;&gt;&#39;k&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; si.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num &amp;gt;= si[i].value) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (num / si[i].value).toFixed(digits).replace(&lt;span class=&quot;regexp&quot;&gt;/\.0+$|(\.[0-9]*[1-9])0+$/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;$1&#39;&lt;/span&gt;) + si[i].symbol&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; num.toString()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;数字千位过滤&quot;&gt;&lt;a href=&quot;#数字千位过滤&quot; class=&quot;headerlink&quot; title=&quot;数字千位过滤&quot;&gt;&lt;/a&gt;数字千位过滤&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 10000 =&amp;gt; &quot;10,000&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{number}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;num&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toThousandFilter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; targetNum = (num || &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).toString()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (targetNum.includes(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; arr = num.split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; arr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].replace(&lt;span class=&quot;regexp&quot;&gt;/^-?\d+/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;m&lt;/span&gt; =&amp;gt;&lt;/span&gt; m.replace(&lt;span class=&quot;regexp&quot;&gt;/(?=(?!\b)(\d{3})+$)/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)) + &lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt; + arr[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; targetNum.replace(&lt;span class=&quot;regexp&quot;&gt;/^-?\d+/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;m&lt;/span&gt; =&amp;gt;&lt;/span&gt; m.replace(&lt;span class=&quot;regexp&quot;&gt;/(?=(?!\b)(\d{3})+$)/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;过滤成版本号&quot;&gt;&lt;a href=&quot;#过滤成版本号&quot; class=&quot;headerlink&quot; title=&quot;过滤成版本号&quot;&gt;&lt;/a&gt;过滤成版本号&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * version filter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 50397188 =&amp;gt; 3.1.0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{number}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;versions&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;versionFilter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;versions&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; v0 = (versions &amp;amp; &lt;span class=&quot;number&quot;&gt;0xff000000&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; v1 = (versions &amp;amp; &lt;span class=&quot;number&quot;&gt;0xff0000&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; v2 = (versions &amp;amp; &lt;span class=&quot;number&quot;&gt;0xff00&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; v3 = versions &amp;amp; &lt;span class=&quot;number&quot;&gt;0xff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${v0}&lt;/span&gt;.&lt;span class=&quot;subst&quot;&gt;${v1}&lt;/span&gt;.&lt;span class=&quot;subst&quot;&gt;${v2}&lt;/span&gt;.&lt;span class=&quot;subst&quot;&gt;${v3}&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;首字母大写&quot;&gt;&lt;a href=&quot;#首字母大写&quot; class=&quot;headerlink&quot; title=&quot;首字母大写&quot;&gt;&lt;/a&gt;首字母大写&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Upper case first char&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{String}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;uppercaseFirst&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;string&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; string.charAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).toUpperCase() + string.slice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;class骚操作&quot;&gt;&lt;a href=&quot;#class骚操作&quot; class=&quot;headerlink&quot; title=&quot;class骚操作&quot;&gt;&lt;/a&gt;class骚操作&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Check if an element has a class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{HTMLElement}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;elm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;cls&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{boolean}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hasClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ele, cls&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; !!ele.className.match(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;(\\s|^)&#39;&lt;/span&gt; + cls + &lt;span class=&quot;string&quot;&gt;&#39;(\\s|$)&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Add class to element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{HTMLElement}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;elm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;cls&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ele, cls&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!hasClass(ele, cls)) ele.className += &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; + cls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Remove class from element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{HTMLElement}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;elm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;cls&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ele, cls&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hasClass(ele, cls)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; reg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;(\\s|^)&#39;&lt;/span&gt; + cls + &lt;span class=&quot;string&quot;&gt;&#39;(\\s|$)&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ele.className = ele.className.replace(reg, &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;文本复制功能&quot;&gt;&lt;a href=&quot;#文本复制功能&quot; class=&quot;headerlink&quot; title=&quot;文本复制功能&quot;&gt;&lt;/a&gt;文本复制功能&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; copyTxt = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;text, fn&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 复制功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.execCommand !== &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;复制失败，请长按复制&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dom = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;textarea&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dom.value = text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dom.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;display: block;width: 1px;height: 1px;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(dom)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dom.select()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.execCommand(&lt;span class=&quot;string&quot;&gt;&#39;copy&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.removeChild(dom)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;复制成功&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; fn === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt; &amp;amp;&amp;amp; fn()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createRange !== &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;复制失败，请长按复制&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; range = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createRange()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; div = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    div.innerhtml = text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    div.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;height: 1px;fontSize: 1px;overflow: hidden;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(div)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    range.selectNode(div)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; selection = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getSelection()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(selection)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (selection.rangeCount &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selection.removeAllRanges()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    selection.addRange(range)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.execCommand(&lt;span class=&quot;string&quot;&gt;&#39;copy&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; fn === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt; &amp;amp;&amp;amp; fn()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;复制成功&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;判断是否是一个数组&quot;&gt;&lt;a href=&quot;#判断是否是一个数组&quot; class=&quot;headerlink&quot; title=&quot;判断是否是一个数组&quot;&gt;&lt;/a&gt;判断是否是一个数组&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; castArray = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;value&lt;/span&gt; =&amp;gt;&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.isArray(value) ? value : [value])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; castArray = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;=&amp;gt;&lt;/span&gt;  &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype.toString.call(arr) === &lt;span class=&quot;string&quot;&gt;&#39;[object Array]&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;判断是否是一个空数组&quot;&gt;&lt;a href=&quot;#判断是否是一个空数组&quot; class=&quot;headerlink&quot; title=&quot;判断是否是一个空数组&quot;&gt;&lt;/a&gt;判断是否是一个空数组&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isEmpty = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; !&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.isArray(arr) || arr.length === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for example&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// isEmpty([]); // true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// isEmpty([1, 2, 3]); // false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;克隆一个数组&quot;&gt;&lt;a href=&quot;#克隆一个数组&quot; class=&quot;headerlink&quot; title=&quot;克隆一个数组&quot;&gt;&lt;/a&gt;克隆一个数组&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Array}&lt;/span&gt; &lt;/span&gt;arr &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; clone = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.slice(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; clone = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; [...arr];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; clone = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.from(arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; clone = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.map(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;x&lt;/span&gt;) =&amp;gt;&lt;/span&gt; x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; clone = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(&lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(arr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; clone = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.concat([]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;数组去重&quot;&gt;&lt;a href=&quot;#数组去重&quot; class=&quot;headerlink&quot; title=&quot;数组去重&quot;&gt;&lt;/a&gt;数组去重&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Array}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;arr&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{Array}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uniqueArray = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.from(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt;(arr)) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uniqueArray = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.filter(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;el, i, array&lt;/span&gt;) =&amp;gt;&lt;/span&gt; array.indexOf(el) === i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uniqueArray = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;arr&lt;/span&gt;) =&amp;gt;&lt;/span&gt; arr.reduce(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;acc, el&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (acc.includes(el) ? acc : [...acc, el]), [])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;是否为PC端&quot;&gt;&lt;a href=&quot;#是否为PC端&quot; class=&quot;headerlink&quot; title=&quot;是否为PC端&quot;&gt;&lt;/a&gt;是否为PC端&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isPC = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 是否为PC端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; userAgentInfo = navigator.userAgent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; Agents = [&lt;span class=&quot;string&quot;&gt;&#39;Android&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;iPhone&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;SymbianOS&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Windows Phone&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;iPad&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;iPod&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; flag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; v = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; v &amp;lt; Agents.length; v++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (userAgentInfo.indexOf(Agents[v]) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flag = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; flag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;判断是否为微信&quot;&gt;&lt;a href=&quot;#判断是否为微信&quot; class=&quot;headerlink&quot; title=&quot;判断是否为微信&quot;&gt;&lt;/a&gt;判断是否为微信&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isWx = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; { &lt;span class=&quot;comment&quot;&gt;// 判断是否为微信&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ua = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.navigator.userAgent.toLowerCase()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ua.match(&lt;span class=&quot;regexp&quot;&gt;/MicroMessenger/i&lt;/span&gt;) === &lt;span class=&quot;string&quot;&gt;&#39;micromessenger&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;设备判断：android、ios、web&quot;&gt;&lt;a href=&quot;#设备判断：android、ios、web&quot; class=&quot;headerlink&quot; title=&quot;设备判断：android、ios、web&quot;&gt;&lt;/a&gt;设备判断：android、ios、web&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; isDevice = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 判断是android还是ios还是web&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ua = navigator.userAgent.toLowerCase()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ua.match(&lt;span class=&quot;regexp&quot;&gt;/iPhone\sOS/i&lt;/span&gt;) === &lt;span class=&quot;string&quot;&gt;&#39;iphone os&#39;&lt;/span&gt; || ua.match(&lt;span class=&quot;regexp&quot;&gt;/iPad/i&lt;/span&gt;) === &lt;span class=&quot;string&quot;&gt;&#39;ipad&#39;&lt;/span&gt;) { &lt;span class=&quot;comment&quot;&gt;// ios&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;iOS&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ua.match(&lt;span class=&quot;regexp&quot;&gt;/Android/i&lt;/span&gt;) === &lt;span class=&quot;string&quot;&gt;&#39;android&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Android&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Web&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;常见正则校验&quot;&gt;&lt;a href=&quot;#常见正则校验&quot; class=&quot;headerlink&quot; title=&quot;常见正则校验&quot;&gt;&lt;/a&gt;常见正则校验&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*正则匹配*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; normalReg = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;str, type&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (type) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;phone&#39;&lt;/span&gt;:   &lt;span class=&quot;comment&quot;&gt;//手机号码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^1[3|4|5|6|7|8|9][0-9]{9}$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;tel&#39;&lt;/span&gt;:     &lt;span class=&quot;comment&quot;&gt;//座机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^(0\d{2,3}-\d{7,8})(-\d{1,4})?$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;card&#39;&lt;/span&gt;:    &lt;span class=&quot;comment&quot;&gt;//身份证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;pwd&#39;&lt;/span&gt;:     &lt;span class=&quot;comment&quot;&gt;//密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[a-zA-Z]\w{5,17}$/&lt;/span&gt;.test(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;postal&#39;&lt;/span&gt;:  &lt;span class=&quot;comment&quot;&gt;//邮政编码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/[1-9]\d{5}(?!\d)/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;QQ&#39;&lt;/span&gt;:      &lt;span class=&quot;comment&quot;&gt;//QQ号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[1-9][0-9]{4,9}$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;email&#39;&lt;/span&gt;:   &lt;span class=&quot;comment&quot;&gt;//邮箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;money&#39;&lt;/span&gt;:   &lt;span class=&quot;comment&quot;&gt;//金额(小数点2位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^\d*(?:\.\d{0,2})?$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;URL&#39;&lt;/span&gt;:     &lt;span class=&quot;comment&quot;&gt;//网址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;amp;:/~\+#]*[\w\-\@?^=%&amp;amp;/~\+#])?/&lt;/span&gt;.test(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;IP&#39;&lt;/span&gt;:      &lt;span class=&quot;comment&quot;&gt;//IP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;date&#39;&lt;/span&gt;:    &lt;span class=&quot;comment&quot;&gt;//日期时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^(\d{4})\-(\d{2})\-(\d{2}) (\d{2})(?:\:\d{2}|:(\d{2}):(\d{2}))$/&lt;/span&gt;.test(str) || &lt;span class=&quot;regexp&quot;&gt;/^(\d{4})\-(\d{2})\-(\d{2})$/&lt;/span&gt;.test(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;number&#39;&lt;/span&gt;:  &lt;span class=&quot;comment&quot;&gt;//数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[0-9]$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;positiveInteger&#39;&lt;/span&gt;:  &lt;span class=&quot;comment&quot;&gt;//正整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[1-9]\d*$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;price&#39;&lt;/span&gt;:  &lt;span class=&quot;comment&quot;&gt;//价格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/(^[1-9]\d*(\.\d{1,2})?$)|(^0(\.\d{1,2})?$)/&lt;/span&gt;.test(str);&lt;span class=&quot;comment&quot;&gt;//价格非0则去掉&#39;?&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;english&#39;&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;//英文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[a-zA-Z]+$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;chinese&#39;&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;//中文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[\u4E00-\u9FA5]+$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;lower&#39;&lt;/span&gt;:   &lt;span class=&quot;comment&quot;&gt;//小写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[a-z]+$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;upper&#39;&lt;/span&gt;:   &lt;span class=&quot;comment&quot;&gt;//大写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/^[A-Z]+$/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;HTML&#39;&lt;/span&gt;:    &lt;span class=&quot;comment&quot;&gt;//HTML标记&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;regexp&quot;&gt;/&amp;lt;(&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;|[^&#39;&quot;&amp;gt;])*&amp;gt;/&lt;/span&gt;.test(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;去除字符串空格&quot;&gt;&lt;a href=&quot;#去除字符串空格&quot; class=&quot;headerlink&quot; title=&quot;去除字符串空格&quot;&gt;&lt;/a&gt;去除字符串空格&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{str}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;str&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Number}&lt;/span&gt; &lt;/span&gt;type 1 -&amp;gt; 所有空格  2 -&amp;gt; 前后空格  3 -&amp;gt; 前空格 4 -&amp;gt; 后空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{String}&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; trim = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;str, type&lt;/span&gt;) &lt;/span&gt;{ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type = type || &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (type) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str.replace(&lt;span class=&quot;regexp&quot;&gt;/\s+/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str.replace(&lt;span class=&quot;regexp&quot;&gt;/(^\s*)|(\s*$)/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str.replace(&lt;span class=&quot;regexp&quot;&gt;/(^\s*)/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str.replace(&lt;span class=&quot;regexp&quot;&gt;/(\s*$)/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;过滤html代码&quot;&gt;&lt;a href=&quot;#过滤html代码&quot; class=&quot;headerlink&quot; title=&quot;过滤html代码&quot;&gt;&lt;/a&gt;过滤html代码&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; filterTag = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;str&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 过滤html代码(把&amp;lt;&amp;gt;转换)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    str = str.replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;amp;/ig&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    str = str.replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;lt;/ig&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    str = str.replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;gt;/ig&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&amp;gt;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    str = str.replace(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;生成随机数范围&quot;&gt;&lt;a href=&quot;#生成随机数范围&quot; class=&quot;headerlink&quot; title=&quot;生成随机数范围&quot;&gt;&lt;/a&gt;生成随机数范围&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; random = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;min, max&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 生成随机数范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;.length === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(min + &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * ((max + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) - min))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;判断图片加载完成&quot;&gt;&lt;a href=&quot;#判断图片加载完成&quot; class=&quot;headerlink&quot; title=&quot;判断图片加载完成&quot;&gt;&lt;/a&gt;判断图片加载完成&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgLoadAll = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arr, callback&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 图片加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; arrImg = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; img = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        img.src = arr[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        img.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            arrImg.push(&lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (arrImg.length == arr.length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                callback &amp;amp;&amp;amp; callback()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;光标所在位置插入字符&quot;&gt;&lt;a href=&quot;#光标所在位置插入字符&quot; class=&quot;headerlink&quot; title=&quot;光标所在位置插入字符&quot;&gt;&lt;/a&gt;光标所在位置插入字符&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; insertAtCursor = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;dom, val&lt;/span&gt;) &lt;/span&gt;{ &lt;span class=&quot;comment&quot;&gt;// 光标所在位置插入字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.selection) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dom.focus()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sel = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.selection.createRange()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sel.text = val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sel.select()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dom.selectionStart || dom.selectionStart == &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; startPos = dom.selectionStart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; endPos = dom.selectionEnd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; restoreTop = dom.scrollTop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dom.value = dom.value.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, startPos) + val + dom.value.substring(endPos, dom.value.length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (restoreTop &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dom.scrollTop = restoreTop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dom.focus()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dom.selectionStart = startPos + val.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dom.selectionEnd = startPos + val.length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dom.value += val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dom.focus()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;图片地址转base64&quot;&gt;&lt;a href=&quot;#图片地址转base64&quot; class=&quot;headerlink&quot; title=&quot;图片地址转base64&quot;&gt;&lt;/a&gt;图片地址转base64&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; getBase64 = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;img&lt;/span&gt;) &lt;/span&gt;{ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//传入图片路径，返回base64，使用getBase64(url).then(function(base64){},function(err){}); &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; getBase64Image = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;img, width, height&lt;/span&gt;) &lt;/span&gt;{ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//width、height调用时传入具体像素值，控制大小,不传则默认图像大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; canvas = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        canvas.width = width ? width : img.width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        canvas.height = height ? height : img.height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; ctx = canvas.getContext(&lt;span class=&quot;string&quot;&gt;&quot;2d&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ctx.drawImage(img, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, canvas.width, canvas.height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; dataURL = canvas.toDataURL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; image = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.crossOrigin = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image.src = img;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; deferred = $.Deferred();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (img) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        image.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deferred.resolve(getBase64Image(image));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; deferred.promise();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;base64图片下载功能&quot;&gt;&lt;a href=&quot;#base64图片下载功能&quot; class=&quot;headerlink&quot; title=&quot;base64图片下载功能&quot;&gt;&lt;/a&gt;base64图片下载功能&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; downloadFile  = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;base64, fileName&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; base64ToBlob = &lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;code&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; parts = code.split(&lt;span class=&quot;string&quot;&gt;&#39;;base64,&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; contentType = parts[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;:&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; raw = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.atob(parts[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; rawLength = raw.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; uInt8Array = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Uint8Array&lt;/span&gt;(rawLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; rawLength; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            uInt8Array[i] = raw.charCodeAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Blob([uInt8Array], {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            type: contentType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; aLink = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; blob = base64ToBlob(base64); &lt;span class=&quot;comment&quot;&gt;//new Blob([content]);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; evt = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createEvent(&lt;span class=&quot;string&quot;&gt;&quot;HTMLEvents&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    evt.initEvent(&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//initEvent不加后两个参数在FF下会报错  事件类型，是否冒泡，是否阻止浏览器的默认行为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aLink.download = fileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aLink.href = URL.createObjectURL(blob);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aLink.click();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;浏览器是否支持webP格式图片&quot;&gt;&lt;a href=&quot;#浏览器是否支持webP格式图片&quot; class=&quot;headerlink&quot; title=&quot;浏览器是否支持webP格式图片&quot;&gt;&lt;/a&gt;浏览器是否支持webP格式图片&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; webPBool = &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; !![].map &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;).toDataURL(&lt;span class=&quot;string&quot;&gt;&#39;image/webp&#39;&lt;/span&gt;).indexOf(&lt;span class=&quot;string&quot;&gt;&#39;data:image/webp&#39;&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;H5软键盘缩回、弹起回调&quot;&gt;&lt;a href=&quot;#H5软键盘缩回、弹起回调&quot; class=&quot;headerlink&quot; title=&quot;H5软键盘缩回、弹起回调&quot;&gt;&lt;/a&gt;H5软键盘缩回、弹起回调&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 当软件键盘弹起会改变当前 window.innerHeight&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;监听这个值变化 [downCb 当软键盘弹起后，缩回的回调,upCb 当软键盘弹起的回调] */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;downCb, upCb&lt;/span&gt;) &lt;/span&gt;{ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; clientHeight = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    downCb = &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; downCb === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt; ? downCb : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upCb = &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; upCb === &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt; ? upCb : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;resize&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; height = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (height === clientHeight) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            downCb()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (height &amp;lt; clientHeight) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            upCb()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;对象属性剔除&quot;&gt;&lt;a href=&quot;#对象属性剔除&quot; class=&quot;headerlink&quot; title=&quot;对象属性剔除&quot;&gt;&lt;/a&gt;对象属性剔除&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{object}&lt;/span&gt; &lt;/span&gt;object &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{string[]}&lt;/span&gt; &lt;/span&gt;props &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;* &lt;span class=&quot;doctag&quot;&gt;@return &lt;span class=&quot;type&quot;&gt;{object}&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;omit&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;object, props=[]&lt;/span&gt;)&lt;/span&gt;{  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; res = {}  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(object).forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;key&lt;/span&gt;=&amp;gt;&lt;/span&gt;{    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(props.includes(key) === &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;){      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res[key] = &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; object[key] === &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt; &amp;amp;&amp;amp; object[key] !== &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; ? jsON.parse(jsON.stringify(object[key])) : object[key]    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for example&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; data = {  &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;12345&#39;&lt;/span&gt;,  &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;男&#39;&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;omit(data, [&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;]) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// data ---&amp;gt; {title: &#39;xxx&#39;, name: &#39;男&#39;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;深拷贝&quot;&gt;&lt;a href=&quot;#深拷贝&quot; class=&quot;headerlink&quot; title=&quot;深拷贝&quot;&gt;&lt;/a&gt;深拷贝&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * This is just a simple version of deep copy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * Has a lot of edge cases bug&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * If you want to use a perfect deep copy, use lodash&#39;s _.cloneDeep&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Object}&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;source&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@returns &lt;span class=&quot;type&quot;&gt;{Object}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deepClone&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;source&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!source &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; source !== &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;error arguments&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;deepClone&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; targetObj = source.constructor === &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt; ? [] : {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(source).forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;keys&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source[keys] &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; source[keys] === &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            targetObj[keys] = deepClone(source[keys])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            targetObj[keys] = source[keys]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; targetObj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;函数防抖&quot;&gt;&lt;a href=&quot;#函数防抖&quot; class=&quot;headerlink&quot; title=&quot;函数防抖&quot;&gt;&lt;/a&gt;函数防抖&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;debounce&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;func, wait, immediate&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; timeout, args, context, timestamp, result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; later = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 据上一次触发时间间隔&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; last = +&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;() - timestamp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 上次被包装函数被调用时间间隔 last 小于设定时间间隔 wait&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (last &amp;lt; wait &amp;amp;&amp;amp; last &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            timeout = &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(later, wait - last)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            timeout = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!immediate) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result = func.apply(context, args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!timeout) context = args = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;...args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timestamp = +&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; callNow = immediate &amp;amp;&amp;amp; !timeout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 如果延时不存在，重新设定延时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!timeout) timeout = &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(later, wait)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (callNow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = func.apply(context, args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context = args = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;函数节流&quot;&gt;&lt;a href=&quot;#函数节流&quot; class=&quot;headerlink&quot; title=&quot;函数节流&quot;&gt;&lt;/a&gt;函数节流&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Function}&lt;/span&gt; &lt;/span&gt;func 目标函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Number}&lt;/span&gt; &lt;/span&gt;wait  延迟执行毫秒数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param &lt;span class=&quot;type&quot;&gt;{Number}&lt;/span&gt; &lt;/span&gt;type  type 1 表时间戳版，2 表定时器版&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;func, wait ,type&lt;/span&gt;) &lt;/span&gt;{ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(type===&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; previous = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(type===&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; timeout;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; context = &lt;span class=&quot;built_in&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; args = &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(type===&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; now = &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (now - previous &amp;gt; wait) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                func.apply(context, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                previous = now;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(type===&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!timeout) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                timeout = &lt;span class=&quot;built_in&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;() =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    timeout = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    func.apply(context, args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }, wait)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;推荐阅读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://htmldom.dev/&quot;&gt;Manage HTML DOM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://csslayout.io/&quot;&gt;CSS Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://1loc.dev/&quot;&gt;Favorite JavaScript</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://fe32.top/tags/JavaScript/"/>
    
    <category term="工具函数" scheme="https://fe32.top/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>CSS 实现新拟态(Neumorphism) UI 风格</title>
    <link href="https://fe32.top/articles/np2021sm/"/>
    <id>https://fe32.top/articles/np2021sm/</id>
    <published>2021-09-23T12:12:37.000Z</published>
    <updated>2023-06-27T14:39:00.836Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;新拟态是一种图形样式，其原理是为界面的UI元素赋予真实感。&lt;/p&gt;
&lt;p&gt;原生名词有几个叫法，Neumorphism / soft ui，翻译过来是新拟态或者是软ui。国内的翻译叫，新拟物风格。Neumorphism，是New +Skeuomorphism的组合词。按照我个人的通俗理解，就是将界面的一部分凸起来，另一部分凹下去，形成的一种错落有致的拟物风格。代表作是乌克兰设计师 Alexander Plyuto 在各平台发布的新作品「Skeuomorph Mobile Banking」&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/09/23/fc95469eba5e8.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;新拟态 UI 风格与扁平、投影风格的对比&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/09/23/c5512f7e684f4.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从上面这张对比图可以看出，扁平风格就像是一张纸贴在墙面上，投影风格像是浮在半空中，而新拟态风格则像是墙面上直接凸起了一块。要实现这种风格，精髓在于一个白色的阴影+一个常规阴影。一个示例如下图所示：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/09/23/6f8cef3022d51.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Neumorphism css 在线生成器地址：&lt;a href=&quot;https://neumorphism.io/&quot;&gt;https://neumorphism.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前端实现的效果：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/09/23/baff5338c18b9.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./font_ue8tdlm62pf/iconfont.css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width: 1018px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      margin: 0 auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: 660px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#e6eef4&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.top&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flex-direction: row;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.top-left&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width: 400px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* height: 400px; */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      float: left;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* background-color: rgb(92, 89, 89); */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      margin: 50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      border-radius: 39px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#e6eef4&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;box-shadow&lt;/span&gt;: 33&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 33&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 67&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#cad1d7&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;-33px&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-33px&lt;/span&gt; 67&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d3&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d4&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width: 144px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: 144px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      border-radius: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      background-color: red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      margin: 24px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      border-radius: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#e6eef4&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;inset&lt;/span&gt; 14&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 14&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 22&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#cfd6dc&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;inset&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-14px&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-14px&lt;/span&gt; 22&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#fdffff&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.aircraft&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font-size: 80px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      justify-content: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      align-items: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* margin-top: 10%; */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      padding-top: 30px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#4d8af0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.top-right&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width: 400px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: 400px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      float: right;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      background-color: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      margin: 50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      border-radius: 39px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#e6eef4&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;box-shadow&lt;/span&gt;: 33&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 33&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 67&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#cad1d7&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;-33px&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-33px&lt;/span&gt; 67&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d21&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d31&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d41&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      width: 88px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: 88px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      border-radius: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      background-color: red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      margin: 21px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      border-radius: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#e6eef4&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;box-shadow&lt;/span&gt;: 6&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 6&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 12&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#cad1d7&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;        &lt;span class=&quot;selector-tag&quot;&gt;-6px&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-6px&lt;/span&gt; 12&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; &lt;span class=&quot;selector-id&quot;&gt;#ffffff&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.r-aircraft&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font-size: 40px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      display: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      justify-content: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      align-items: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* margin-top: 10%; */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      padding-top: 24px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#4d8af0&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      text-align: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font-size: 24px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;      &lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#576f87&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      font-weight: bold;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;top&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;top-left&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;d1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;d2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;d3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;d4&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;top-right&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;音乐&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;d21&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont r-aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;d31&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont r-aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;d41&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;iconfont r-aircraft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新拟态UI风格Css在线生成：&lt;a href=&quot;http://www.fly63.com/tool/neumorphism/&quot;&gt;http://www.fly63.com/tool/neumorphism/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/09/23/261f177f88ad8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;br&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;本文摘自：&lt;a href=&quot;http://www.fly63.com/article/detial/10541&quot;&gt;CSS 实现新拟态(Neumorphism) UI</summary>
        
      
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
    <category term="Neumorphism" scheme="https://fe32.top/tags/Neumorphism/"/>
    
  </entry>
  
  <entry>
    <title>Uni-App中websocket的使用 断开重连、心跳机制</title>
    <link href="https://fe32.top/articles/soc145ket/"/>
    <id>https://fe32.top/articles/soc145ket/</id>
    <published>2021-09-10T11:51:31.000Z</published>
    <updated>2023-06-27T14:39:00.735Z</updated>
    
    
    <summary type="html">心跳机制，也就是客户端间隔一段时间就向服务器发送一条消息，如果服务器收到消息就回复一条信息过来，如果一定时间内没有回复，则表示已经与服务器断开连接了，这个时候就需要进行重连。</summary>
    
    
    
    <category term="uni-app" scheme="https://fe32.top/categories/uni-app/"/>
    
    
    <category term="uni-app" scheme="https://fe32.top/tags/uni-app/"/>
    
    <category term="webSocket" scheme="https://fe32.top/tags/webSocket/"/>
    
  </entry>
  
  <entry>
    <title>正则大全</title>
    <link href="https://fe32.top/articles/reg384nt/"/>
    <id>https://fe32.top/articles/reg384nt/</id>
    <published>2021-09-03T13:30:20.000Z</published>
    <updated>2023-06-27T14:39:00.630Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;div class=&quot;tip cogs faa-horizontal animated&quot;&gt;&lt;p&gt;这里介绍一些常用正则，也可以安装正则插件，比如 VS code中的 any-rule 插件。安装后 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; +&lt;kbd&gt;P&lt;/kbd&gt; , 输入关键字搜索就行，比如 手机 车牌号等等。&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;RegExp&quot;&gt;&lt;a href=&quot;#RegExp&quot; class=&quot;headerlink&quot; title=&quot;RegExp&quot;&gt;&lt;/a&gt;RegExp&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;火车车次&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[GCDZTSPKXLY1-9]\d{1,4}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;手机机身码(IMEI)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\d{15,17}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;必须带端口号的网址(或ip)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^((ht|f)tps?:\/\/)?[\w-]+(\.[\w-]+)+:\d{1,5}\/?$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;网址(url,支持端口和”?+参数”和”#+参数)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(((ht|f)tps?):\/\/)?[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;amp;:/~+#-]*[\w@?^=%&amp;amp;/~+#-])?$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;统一社会信用代码&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[0-9A-HJ-NPQRTUWXY]{2}\d{6}[0-9A-HJ-NPQRTUWXY]{10}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;统一社会信用代码(宽松匹配)(15位/18位/20位数字/字母)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(([0-9A-Za-z]{15})|([0-9A-Za-z]{18})|([0-9A-Za-z]{20}))$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;迅雷链接&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^thunderx?:\/\/[a-zA-Z\d]+=$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;ed2k链接(宽松匹配)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^ed2k:\/\/\|file\|.+\|\/$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt; 磁力链接(宽松匹配)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^magnet:\?xt=urn:btih:[0-9a-fA-F]{40,}.*$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;子网掩码&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:\d{1,2}|1\d\d|2[0-4]\d|25[0-5])(?:\.(?:\d{1,2}|1\d\d|2[0-4]\d|25[0-5])){3}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;linux”隐藏文件”路径&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\/(?:[^/]+\/)*\.[^/]*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;linux文件夹路径&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\/(?:[^/]+\/)*$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;linux文件路径&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\/(?:[^/]+\/)*[^/]+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;window”文件夹”路径&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-zA-Z]:\\(?:\w+\\?)*$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;window下”文件”路径&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-zA-Z]:\\(?:\w+\\)*\w+\.\w+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;股票代码(A股)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(s[hz]|S[HZ])(000[\d]{3}|002[\d]{3}|300[\d]{3}|600[\d]{3}|60[\d]{4})$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;大于等于0, 小于等于150, 支持小数位出现5, 如145.5, 用于判断考卷分数&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^150$|^(?:\d|[1-9]\d|1[0-4]\d)(?:\.5)?$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;html注释&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^&amp;lt;!--[\s\S]*?--&amp;gt;$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;md5格式(32位)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^([a-f\d]{32}|[A-F\d]{32})$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;GUID/UUID&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-f\d]{4}(?:[a-f\d]{4}-){4}[a-f\d]{12}$/i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;版本号(version)格式必须为X.Y.Z&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\d+(?:\.\d+){2}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;视频(video)链接地址（视频格式可按需增删）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^https?:\/\/(.+\/)+.+(\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4))$/i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;图片(image)链接地址（图片格式可按需增删）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^https?:\/\/(.+\/)+.+(\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;24小时制时间（HH:mm:ss）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;12小时制时间（hh:mm:ss）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:1[0-2]|0?[1-9]):[0-5]\d:[0-5]\d$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;base64格式&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\s*data:(?:[a-z]+\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?:;base64)?,([a-z0-9!$&amp;amp;&#39;,()*+;=\-._~:@/?%\s]*?)\s*$/i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;数字/货币金额（支持负数、千分位分隔符）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^-?\d+(,\d{3})*(\.\d{1,2})?$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;数字/货币金额 (只支持正数、不支持校验千分位分隔符)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/(?:^[1-9]([0-9]+)?(?:\.[0-9]{1,2})?$)|(?:^(?:0)$)|(?:^[0-9]\.[0-9](?:[0-9])?$)/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;银行卡号（10到30位, 覆盖对公/私账户, 参考&lt;a href=&quot;https://pay.weixin.qq.com/wiki/doc/api/xiaowei.php?chapter=22_1&quot;&gt;微信支付&lt;/a&gt;）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[1-9]\d{9,29}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;中文姓名&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:[\u4e00-\u9fa5·]{2,16})$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;英文姓名&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/(^[a-zA-Z][a-zA-Z\s]{0,20}[a-zA-Z]$)/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;车牌号(新能源)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z](?:((\d{5}[A-HJK])|([A-HJK][A-HJ-NP-Z0-9][0-9]{4}))|[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳])$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;车牌号(非新能源)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;车牌号(新能源+非新能源)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9]{4,5}[A-HJ-NP-Z0-9挂学警港澳]$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:(?:\+|00)86)?1(?:(?:3[\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\d])|(?:9[189]))\d{8}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:(?:\+|00)86)?1[3-9]\d{9}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;手机号(mobile phone)中国(最宽松), 只要是1开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:(?:\+|00)86)?1\d{10}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;date(日期)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\d{1,4}(-)(1[0-2]|0?[1-9])\1(0?[1-9]|[1-2]\d|30|31)$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;email(邮箱)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(([^&amp;lt;&amp;gt;()[\]\\.,;:\s@&quot;]+(\.[^&amp;lt;&amp;gt;()[\]\\.,;:\s@&quot;]+)*)|(&quot;.+&quot;))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;座机(tel phone)电话(国内),如: 0341-86091234&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:(?:\d{3}-)?\d{8}|^(?:\d{4}-)?\d{7,8})(?:-\d+)?$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;身份证号(1代,15位数字)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[1-9]\d{7}(?:0\d|10|11|12)(?:0[1-9]|[1-2][\d]|30|31)\d{3}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[1-9]\d{5}(?:18|19|20)\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\d|30|31)\d{3}[\dXx]$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;身份证号, 支持1/2代(15位/18位数字)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/(^\d{8}(0\d|10|11|12)([0-2]\d|30|31)\d{3}$)|(^\d{6}(18|19|20)\d{2}(0[1-9]|10|11|12)([0-2]\d|30|31)\d{3}(\d|X|x)$)/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;护照（包含香港、澳门）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/(^[EeKkGgDdSsPpHh]\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\d{7}$)/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线组合&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-zA-Z]\w{4,15}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;中文/汉字&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:[\u3400-\u4DB5\u4E00-\u9FEA\uFA0E\uFA0F\uFA11\uFA13\uFA14\uFA1F\uFA21\uFA23\uFA24\uFA27-\uFA29]|[\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0])+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;小数&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\d+\.\d+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;数字&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\d{1,}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;html标签(宽松匹配)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/&amp;lt;(\w+)[^&amp;gt;]*&amp;gt;(.*?&amp;lt;\/\1&amp;gt;)?/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;qq号格式正确&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[1-9][0-9]{4,10}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;数字和字母组成&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[A-Za-z0-9]+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;英文字母&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-zA-Z]+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;小写英文字母组成&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-z]+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;大写英文字母&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[A-Z]+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^\S*(?=\S{6,})(?=\S*\d)(?=\S*[A-Z])(?=\S*[a-z])(?=\S*[!@#$%^&amp;amp;*? ])\S*$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;用户名校验，4到16位（字母，数字，下划线，减号）&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-zA-Z0-9_-]{4,16}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;ip-v4[:端口]&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])(?::(?:[0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;ip-v6[:端口]&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?:(?:(?:[0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))|\[(?:(?:(?:[0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))\](?::(?:[0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?$/i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;16进制颜色&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;微信号(wx)，6至20位，以字母开头，字母，数字，减号，下划线&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;邮政编码(中国)&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\d{4}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;中文和数字&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^((?:[\u3400-\u4DB5\u4E00-\u9FEA\uFA0E\uFA0F\uFA11\uFA13\uFA14\uFA1F\uFA21\uFA23\uFA24\uFA27-\uFA29]|[\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0])|(\d))+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;不能包含字母&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[^A-Za-z]*$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;java包名&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^([a-zA-Z_]\w*)+([.][a-zA-Z_]\w*)+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;mac地址&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^((([a-f0-9]{2}:){5})|(([a-f0-9]{2}-){5}))[a-f0-9]{2}$/i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;匹配连续重复的字符&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/(.)\1+/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;数字和英文字母组成，并且同时含有数字和英文字母&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^(?=.*[a-zA-Z])(?=.*\d).+$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;香港身份证&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[a-zA-Z]\d{6}\([\dA]\)$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;澳门身份证&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/^[1|5|7]\d{6}[(\d)]{3}$/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;台湾身份证&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="JavaScript" scheme="https://fe32.top/categories/JavaScript/"/>
    
    
    <category term="RegExp" scheme="https://fe32.top/tags/RegExp/"/>
    
    <category term="正则大全" scheme="https://fe32.top/tags/%E6%AD%A3%E5%88%99%E5%A4%A7%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Company Job Abbreviations</title>
    <link href="https://fe32.top/articles/jo4116ba/"/>
    <id>https://fe32.top/articles/jo4116ba/</id>
    <published>2021-08-25T13:56:40.000Z</published>
    <updated>2023-06-27T14:39:00.837Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;PM&quot;&gt;&lt;a href=&quot;#PM&quot; class=&quot;headerlink&quot; title=&quot;PM&quot;&gt;&lt;/a&gt;PM&lt;/h2&gt;&lt;p&gt;　　项目经理( Project Manager )&lt;br&gt;　　从职业角度，是指企业建立以项目经理责任制为核心，对项目实行质量、安全、进度、成本管理的责任保证体系和全面提高项目管理水平设立的重要管理岗位。项目经理是为项目的成功策划和执行负总责的人。&lt;br&gt;　　项目经理是项目团队的领导者，项目经理首要职责是在预算范围内按时优质地领导项目小组完成全部项目工作内容，并使客户满意。为此项目经理必须在一系列的项目计划、组织和控制活动中做好领导工作，从而实现项目目标。&lt;br&gt;　　当然在互联网公司这个有着项目经理or产品经理的意思。&lt;/p&gt;
&lt;h2 id=&quot;RD&quot;&gt;&lt;a href=&quot;#RD&quot; class=&quot;headerlink&quot; title=&quot;RD&quot;&gt;&lt;/a&gt;RD&lt;/h2&gt;&lt;p&gt;　　研发（Research and Development）&lt;br&gt;　　如：软件RD工程师就是软件研发工程师，诸如PHP程序猿，Java程序猿，无论是爱疯的还是安卓的都是属于这一类别。偏向于后端的技术实现。&lt;/p&gt;
&lt;h2 id=&quot;FE&quot;&gt;&lt;a href=&quot;#FE&quot; class=&quot;headerlink&quot; title=&quot;FE&quot;&gt;&lt;/a&gt;FE&lt;/h2&gt;&lt;p&gt;　　前端（Front-End）；前端开发（Front-End Development）&lt;br&gt;　　FE是web前端研发、前端开发的意思！&lt;/p&gt;
&lt;h2 id=&quot;UE&quot;&gt;&lt;a href=&quot;#UE&quot; class=&quot;headerlink&quot; title=&quot;UE&quot;&gt;&lt;/a&gt;UE&lt;/h2&gt;&lt;p&gt;　　用户体验（User Experience，简称UX或 UE）&lt;br&gt;　　是一种纯主观的在用户使用一个产品（服务）的过程中建立起来的心理感受。因为它是纯主观的，就带有一定的不确定因素。&lt;br&gt;　　个体差异也决定了每个用户的真实体验是无法通过其他途径来完全模拟或再现的。但是对于一个界定明确的用户群体来讲，其用户体验的共性是能够经由良好设计的实验来认识到。&lt;br&gt;　　计算机技术和互联网的发展，使技术创新形态正在发生转变，以用户为中心、以人为本越来越得到重视，用户体验也因此被称做创新2.0模式的精髓。&lt;br&gt;　　另外还有有个组合叫法：UED（产品交互设计师，用户体验师）。&lt;/p&gt;
&lt;h2 id=&quot;UI&quot;&gt;&lt;a href=&quot;#UI&quot; class=&quot;headerlink&quot; title=&quot;UI&quot;&gt;&lt;/a&gt;UI&lt;/h2&gt;&lt;p&gt;　　用户界面（User Interface）&lt;br&gt;　　UI设计则是指对软件的人机交互、操作逻辑、界面美观的整体设计。好的UI设计不仅是让软件变得有个性有品味，还要让软件的操作变得舒适、简单、自由、充分体现软件的定位和特点。&lt;br&gt;　　UI还有其它的意义，如Unit Interval，Univ of Iowa，Unlock Instruction，Urgent Interrupt。&lt;/p&gt;
&lt;h2 id=&quot;QA&quot;&gt;&lt;a href=&quot;#QA&quot; class=&quot;headerlink&quot; title=&quot;QA&quot;&gt;&lt;/a&gt;QA&lt;/h2&gt;&lt;p&gt;　　测试（QUALITY ASSURANCE，中文意思是“质量保证”）&lt;br&gt;　　其在ISO8402：1994中的定义是“为了提供足够的信任表明实体能够满足质量要求，而在质量管理体系中实施并根据需要进行证实的全部有计划和有系统的活动”。有些推行ISO9000的组织会设置这样的部门或岗位，负责ISO9000标准所要求的有关质量保证的职能，担任这类工作的人员就叫做QA人员。&lt;/p&gt;
&lt;h2 id=&quot;OP&quot;&gt;&lt;a href=&quot;#OP&quot; class=&quot;headerlink&quot; title=&quot;OP&quot;&gt;&lt;/a&gt;OP&lt;/h2&gt;&lt;p&gt;　　运维（Operations）&lt;br&gt;　　OP这个词语代表的意思很多，这个简称来自于英文的Operations一词。我也不清楚谁最早用op代表运维工程师，不过2010年开始，这个词慢慢被很多人所知道。&lt;br&gt;　　OP工作内容主要就是维护公司的服务器能够正常提供服务，细分的话包括系统部分，网络部分，应用程序部分，数据库部分，具体根据公司的规模和职位职能不同，运维的定义也不同。现在市面上主要的OP有三种：网络游戏运维，网站运维，大型项目测试和生产环境运维。&lt;/p&gt;
&lt;h2 id=&quot;DBA&quot;&gt;&lt;a href=&quot;#DBA&quot; class=&quot;headerlink&quot; title=&quot;DBA&quot;&gt;&lt;/a&gt;DBA&lt;/h2&gt;&lt;p&gt;　　数据库管理员（Database Administrator，简称DBA）&lt;br&gt;    是一个负责管理和维护数据库服务器的人。数据库管理员负责全面管理和控制数据库系统。这个职位对不同的人意味着不同的意义。&lt;br&gt;    另外还有DB，既数据库（Database）。&lt;/p&gt;
&lt;p&gt;还有就是互联网产品设计常用文档类型的缩写： BRD、MRD、PRD、FSD等&lt;/p&gt;
&lt;h2 id=&quot;MRD&quot;&gt;&lt;a href=&quot;#MRD&quot; class=&quot;headerlink&quot; title=&quot;MRD&quot;&gt;&lt;/a&gt;MRD&lt;/h2&gt;&lt;p&gt;　　市场需求文档（Market Requirements Document）&lt;br&gt;　　获得老大的认同后，产品进入实施，需要先出MRD，具体来说要有更细致的市场与竞争对手分析，通过哪些功能来实现商业目的，功能/非功能需求分哪几块，功能的优先级等等。实际工作中，这个阶段PD可能的产出物有Mind Manager的思维图，Excel的Feature List等。&lt;br&gt;市场需求文档（MRD）重点放在为一个被提议的新产品或者现有产品的改进定义市场需求。与BRD指出商业问题和解决这些问题的解决方案不同，MRD更深入提议解决方案的细节。它包括一些或者所有这些细节：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解决商业问题所需要的特色&lt;/li&gt;
&lt;li&gt; 市场竞争分析&lt;/li&gt;
&lt;li&gt;功能和非功能需求&lt;/li&gt;
&lt;li&gt;特色/需求的优先级&lt;/li&gt;
&lt;li&gt;用例&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MRD通常是由拥有产品经理，产品营销经理或者行业分析师头衔的人撰写的。MRD通常是一份连续的5-25页Word文档，或者正如之后描述那样在一些机构中甚至更长。&lt;/p&gt;
&lt;h2 id=&quot;PRD&quot;&gt;&lt;a href=&quot;#PRD&quot; class=&quot;headerlink&quot; title=&quot;PRD&quot;&gt;&lt;/a&gt;PRD&lt;/h2&gt;&lt;p&gt;　　产品需求文档（Product Requirements Document）&lt;br&gt;进步一细化，这部分是PD写得最多的内容，也就是传统意义上的需求分析，我们这里主要指UC（use case）文档。主要内容有，功能使用的具体描述（每个UC一般有用例简述、行为者、前置条件、后置条件、UI描述、流程/子流程/分支流程，等几大块），Visio做的功能点业务流程，界面的说明，demo等。Demo方面，可能用dreamweaver、ps甚至画图板简单画一下，有时候也会有UI/UE支持，出高保真的demo，开发将来可以直接用的那种。&lt;br&gt;　　产品需求文档（PRD）重点放在为一个被提议的新产品或者现有产品的改进定义市场需求。与MRD侧重于从市场需要角度看需求的不同，PRD侧重于从产品本身角度看待需求。通常在特点和功能需求上更深入细节，并也可能包括屏幕截图和用户界面流程。在那些MRD不包括具体需求和用例的机构中，PRD就包含这些具体内容。PRD通常是由拥有产品经理，行业分析师或者产品分析师头衔的人撰写的。PRD通常是一份连续的20-50页Word文档，或者针对复杂产品甚至更长。&lt;br&gt;　　提醒：一些机构将这里描述的MRD和PRD合并成一个文档，并称最后的文档为MRD。在这种情况下，MRD包括本段描述的内容，也包括上一段描述PRD的内容，并且可能超过50页。&lt;/p&gt;
&lt;h2 id=&quot;FSD&quot;&gt;&lt;a href=&quot;#FSD&quot; class=&quot;headerlink&quot; title=&quot;FSD&quot;&gt;&lt;/a&gt;FSD&lt;/h2&gt;&lt;p&gt;　　功能详细说明（Functional Specifications Document）&lt;br&gt;有一点像“概要设计”，这步就开始往开发衔接了，产品UI、业务逻辑的细节都要确定，细化文档并保持更新。相应的，有很多内容，比如表结构设计，要由项目经理来编写了。&lt;br&gt;　　功能规格文档（FSD）把焦点集中在实现，定义产品功能需求的全部细节。FSD可能通过一张张的截屏和一条条功能点来定义产品规格。这是一份可以直接让工程师创建产品的文档。&lt;br&gt;与MRD和PRD侧重于以市场需要和产品角度看需求不同，FSD把重点放在了以表格形式定义产品细节，再让工程师实现这些细节。FSD也可能包括完整的屏幕截图和UI设计细节。&lt;br&gt;FSD通常是由拥有产品分析师，工程领导或者项目经理头衔的人撰写的 – 作者通常属于工程部门。通常一个连续几十页的Word或类似文档。&lt;/p&gt;
&lt;h2 id=&quot;CEO&quot;&gt;&lt;a href=&quot;#CEO&quot; class=&quot;headerlink&quot; title=&quot;CEO&quot;&gt;&lt;/a&gt;CEO&lt;/h2&gt;&lt;p&gt;　　CEO(Chief Executive Officer)，即首席执行官，是美国人在20世纪60年代进行公司治理结构改革创新时的产物。&lt;br&gt;　　由于市场风云变幻，决策的速度和执行的力度比以往任何时候都更加重要。 传统的“董事会决策、经理层执行”的公司体制已经难以满足决策的需要。而且， 决策层和执行层之间存在的信息传递时滞和沟通障碍、决策成本的增加，已经严 重影响经理层对企业重大决 策的快速反应和执行能力。而解决这一问题的首要一 点，就是让经理人拥有更多自主决策的权力，让经理人更多为自己的决策奋斗、对 自己的行为负责。CEO就是这种变革的产物。CEO在某种意义上代表着将原来董事会 手中的一些决策权过渡到经营层手中。&lt;br&gt;　　CEO与总经理，形式上都是企业的“一把手”，CEO既是行政一把手，又是股东 权益代言人————大多数情况下，CEO是作为董事会成员出现的，总经理则不一定 是董事会成员。从这个意义上讲，CEO代表着企业，并对企业经营负责。 由于国外没有类似的上级主管和来自四面八方的牵制，CEO的权威比国内的总经理们更绝对，但他们绝不会像总经理那样过多介入公司的具体事务。CEO作出总体决 策后，具体执行权力就会下放。所以有人说，CEO就像我国50%的董事长加上50%的总经理。&lt;br&gt;　　一般来讲，CEO的主要职责有三方面：①对公司所有重大事务和人事任免进行决 策，决策后，权力就下放给具体主管，CEO具体干预的较少；②营造一种促使员工愿 意为公司服务的企业文化；③把公司的整体形象推销出去。&lt;/p&gt;
&lt;h2 id=&quot;CTO&quot;&gt;&lt;a href=&quot;#CTO&quot; class=&quot;headerlink&quot; title=&quot;CTO&quot;&gt;&lt;/a&gt;CTO&lt;/h2&gt;&lt;p&gt;　　CTO是个技术主管，CIO是个具有技术背景或对技术有些了解地公司高层。&lt;/p&gt;
&lt;p&gt;　　通常CIO向CEO汇报，或向CFO汇报。CIO不需要是个技术大拿，但对技术必须非常敏感，并能发掘技术带给公司地潜力。随着IT在各公司地重要性日渐提高，CIO地地位也渐高，有时能进入公司地最高决策层。CIO是个桥梁，把公司地商业模式和技术连接起来。基本上CTO就是一个技术大拿，熟练掌握公司地核心技术，并可以带领团队开发或使用新技术来帮助公司达到目标。基本上CTO不会是公司地最高层。&lt;br&gt;企业CIO和CTO有着明显地区别，但是最大地区别不是在于他们对技术地掌握程度和深度，而是在于他们对企业战略地驾驭能力和适应能力。&lt;br&gt;　　CTO有时候也会成为公司地最高层，特别是一些以技术为核心竞争力地企业来说。首先，我们来解读一下什么是CTO。其实，CTO（首席技术官）作为一个外来名词，在中国还不多见，随着网络热潮传进中国地CXO系列中地一员，CTO给人留下地印象只是技术人员所能达到地最高职位。“但当技术日益成为影响企业发展地决定因素时，CTO也就成为对企业发展起着决定性作用地人群之一。&lt;br&gt;　　在美国，CTO除了负责技术支持和技术改良等日常工作外，其主要职责是设计公司地未来工作。从某种意义上说，CTO地首要工作是提出公司未来两三年内地产品和服务地技术发展方向。&lt;br&gt;　　尽管CTO这个名词是引进来了，但在角色职能定义方面同国外还存在一定差距。作为一个高科技公司地CTO，其更多地工作应该是前瞻性地，也就是制定下一代产品地策略和进行研究工作，属于技术战略地重要执行者。&lt;br&gt;在国内来看，大部分地企业里地“CTO”都是过去地“工程师”摇身一变而成地，因此带着很强地技术色彩。在一些通过技术安身立命地高科技企业，这些工程师出身地CTO也往往能够占据核心领导地位。但是在其他地行业中，例如一些传统地行业，一些把市场营销能力作为核心竞争力地企业，CTO地作用就大打折扣，CIO就逐渐浮出水面了。&lt;br&gt;　　“CIO”即信息总监，他通过组织和利用企业地IT资源，为企业创造效益。通过信息化掌握了企业地业务命脉以及战略方向地CIO，很可能向决策管理层地地位继续上升，直到达到权力地顶峰—CEO。&lt;br&gt;一家美国主导企业地首席执行官和一群首席信息官进行了一次谈话，讨论首席信息官在现代公司中地作用。在谈话进行到一半地时候，他直截了当地说：“首席信息官也许是我最重要地经理人。没有他们，我不知道我地公司会是怎样。”由此可见CIO在企业中地重要作用了。&lt;br&gt;　　在CIO成功地基本素质中，其中有一项是要精通企业以及相关行业地知识。要搞信息化，一个CIO至少要熟悉企业地研发、生产、计划、营销、市场、物流等核心业务流程，熟悉企业地财务管理、组织结构、行政程序、人力资源管理等基础资源，以及企业发展地远景、价值观等企业地文化范畴。在这基础上，CIO才能对企业地IT建设和信息资源做出正确地规划。&lt;br&gt;　　因此如果你想成为一个成功地CIO，那么最好远离电脑，去积极培养作为企业管理者应该具备地各种能力。对500名CIO所做地调查发现，70%地人认为通往成功地关键是有效地沟通；58%地人选择谙熟商业流程和运作；而46%地人则认为战略性地思想和计划能力很重要。而此前被认为很重要地IT技能，只获得了10%地认可。这不能不说是一个巨大地观念改变。&lt;/p&gt;
&lt;h2 id=&quot;CFO&quot;&gt;&lt;a href=&quot;#CFO&quot; class=&quot;headerlink&quot; title=&quot;CFO&quot;&gt;&lt;/a&gt;CFO&lt;/h2&gt;&lt;p&gt;　　CFO(Chief Financial Officer)意指公司首席财政官或财务总监，是现代公司中最重要、最有价值的顶尖管理职位之一，是掌握着企业的神经系统(财务信息)和血液系统(现金资源)灵魂人物。&lt;/p&gt;
&lt;p&gt;　　做一名成功的CFO需要具备丰富的金融理论知识和实务经验。公司理财与金融市场交互、项目估价、风险管理、产品研发、战略规划、企业核心竞争力的识别与建立以及洞悉信息技术及电子商务对企业的冲击等自然都是CFO职责范围内的事。&lt;/p&gt;
&lt;p&gt;　　在一个大型公司运作中，CFO是一个穿插在金融市场操作和公司内部财务管理之间的角色。担当CFO的人才大多是拥有多年在金融市场驰骋经验的人。在美国，优秀的CFO常常在华尔街做过成功的基金经理人。&lt;/p&gt;
&lt;h2 id=&quot;COO&quot;&gt;&lt;a href=&quot;#COO&quot; class=&quot;headerlink&quot; title=&quot;COO&quot;&gt;&lt;/a&gt;COO&lt;/h2&gt;&lt;p&gt;　　COO（ chief Operation officer） 的职责主要是负责公司的日常营运，辅助CEO的工作。&lt;br&gt;　　一般来讲，COO负责公司职能管理组织体系的建设，并代表CEO处理企业的日常职能事务。如果公司未设有总裁职务，则COO还要承担整体业务管理的职能，主管企业营销与综合业务拓展，负责建立公司整个的销售策略与政策，组织生产经营，协助CEO制定公司的业务发展计划，并对公司的经营绩效进行考核。&lt;/p&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;中文解释&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;英文缩写&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;计算机/互联网/通讯&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technology/Internet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;首席技术执行官&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;CTO/VP Engineering&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;技术总监/经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technical Director/Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;信息技术经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;IT Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;信息技术主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;IT Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;信息技术专员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;IT Specialist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;项目经理/主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Project Manager/Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;项目执行/协调人员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Project Specialist / Coordinator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;系统分析员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;System Analyst&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;高级软件工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Senior Software Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;软件工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Software Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;系统工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;System Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;高级硬件工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Senior Hardware Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;硬件工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Hardware Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;通信技术工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Communications Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;ERP技术/应用顾问&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;ERP Technical/Application Consultant&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;数据库工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Database Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;技术支持经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technical Support Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;技术支持工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technical Support Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;品质经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;QA Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;信息安全工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Information Security Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;软件测试工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Software QA Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;硬件测试工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Hardware QA Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;测试员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Test Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;网站营运经理/主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Web Operations Manager/Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;网络工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Network Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;系统管理员/网管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;System Manager/Webmaster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;网页设计/制作&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Web Designer/Production&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;技术文员/助理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technical Clerk/Assistant&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;其他岗位较常见简称&quot;&gt;&lt;a href=&quot;#其他岗位较常见简称&quot; class=&quot;headerlink&quot; title=&quot;其他岗位较常见简称&quot;&gt;&lt;/a&gt;其他岗位较常见简称&lt;/h2&gt;&lt;p&gt;首席品牌官【CBO】 chief brand officer&lt;/p&gt;
&lt;p&gt;首席文化官【CCO】 Chief Cultural Officer&lt;/p&gt;
&lt;p&gt;开发总监【CDO】 chief Development officer&lt;/p&gt;
&lt;p&gt;人事总监 【CHO】 Chief Human resource officer&lt;/p&gt;
&lt;p&gt;首席知识官【CKO】 chief knowledge officer&lt;/p&gt;
&lt;p&gt;首席市场官【CMO】 chief Marketing officer&lt;/p&gt;
&lt;p&gt;首席谈判官【CNO】 chief Negotiation officer&lt;/p&gt;
&lt;p&gt;公关总监【CPO】 chief Public relation officer&lt;/p&gt;
&lt;p&gt;质量总监【CQO】 chief Quality officer&lt;/p&gt;
&lt;p&gt;销售总监【CSO】 chief Sales officer&lt;/p&gt;
&lt;p&gt;评估总监【CVO】 chief Valuation officer &lt;/p&gt;
&lt;p&gt;CAO：Answerer 首席答辩人，专门负责解答媒体、债权人和用户等有关网站倒闭问题的询问。&lt;/p&gt;
&lt;p&gt;CBO：Business Plan 首席商业计划官，是首席财务官的助理之一，专门针对不同的投资人制订相应的BP。&lt;/p&gt;
&lt;p&gt;CCO：Cost Control 首席成本控制官，凡超过100元以上的支出必须由CC0批准。&lt;/p&gt;
&lt;p&gt;CDO：Domain name 首席域名官，负责公司域名注册、网站清盘时域名的拍卖、域名法律纠纷等相关问题。&lt;/p&gt;
&lt;p&gt;CGO：Guideline 首席方针制订官，规划公司的宏伟蓝图，一般是5年以后的目标。&lt;/p&gt;
&lt;p&gt;CHO：Harmony 首席协调官，调解投资者和经营者之间的冲突，并确保公司内部矛盾不要泄露。&lt;/p&gt;
&lt;p&gt;CJO：Judge 首席执法官，解决内部劳资纠纷，包括员工对降薪、辞退补偿等所引起的问题。&lt;/p&gt;
&lt;p&gt;CKO：Keep connecting，网络连接专员，最繁忙的岗位之一，当中国电信的网络连接中断时及时向员工通报。&lt;/p&gt;
&lt;p&gt;CLO：Lawer 首席律师，负责公司被控侵权时的应诉以及各种合同文本的审核。&lt;/p&gt;
&lt;p&gt;CMO：Media 首席媒体官，保持和媒体之间的友好关系，为公司随时发布新闻做准备。&lt;/p&gt;
&lt;p&gt;CNO：News 首席新闻官，向媒体披露公司网站被黑、裁员、被收购等重大新闻。&lt;/p&gt;
&lt;p&gt;CPO：Privacy 首席隐私官，负责公司内部员工Email、ICQ、OICQ等通信内容的监控。&lt;/p&gt;
&lt;p&gt;CQO：Quantity Making，数量指标编造专家，负责注册用户数量、页面浏览、营业收入等指标的编造。&lt;/p&gt;
&lt;p&gt;CRO：Reduce the stafftrimmer 首席裁员官，负责所有与裁员有关的事务，直接向股东大会负责，包括董事长在内都不得干预其工作。&lt;/p&gt;
&lt;p&gt;CSO：Strategy 首席战略官，由已经退位的公司主要创建人担任，在政府机关一般称为调研员或顾问。&lt;/p&gt;
&lt;p&gt;CTO：Testing 首席测试官，是公司唯一负责网站建设的专家，由于技术开发不成熟，需要一直测试下去。&lt;/p&gt;
&lt;p&gt;CUO：Union 首席联盟官，以战略联盟的名义，专门寻找有收购自己意向的网站。&lt;/p&gt;
&lt;p&gt;CVO：VC reception 风险投资商接待专员，首席财务官的另一重要助理。&lt;/p&gt;
&lt;p&gt;CWO：Writer 首席网络写手，负责将小事扩大化，通过炒作达到扩大网站知名度的目的，其下属为COO。&lt;/p&gt;
&lt;p&gt;CXO：Xingxiang（因为中国特有，所以只能用汉语拼音表示） 网站形象代言人，一般由学历不高且没有任何网络知识的年轻人担任。&lt;/p&gt;
&lt;p&gt;CYO：Yearly 公司元老，这是一个荣誉称号，授予在同一网站工作满一年的员工（这个职位通常空缺）。&lt;/p&gt;
&lt;p&gt;CZO：Zero 最后离开公司的一个人，负责关好门窗，将公司大门钥匙交给物业管理处，可以由CAO兼任。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;中文解释&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;英文缩写&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售总监&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Director&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;区域销售经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Regional Sales Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;客户经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Account Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;渠道/分销经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Channel/Distribution Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;渠道主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Channel Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售代表&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Representative / Executive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;医药代表&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Pharmaceutical Sales Representative&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;保险代理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Insurance Agent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售助理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Assistant / Trainee&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;商务经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Business Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;商务专员/助理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Business Executive/Assistant&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售行政经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Admin. Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;销售行政主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sales Admin. Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;售前/售后技术服务经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technical Service Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;售前/售后技术服务主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technical Service Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;售前/售后技术服务工程师&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Technical Service Engineer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;售后/客户服务（非技术）经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Customer Service Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;售后/客户服务（非技术）主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Customer Service Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;售后/客户服务（非技术）专员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Customer Service Executive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;经销商&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Distributor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场/公关/广告&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Marketing/PR/Advertising&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场/广告总监&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Marketing/Advertising Director/VP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场/营销经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Marketing Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场/营销主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Marketing Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场/营销专员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Marketing Executive/Communication&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场助理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Marketing Assistant / Trainee&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;产品/品牌经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Product/Brand Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;产品/品牌主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Product/Brand Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场通路经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Trade Marketing Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场通路主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Trade Marketing Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;促销经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Promotions Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;促销主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Promotions Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;促销员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Promotions Specialist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场分析/调研人员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Market Analyst/ Research Analyst&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;公关/会务经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Public Relations Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;公关/会务主管&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Public Relations Supervisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;公关/会务专员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Public Relations Executive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;媒介经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Media Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;媒介人员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Media Specialist&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;企业/业务发展经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Business Development Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;企业策划人员&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Corporate Planning&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;广告策划/设计/文案&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Advertising Creative/Design/Copy writer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;总经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;GM（General Manager）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;副总裁&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;VP（Vice President）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;第一副总裁&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;FVP（First Vice President）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;副总裁助理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;AVP（Assistant Vice President）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;人力资源总监&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;HRD（Human Resource Director）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;运营总监&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;OD（Operations Director）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;市场总监&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;MD（Marketing Director）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;运作经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;OM（Operations Manager）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;部门经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;BM（Branch Manager）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;区域经理&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;（District</summary>
        
      
    
    
    
    <category term="但当涉猎" scheme="https://fe32.top/categories/%E4%BD%86%E5%BD%93%E6%B6%89%E7%8C%8E/"/>
    
    
    <category term="职位简称" scheme="https://fe32.top/tags/%E8%81%8C%E4%BD%8D%E7%AE%80%E7%A7%B0/"/>
    
    <category term="中文释义" scheme="https://fe32.top/tags/%E4%B8%AD%E6%96%87%E9%87%8A%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>什么是Docker？</title>
    <link href="https://fe32.top/articles/do0228ck/"/>
    <id>https://fe32.top/articles/do0228ck/</id>
    <published>2021-06-28T08:38:48.000Z</published>
    <updated>2023-06-27T14:39:00.691Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/7f84e198802cb.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;容器技术的起源&quot;&gt;&lt;a href=&quot;#容器技术的起源&quot; class=&quot;headerlink&quot; title=&quot;容器技术的起源&quot;&gt;&lt;/a&gt;容器技术的起源&lt;/h1&gt;&lt;p&gt;假设你们公司正在秘密研发下一个“今日头条”APP，我们姑且称为明日头条，程序员自己&lt;b&gt;从头到尾搭建了一套环境&lt;/b&gt;开始写代码，写完代码后程序员要把代码交给测试同学测试，这时测试同学开始&lt;b&gt;从头到尾搭建这套环境&lt;/b&gt;，测试过程中出现问题程序员也不用担心，大可以一脸无辜的撒娇，“明明在人家的环境上可以运行的”。&lt;/p&gt;
&lt;p&gt;测试同学测完后终于可以上线了，这时运维同学又要重新&lt;b&gt;从头到尾搭建这套环境&lt;/b&gt;，费了九牛二虎之力搭建好环境开始上线，糟糕，上线系统就崩溃了，这时心理素质好的程序员又可以施展演技了，“明明在人家的环境上可以运行的”。&lt;/p&gt;
&lt;p&gt;从整个过程可以看到，不但我们重复搭建了三套环境还要迫使程序员转行演员浪费表演才华，典型的浪费时间和效率，聪明的程序员是永远不会满足现状的，因此又到了程序员改变世界的时候了，容器技术应运而生。&lt;/p&gt;
&lt;p&gt;有的同学可能会说：“等等，先别改变世界，我们有虚拟机啊，VMware好用的飞起，先搭好一套虚拟机环境然后给测试和运维clone出来不就可以了吗？”&lt;/p&gt;
&lt;p&gt;在没有容器技术之前，这确实是一个好办法，只不过这个办法还没有那么好。&lt;/p&gt;
&lt;p&gt;先科普一下，现在云计算其底层的基石就是虚拟机技术，云计算厂商买回来一堆硬件搭建好数据中心后使用虚拟机技术就可以将硬件资源进行切分了，比如可以切分出100台虚拟机，这样就可以卖给很多用户了。&lt;/p&gt;
&lt;p&gt;你可能会想这个办法为什么不好呢？&lt;/p&gt;
&lt;h1 id=&quot;容器技术-vs-虚拟机&quot;&gt;&lt;a href=&quot;#容器技术-vs-虚拟机&quot; class=&quot;headerlink&quot; title=&quot;容器技术 vs 虚拟机&quot;&gt;&lt;/a&gt;容器技术 vs 虚拟机&lt;/h1&gt;&lt;p&gt;我们知道和一个单纯的应用程序相比，&lt;b&gt;操作系统是一个很重而且很笨的程序&lt;/b&gt;，简称笨重，有多笨重呢？&lt;/p&gt;
&lt;p&gt;我们知道操作系统运行起来是需要占用很多资源的，大家对此肯定深有体会，刚装好的系统还什么都没有部署，单纯的操作系统其磁盘占用至少几十G起步，内存要几个G起步。&lt;/p&gt;
&lt;p&gt;假设我有一台机器，16G内存，需要部署三个应用，那么使用虚拟机技术可以这样划分：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/6e308d43bb076.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在这台机器上开启三个虚拟机，每个虚拟机上部署一个应用，其中VM1占用2G内存，VM2占用1G内存，VM3占用了4G内存。&lt;/p&gt;
&lt;p&gt;我们可以看到虚拟本身就占据了总共7G内存，因此&lt;b&gt;我们没有办法划分出更多虚拟机从而部署更多的应用程序&lt;/b&gt;，可是我们部署的是应用程序，要用的也是应用程序而&lt;b&gt;不是操作系统&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;如果有一种技术可以让我们避免把内存浪费在“无用”的操作系统上岂不是太香？这是问题一，主要原因在于操作系统太重了。&lt;/p&gt;
&lt;p&gt;还有另一个问题，那就是启动时间问题，我们知道操作系统重启是非常慢的，因为操作系统要从头到尾把该检测的都检测了该加载的都加载上，这个过程非常缓慢，动辄数分钟，因此操作系统还是太笨了。&lt;/p&gt;
&lt;p&gt;那么有没有一种技术可以让我们获得虚拟机的好处又能克服这些缺点从而一举实现鱼和熊掌的兼得呢？&lt;/p&gt;
&lt;p&gt;答案是肯定的，这就是容器技术。&lt;/p&gt;
&lt;h1 id=&quot;什么是容器&quot;&gt;&lt;a href=&quot;#什么是容器&quot; class=&quot;headerlink&quot; title=&quot;什么是容器&quot;&gt;&lt;/a&gt;什么是容器&lt;/h1&gt;&lt;p&gt;容器一词的英文是container，其实container还有集装箱的意思，集装箱绝对是商业史上了不起的一项发明，大大降低了海洋贸易运输成本。让我们来看看集装箱的好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;集装箱之间相互隔离&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;长期反复使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;快速装载和卸载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;规格标准，在港口和船上都可以摆放&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/d826239097558.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;回到软件中的容器，其实容器和集装箱在概念上是很相似的。&lt;/p&gt;
&lt;p&gt;现代软件开发的一大目的就是隔离，应用程序在运行时相互独立互不干扰，这种隔离实现起来是很不容易的，其中一种解决方案就是上面提到的虚拟机技术，通过将应用程序部署在不同的虚拟机中从而实现隔离。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/21d11fcd87686.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是虚拟机技术有上述提到的各种缺点，那么容器技术又怎么样呢？&lt;/p&gt;
&lt;p&gt;与虚拟机通过操作系统实现隔离不同，容器技术&lt;b&gt;只隔离应用程序的运行时环境但容器之间可以共享同一个操作系统&lt;/b&gt;，这里的运行时环境指的是程序运行依赖的各种库以及配置。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/116fac1ee37df.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从图中我们可以看到容器更加的&lt;b&gt;轻量级且占用的资源更少&lt;/b&gt;，与操作系统动辄几G的内存占用相比，容器技术只需数M空间，因此我们可以在同样规格的硬件上&lt;b&gt;大量部署容器&lt;/b&gt;，这是虚拟机所不能比拟的，而且不同于操作系统数分钟的启动时间容器几乎瞬时启动，容器技术为&lt;b&gt;打包服务栈&lt;/b&gt;提供了一种更加高效的方式，So cool。&lt;/p&gt;
&lt;p&gt;那么我们该怎么使用容器呢？这就要讲到docker了。&lt;/p&gt;
&lt;p&gt;注意，容器是一种通用技术，docker只是其中的一种实现。&lt;/p&gt;
&lt;h1 id=&quot;什么是docker&quot;&gt;&lt;a href=&quot;#什么是docker&quot; class=&quot;headerlink&quot; title=&quot;什么是docker&quot;&gt;&lt;/a&gt;什么是docker&lt;/h1&gt;&lt;p&gt;docker是一个用Go语言实现的开源项目，可以让我们方便的创建和使用容器，docker将程序以及程序所有的依赖都打包到docker container，这样你的程序可以在任何环境都会有一致的表现，这里程序运行的依赖也就是容器就好比集装箱，容器所处的操作系统环境就好比货船或港口，&lt;b&gt;程序的表现只和集装箱有关系(容器)，和集装箱放在哪个货船或者哪个港口(操作系统)没有关系&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;因此我们可以看到docker可以屏蔽环境差异，也就是说，只要你的程序打包到了docker中，那么无论运行在什么环境下程序的行为都是一致的，程序员再也无法施展表演才华了，&lt;b&gt;不会再有“在我的环境上可以运行”&lt;/b&gt;，真正实现“build once, run everywhere”。&lt;/p&gt;
&lt;p&gt;此外docker的另一个好处就是&lt;b&gt;快速部署&lt;/b&gt;，这是当前互联网公司最常见的一个应用场景，一个原因在于容器启动速度非常快，另一个原因在于只要确保一个容器中的程序正确运行，那么你就能确信无论在生产环境部署多少都能正确运行。&lt;/p&gt;
&lt;h1 id=&quot;如何使用docker&quot;&gt;&lt;a href=&quot;#如何使用docker&quot; class=&quot;headerlink&quot; title=&quot;如何使用docker&quot;&gt;&lt;/a&gt;如何使用docker&lt;/h1&gt;&lt;p&gt;docker中有这样几个概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;dockerfile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;image&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;container&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上你可以简单的把image理解为可执行程序，container就是运行起来的进程。&lt;/p&gt;
&lt;p&gt;那么写程序需要源代码，那么“写”image就需要dockerfile，dockerfile就是image的源代码，docker就是”编译器”。&lt;/p&gt;
&lt;p&gt;因此我们只需要在dockerfile中指定需要哪些程序、依赖什么样的配置，之后把dockerfile交给“编译器”docker进行“编译”，也就是docker build命令，生成的可执行程序就是image，之后就可以运行这个image了，这就是docker run命令，image运行起来后就是docker container。&lt;/p&gt;
&lt;p&gt;具体的使用方法就不再这里赘述了，大家可以参考&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker的官方文档&lt;/a&gt;，那里有详细的讲解。&lt;/p&gt;
&lt;h1 id=&quot;docker是如何工作的&quot;&gt;&lt;a href=&quot;#docker是如何工作的&quot; class=&quot;headerlink&quot; title=&quot;docker是如何工作的&quot;&gt;&lt;/a&gt;docker是如何工作的&lt;/h1&gt;&lt;p&gt;实际上docker使用了常见的CS架构，也就是client-server模式，docker client负责处理用户输入的各种命令，比如docker build、docker run，真正工作的其实是server，也就是docker demon，值得注意的是，docker client和docker demon可以运行在同一台机器上。&lt;/p&gt;
&lt;p&gt;接下来我们用几个命令来讲解一下docker的工作流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;docker build&lt;br&gt;当我们写完dockerfile交给docker“编译”时使用这个命令，那么client在接收到请求后转发给docker daemon，接着docker daemon根据dockerfile创建出“可执行程序”image。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/23cf69ed3533b.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;docker run&lt;br&gt;有了 “可执行程序” image 后就可以运行程序了，接下来使用命令&lt;code&gt;docker run&lt;/code&gt;，docker daemon 接收到该命令后找到具体的image，然后加载到内存开始执行，image 执行起来就是所谓的 container。&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/aa10e883300e0.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;docker pull&lt;br&gt;其实&lt;code&gt;docker build&lt;/code&gt;和&lt;code&gt;docker run&lt;/code&gt;是两个最核心的命令，会用这两个命令基本上 docker 就可以用起来了，剩下的就是一些补充。&lt;/p&gt;
&lt;p&gt; 那么docker pull是什么意思呢？&lt;/p&gt;
&lt;p&gt; 我们之前说过，docker中image的概念就类似于“可执行程序”，我们可以从哪里下载到别人写好的应用程序呢？很简单，那就是APP Store，即应用商店。与之类似，既然image也是一种“可执行程序”，那么有没有”Docker Image Store”呢？答案是肯定的，这就是 Docker Hub，docker官方的“应用商店”，你可以在这里下载到别人编写好的image，这样你就不用自己编写dockerfile了。&lt;/p&gt;
&lt;p&gt; docker registry 可以用来存放各种image，公共的可以供任何人下载image的仓库就是 docker Hub。那么该怎么从 Docker Hub 中下载image呢，就是这里的 docker pull命令了。&lt;/p&gt;
&lt;p&gt; 因此，这个命令的实现也很简单，那就是用户通过docker client发送命令，docker daemon 接收到命令后向 docker registry 发送 image下载请求，下载后存放在本地，这样我们就可以使用image了。&lt;/p&gt;
 &lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/28/e636fa0771dc2.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后，让我们来看一下docker的底层实现。&lt;/p&gt;
&lt;h1 id=&quot;docker的底层实现&quot;&gt;&lt;a href=&quot;#docker的底层实现&quot; class=&quot;headerlink&quot; title=&quot;docker的底层实现&quot;&gt;&lt;/a&gt;docker的底层实现&lt;/h1&gt;&lt;p&gt;docker 基于 Linux内核 提供这样几项功能实现的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NameSpace&lt;/p&gt;
&lt;p&gt;  我们知道 Linux 中的 PID、IPC、网络等资源是全局的，而 NameSpace 机制是一种资源隔离方案，在该机制下这些资源就不再是全局的了，而是属于某个特定的 NameSpace，各个 NameSpace 下的资源互不干扰，这就使得每个 NameSpace 看上去就像一个独立的操作系统一样，但是只有NameSpace是不够。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Control groups&lt;/p&gt;
&lt;p&gt;  虽然有了 NameSpace 技术可以实现资源隔离，但进程还是可以不受控的访问系统资源，比如 CPU、内存、磁盘、网络等，为了控制容器中进程对资源的访问，Docker 采用 control groups技术(也就是cgroup)，有了 cgroup 就可以控制容器中进程对系统资源的消耗了，比如你可以限制某个容器使用内存的上限、可以在哪些CPU上运行等等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;docker是目前非常流行的技术，很多公司都在生产环境中使用，但是docker依赖的底层技术实际上很早就已经出现了，现在以docker的形式重新焕发活力，并且能很好的解决面临的问题，希望本文能对大家理解docker有所帮助。&lt;/p&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;本文摘自：&lt;a</summary>
        
      
    
    
    
    <category term="后端杂谈" scheme="https://fe32.top/categories/%E5%90%8E%E7%AB%AF%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="网络" scheme="https://fe32.top/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="Docker" scheme="https://fe32.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>巧用 CSS3 Filter(滤镜) 属性</title>
    <link href="https://fe32.top/articles/fi5487lt/"/>
    <id>https://fe32.top/articles/fi5487lt/</id>
    <published>2021-06-25T09:04:09.000Z</published>
    <updated>2023-06-27T14:39:00.649Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;效果预览&quot;&gt;&lt;a href=&quot;#效果预览&quot; class=&quot;headerlink&quot; title=&quot;效果预览&quot;&gt;&lt;/a&gt;效果预览&lt;/h1&gt;&lt;p&gt;这里仅展示黑白效果，更多效果移步&lt;a href=&quot;https://fe32.top/articles/fi5487lt/#%E5%AE%9E%E4%BE%8B&quot;&gt;实例&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;grayscale&lt;/span&gt;(100%);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/48f6531cbf285.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/eb5903ddd67e2.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/47c36ad3de185.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/d94a376192b34.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;定义和使用&quot;&gt;&lt;a href=&quot;#定义和使用&quot; class=&quot;headerlink&quot; title=&quot;定义和使用&quot;&gt;&lt;/a&gt;定义和使用&lt;/h1&gt;&lt;p&gt;filter 属性定义了元素（通常是&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;）的可视效果(例如：模糊与饱和度)。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;默认值&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;none&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;继承&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;动画支持&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;是。详细可查阅 &lt;a href=&quot;https://www.runoob.com/cssref/css-animatable.html&quot;&gt;CSS 动画&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;版本&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;CSS3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1 id=&quot;浏览器支持&quot;&gt;&lt;a href=&quot;#浏览器支持&quot; class=&quot;headerlink&quot; title=&quot;浏览器支持&quot;&gt;&lt;/a&gt;浏览器支持&lt;/h1&gt;&lt;p&gt;表格中的数字表示支持该方法的第一个浏览器的版本号。&lt;/p&gt;
&lt;p&gt;紧跟在数字后面的 -webkit- 为指定浏览器的前缀。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;属性&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;filter&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/0696c251966a3.gif&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;18.0 -webkit-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/4131d95989914.gif&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/080cb4436d0cc.gif&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;35.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/9d1558e08bc3d.gif&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;6.0 -webkit-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/3ec81173fd5b7.gif&quot;&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;15.0 -webkit-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;注意: 旧版 Internet Explorer 浏览器(4.0 to 8.0) 支持的非标准 “filter” 属性已被废弃。 IE8 及更低版本浏览器通常使用 opacity 属性。&lt;/p&gt;
&lt;h1 id=&quot;CSS-语法&quot;&gt;&lt;a href=&quot;#CSS-语法&quot; class=&quot;headerlink&quot; title=&quot;CSS 语法&quot;&gt;&lt;/a&gt;CSS 语法&lt;/h1&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;filter: none | blur() | brightness() | contrast() | drop-shadow() | grayscale() | hue-rotate() | invert() | opacity() | saturate() | sepia() | url();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;Filter-函数&quot;&gt;&lt;a href=&quot;#Filter-函数&quot; class=&quot;headerlink&quot; title=&quot;Filter 函数&quot;&gt;&lt;/a&gt;Filter 函数&lt;/h1&gt;&lt;div class=&quot;tip &quot;&gt;&lt;p&gt;注意: 滤镜通常使用百分比 (如：75%), 当然也可以使用小数来表示 (如：0.75)。&lt;/p&gt;
&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Filter&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;none&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;默认值，没有效果。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;blur(px)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;给图像设置高斯模糊。”radius”一值设定高斯函数的标准差，或者是屏幕上以多少像素融在一起， 所以值越大越模糊；&lt;br&gt;如果没有设定值，则默认是0；这个参数可设置css长度值，但不接受百分比值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;brightness(%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;给图片应用一种线性乘法，使其看起来更亮或更暗。如果值是0%，图像会全黑。值是100%，则图像无变化。 &lt;br&gt;其他的值对应线性乘数效果。值超过100%也是可以的，图像会比原来更亮。如果没有设定值，默认是1。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;contrast(%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;调整图像的对比度。值是0%的话，图像会全黑。值是100%，图像不变。值可以超过100%，意味着会运用更低的对比。若没有设置值，默认是1。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;drop-shadow(h-shadow v-shadow blur spread color)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;给图像设置一个阴影效果。阴影是合成在图像下面，可以有模糊度的，可以以特定颜色画出的遮罩图的偏移版本。 函数接受&lt;code&gt;&amp;lt;shadow&amp;gt;&lt;/code&gt;(在CSS3背景中定义)类型的值，除了 “inset” 关键字是不允许的。该函数与已有的 &lt;code&gt;box-shadow box-shadow&lt;/code&gt; 属性很相似；不同之处在于，通过滤镜，一些浏览器为了更好的性能会提供硬件加速。&lt;code&gt;&amp;lt;shadow&amp;gt;&lt;/code&gt;参数如下：&lt;br&gt; &lt;code&gt;&amp;lt;offset-x&amp;gt; &amp;lt;offset-y&amp;gt;&lt;/code&gt;(必须) &lt;br&gt; 这是设置阴影偏移量的两个 &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;值。 &lt;code&gt;&amp;lt;offset-x&amp;gt;&lt;/code&gt;设定水平方向距离， 负值会使阴影出现在元素左边。 &lt;code&gt;&amp;lt;offset-y&amp;gt;&lt;/code&gt;设定垂直距，负值会使阴影出现在元素上方，查看&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;可能的单位，如果两个值都是0， 则阴影出现在元素正后面 (如果设置了 &lt;code&gt;&amp;lt;blur-radius&amp;gt;&lt;/code&gt; and/or &lt;code&gt;&amp;lt;spread-radius&amp;gt;&lt;/code&gt;，会有模糊效果)。&lt;br&gt;&lt;code&gt;&amp;lt;blur-radius&amp;gt;&lt;/code&gt; (可选)&lt;br&gt;这是第三个code &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;值。 值越大，越模糊，则阴影会变得更大更淡。不允许负值 若未设定，默认是0 (则阴影的边界很锐利)。&lt;br&gt;&lt;code&gt;&amp;lt;spread-radius&amp;gt;&lt;/code&gt; (可选)&lt;br&gt;这是第四个 &lt;length&gt;值。 正值会使阴影扩张和变大，负值会是阴影缩小。若未设定，默认是0 (阴影会与元素一样大小)。 &lt;br&gt;注意: Webkit , 以及一些其他浏览器 不支持第四个长度，如果加了也不会渲染。&lt;br&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt; (可选)&lt;br&gt;查看 &lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;该值可能的关键字和标记。若未设定，颜色值基于浏览器。在Gecko (Firefox), Presto (Opera)和Trident (Internet Explorer)中， 会应用colorcolor属性的值。另外, 如果颜色值省略，WebKit中阴影是透明的。&lt;/length&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;grayscale(%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;将图像转换为灰度图像。值定义转换的比例。值为100%则完全转为灰度图像，值为0%图像无变化。值在0%到100%之间，则是效果的线性乘子。若未设置，值默认是0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;hue-rotate(deg)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;给图像应用色相旋转。”angle”一值设定图像会被调整的色环角度值。值为0deg，则图像无变化。若值未设置，默认值是0deg。该值虽然没有最大值，超过360deg的值相当于又绕一圈。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;invert(%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;反转输入图像。值定义转换的比例。100%的价值是完全反转。值为0%则图像无变化。值在0%和100%之间，则是效果的线性乘子。 若值未设置，值默认是0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;opacity(%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;转化图像的透明程度。值定义转换的比例。值为0%则是完全透明，值为100%则图像无变化。值在0%和100%之间，则是效果的线性乘子，也相当于图像样本乘以数量。 若值未设置，值默认是1。该函数与已有的opacity属性很相似，不同之处在于通过filter，一些浏览器为了提升性能会提供硬件加速。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;saturate(%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;转换图像饱和度。值定义转换的比例。值为0%则是完全不饱和，值为100%则图像无变化。其他值，则是效果的线性乘子。超过100%的值是允许的，则有更高的饱和度。 若值未设置，值默认是1。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;sepia(%)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;将图像转换为深褐色。值定义转换的比例。值为100%则完全是深褐色的，值为0%图像无变化。值在0%到100%之间，则是效果的线性乘子。若未设置，值默认是0；&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;url()&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;URL函数接受一个XML文件，该文件设置了 一个SVG滤镜，且可以包含一个锚点来指定一个具体的滤镜元素。&lt;br&gt; 例如：&lt;br&gt;&lt;code&gt;filter: url(svg-url#element-id)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;initial&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;设置属性为默认值，可参阅：  &lt;a href=&quot;https://www.runoob.com/cssref/css-initial.html&quot;&gt;CSS initial 关键字&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;inherit&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;设置属性为默认值，可参阅： &lt;a href=&quot;https://www.runoob.com/cssref/css-inherit.html&quot;&gt;CSS inherit 关键字&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h1&gt;&lt;p&gt;初始图片如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;模糊实例&quot;&gt;&lt;a href=&quot;#模糊实例&quot; class=&quot;headerlink&quot; title=&quot;模糊实例&quot;&gt;&lt;/a&gt;模糊实例&lt;/h2&gt;&lt;p&gt;图片使用高斯模糊效果：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/e81c905329dac.png&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;note red no-icon flat&quot;&gt;&lt;p&gt;注意： Internet Explorer 不支持 filter 属性。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;Brightness-函数实例&quot;&gt;&lt;a href=&quot;#Brightness-函数实例&quot; class=&quot;headerlink&quot; title=&quot;Brightness 函数实例&quot;&gt;&lt;/a&gt;Brightness 函数实例&lt;/h2&gt;&lt;p&gt;使图片变亮:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/c8078af0c5b43.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Contrast-函数实例&quot;&gt;&lt;a href=&quot;#Contrast-函数实例&quot; class=&quot;headerlink&quot; title=&quot;Contrast 函数实例&quot;&gt;&lt;/a&gt;Contrast 函数实例&lt;/h2&gt;&lt;p&gt;调整图像的对比度:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;contrast&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;contrast&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/112e0228e4c73.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;drop-shadow-函数实例&quot;&gt;&lt;a href=&quot;#drop-shadow-函数实例&quot; class=&quot;headerlink&quot; title=&quot;drop-shadow 函数实例&quot;&gt;&lt;/a&gt;drop-shadow 函数实例&lt;/h2&gt;&lt;p&gt;给图像设置一个阴影效果:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;drop-shadow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; red); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;drop-shadow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; red);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/11e098987e2a8.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Grayscale-函数实例&quot;&gt;&lt;a href=&quot;#Grayscale-函数实例&quot; class=&quot;headerlink&quot; title=&quot;Grayscale 函数实例&quot;&gt;&lt;/a&gt;Grayscale 函数实例&lt;/h2&gt;&lt;p&gt;将图像转换为灰度图像:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;grayscale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;grayscale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/9a251a70957b6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;hue-rotate-函数实例&quot;&gt;&lt;a href=&quot;#hue-rotate-函数实例&quot; class=&quot;headerlink&quot; title=&quot;hue-rotate() 函数实例&quot;&gt;&lt;/a&gt;hue-rotate() 函数实例&lt;/h2&gt;&lt;p&gt;给图像应用色相旋转:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;hue-rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;90deg&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;hue-rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;90deg&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/4e59982490ed6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Invert-函数实例&quot;&gt;&lt;a href=&quot;#Invert-函数实例&quot; class=&quot;headerlink&quot; title=&quot;Invert 函数实例&quot;&gt;&lt;/a&gt;Invert 函数实例&lt;/h2&gt;&lt;p&gt;反转输入图像:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;invert&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;invert&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/ee3d5a4de13e6.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Opacity-函数实例&quot;&gt;&lt;a href=&quot;#Opacity-函数实例&quot; class=&quot;headerlink&quot; title=&quot;Opacity 函数实例&quot;&gt;&lt;/a&gt;Opacity 函数实例&lt;/h2&gt;&lt;p&gt;转化图像的透明程度:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;opacity&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;opacity&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/298c30334aea4.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Saturate-函数实例&quot;&gt;&lt;a href=&quot;#Saturate-函数实例&quot; class=&quot;headerlink&quot; title=&quot;Saturate 函数实例&quot;&gt;&lt;/a&gt;Saturate 函数实例&lt;/h2&gt;&lt;p&gt;转换图像饱和度:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;saturate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;800%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;saturate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;800%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/6af7c9ea945f4.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Sepia-函数实例&quot;&gt;&lt;a href=&quot;#Sepia-函数实例&quot; class=&quot;headerlink&quot; title=&quot;Sepia 函数实例&quot;&gt;&lt;/a&gt;Sepia 函数实例&lt;/h2&gt;&lt;p&gt;将图像转换为深褐色:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;sepia&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;sepia&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/4cd1f7012db40.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;复合函数&quot;&gt;&lt;a href=&quot;#复合函数&quot; class=&quot;headerlink&quot; title=&quot;复合函数&quot;&gt;&lt;/a&gt;复合函数&lt;/h2&gt;&lt;p&gt;使用多个滤镜，每个滤镜使用空格分隔。&lt;/p&gt;
&lt;div class=&quot;note red no-icon flat&quot;&gt;&lt;p&gt;注意: 顺序是非常重要的 (例如使用 grayscale() 后再使用 sepia()将产生一个完整的灰度图片)。&lt;/p&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;contrast&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200%&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;150%&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;/* Chrome, Safari, Opera */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;contrast&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200%&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;150%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/4895c7bd99db2.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;滤镜效果整合&quot;&gt;&lt;a href=&quot;#滤镜效果整合&quot; class=&quot;headerlink&quot; title=&quot;滤镜效果整合&quot;&gt;&lt;/a&gt;滤镜效果整合&lt;/h2&gt;&lt;p&gt;使用多个滤镜，每个滤镜使用空格分隔。&lt;/p&gt;
&lt;div class=&quot;note red no-icon flat&quot;&gt;&lt;p&gt;注意: 顺序是非常重要的 (例如使用 grayscale() 后再使用 sepia()将产生一个完整的灰度图片)。&lt;/p&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 300.666px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 240px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.blur&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.brightness&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.30&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.30&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.contrast&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;contrast&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;180%&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;contrast&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;180%&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.grayscale&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;grayscale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;grayscale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.huerotate&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;hue-rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;180deg&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;hue-rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;180deg&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.invert&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;invert&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;invert&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.opacity&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;opacity&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;opacity&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.saturate&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;saturate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;); &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;saturate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.sepia&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;sepia&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;sepia&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;css&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.shadow&lt;/span&gt; {&lt;span class=&quot;attribute&quot;&gt;-webkit-filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;drop-shadow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; green);&lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;drop-shadow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; green);}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;strong&lt;/span&gt;&amp;gt;&lt;/span&gt;注意：&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;strong&lt;/span&gt;&amp;gt;&lt;/span&gt; Internet Explorer 不支持 filter 属性。&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;blur&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;brightness&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;contrast&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;grayscale&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;huerotate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;invert&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;opacity&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;saturate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;sepia&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;shadow&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://bu.dusays.com/2021/06/25/193f0b161f865.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Pineapple&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果如下：&lt;/p&gt;
&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/06/25/1406a17f76011.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;一些常见效果&quot;&gt;&lt;a href=&quot;#一些常见效果&quot; class=&quot;headerlink&quot; title=&quot;一些常见效果&quot;&gt;&lt;/a&gt;一些常见效果&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;电影效果&lt;br&gt;滤镜中的&lt;code&gt;brightness&lt;/code&gt;用于调整图像的明暗度。默认值是1；小于1时图像变暗，为0时显示为全黑图像；大于1时图像显示比原图更明亮。&lt;br&gt;我们可以通过调整 背景图的明暗度 和 文字的透明度 ，来模拟电影谢幕的效果。&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ethan&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;p-t&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;如果生活中有什么使你感到快乐，那就去做吧&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;不要管别人说什么&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.ethan&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./images/movie.webp&#39;&lt;/span&gt;) no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-size&lt;/span&gt;: cover;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* forwards当动画完成后，保持最后一帧的状态 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;animation&lt;/span&gt;: fade-away &lt;span class=&quot;number&quot;&gt;2.5s&lt;/span&gt; linear forwards;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.p-t&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;55px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;36px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;translate&lt;/span&gt;(-&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;,-&lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;opacity&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;animation&lt;/span&gt;: show &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;cubic-bezier&lt;/span&gt;(.&lt;span class=&quot;number&quot;&gt;74&lt;/span&gt;,-&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;,.&lt;span class=&quot;number&quot;&gt;86&lt;/span&gt;,.&lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;) forwards;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 背景图的明暗度动画 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@keyframes&lt;/span&gt; fade-away {    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    30%{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    100%{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 文字的透明度动画 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@keyframes&lt;/span&gt; show{        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    20%{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;opacity&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    100%{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;opacity&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
效果如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b843c216405b47938613fe576026b199~tplv-k3u1fbpfcp-watermark.awebp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;模糊效果&lt;br&gt;在下面的单词卡片中，当鼠标&lt;code&gt;hover&lt;/code&gt;到某一张卡片上时，其他卡片背景模糊，使用户焦点集中到当前卡片。&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cards&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;card&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Flower&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;The flowers mingle to form a blaze of color.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;card&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Sunset&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;The sunset glow tinted the sky red.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;card&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Plain&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;The winds came from the north, across the plains, funnelling down the valley. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
实现的方式，是将背景加在 &lt;code&gt;.card&lt;/code&gt; 元素的伪类上，当元素不是焦点时，为该元素的伪类加上滤镜。&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.card&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;opacity&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transition&lt;/span&gt;: filter &lt;span class=&quot;number&quot;&gt;200ms&lt;/span&gt; linear, transform &lt;span class=&quot;number&quot;&gt;200ms&lt;/span&gt; linear;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    这里不能将滤镜直接加在.card元素，而是将背景和滤镜都加在伪类上。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    因为，父元素加了滤镜，它的子元素都会一起由该滤镜改变。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    如果滤镜直接加在.card元素上，会导致上面的文字也变模糊。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 通过css选择器选出非hover的.card元素，给其伪类添加模糊、透明度和明暗度的滤镜  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.cards&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-class&quot;&gt;.card&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:not(&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover)&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;{    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;blur&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;opacity&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;brightness&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 对于hover的元素，其伪类增强饱和度，尺寸放大  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.card&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:before&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;saturate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1.05&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
效果如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b580f7a573d9497dbc6497b6cf66364c~tplv-k3u1fbpfcp-watermark.awebp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;褪色效果&lt;br&gt;褪色效果可以打造出一种怀旧的风格。下面这组照片墙，我们通过sepia滤镜将图像基调转换为深褐色，再通过降低 饱和度 &lt;code&gt;saturate&lt;/code&gt; 和 色相旋转 &lt;code&gt;hue-rotate&lt;/code&gt; 微调，模拟老照片的效果。&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.pic&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#5f2f1182&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;sepia&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30%&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;saturate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;40%&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;hue-rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5deg&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transition&lt;/span&gt;: transform &lt;span class=&quot;number&quot;&gt;1s&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.pic&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:hover&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;translateX&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
效果如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/59281a5ea70544e1bd75414762e38aba~tplv-k3u1fbpfcp-watermark.awebp&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;水波效果&lt;br&gt;filter还可以通过 URL 链接到 SVG&amp;nbsp;滤镜元素，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter&quot;&gt;SVG滤镜元素MDN&lt;/a&gt;。&lt;br&gt;下面的水波纹效果就是基于 SVG 的feTurbulence滤镜实现的，原理参考了 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/366438535&quot;&gt;说说SVG的feTurbulence滤镜&lt;/a&gt; 和&lt;a href=&quot;https://www.zhangxinxu.com/wordpress/2020/10/svg-feturbulence&quot;&gt;SVG feTurbulence滤镜深入介绍&lt;/a&gt; ，有兴趣的朋友可以深入阅读。&lt;br&gt;&lt;code&gt;feTurbulence滤镜&lt;/code&gt; 借助 &lt;code&gt;Perlin&lt;/code&gt; 噪声算法模拟自然界真实事物那样的随机样式。它接收下面5个属性：&lt;br&gt;&lt;code&gt;baseFrequency&lt;/code&gt; 表示噪声的基本频率参数，频率越高，噪声越密集。&lt;br&gt;&lt;code&gt;numOctaves&lt;/code&gt; 就表示倍频的数量，倍频的数量越多，噪声看起来越自然。&lt;br&gt;&lt;code&gt;seed&lt;/code&gt;属性表示&lt;code&gt;feTurbulence&lt;/code&gt;滤镜效果中伪随机数生成的起始值，不同数量的&lt;code&gt;seed&lt;/code&gt;不会改变噪声的频率和密度，改变的是噪声的形状和位置。&lt;br&gt;&lt;code&gt;stitchTiles&lt;/code&gt;定义了Perlin噪声在边框处的行为表现。&lt;br&gt;&lt;code&gt;type&lt;/code&gt;属性值有&lt;code&gt;fractalNoise&lt;/code&gt;和&lt;code&gt;turbulence&lt;/code&gt;，模拟随机样式使用&lt;code&gt;turbulence&lt;/code&gt;。&lt;br&gt;在这个例子，两个&lt;code&gt;img标签&lt;/code&gt;使用同一张图片，将第二个&lt;code&gt;img标签&lt;/code&gt;使用&lt;code&gt;scaleY(-1)&lt;/code&gt;实现垂直方向的镜像翻转，模拟倒影。&lt;br&gt;并且，对倒影图片使用&lt;code&gt;feTurbulence&lt;/code&gt;滤镜，通过动画不断改变&lt;code&gt;feTurbulence&lt;/code&gt;滤镜的&lt;code&gt;baseFrequency&lt;/code&gt;值实现水纹波动的效果。&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;images/moon.jpg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;images/moon.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;reflect&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--定义svg滤镜，这里使用的是feTurbulence滤镜--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;displacement-wave-filter&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--baseFrequency设置0.01 0.09两个值，代表x轴和y轴的噪声频率--&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;feTurbulence&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;baseFrequency&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0.01 0.09&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--这是svg动画的定义方式，通过动画不断改变baseFrequency的值，从而形成波动效果--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;animate&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;attributeName&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;baseFrequency&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;dur&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;20s&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;keyTimes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0;0.5;1&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;values&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0.01 0.09;0.02 0.13;0.01 0.09&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;repeatCount&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;indefinite&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;animate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;feTurbulence&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;feDisplacementMap&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;in&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;SourceGraphic&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;scale&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;520px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;clip-path&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;inset&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex-direction&lt;/span&gt;: column;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.reflect&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;translateY&lt;/span&gt;(-&lt;span class=&quot;number&quot;&gt;2px&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;scaleY&lt;/span&gt;(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 对模拟倒影的元素应用svg filter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    url中对应的是上面svg filter的id */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;filter&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(#displacement-wave-filter);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
效果如下：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot;</summary>
        
      
    
    
    
    <category term="CSS" scheme="https://fe32.top/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://fe32.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>四月末</title>
    <link href="https://fe32.top/articles/si4575mo/"/>
    <id>https://fe32.top/articles/si4575mo/</id>
    <published>2021-06-18T11:06:30.000Z</published>
    <updated>2023-06-27T14:39:00.655Z</updated>
    
    
    <summary type="html">不以物喜 不以己悲</summary>
    
    
    
    <category term="随笔" scheme="https://fe32.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="https://fe32.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="日记" scheme="https://fe32.top/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Vue中使用zTree插件实现文件多选</title>
    <link href="https://fe32.top/articles/zt1442re/"/>
    <id>https://fe32.top/articles/zt1442re/</id>
    <published>2021-05-12T10:22:01.000Z</published>
    <updated>2023-06-27T14:39:00.722Z</updated>
    
    
    <summary type="html">vue中使用zTree插件实现多文件选择</summary>
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="zTree" scheme="https://fe32.top/tags/zTree/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-悬挂灯笼</title>
    <link href="https://fe32.top/articles/Ha5487ng/"/>
    <id>https://fe32.top/articles/Ha5487ng/</id>
    <published>2021-05-06T12:21:44.000Z</published>
    <updated>2023-06-27T14:39:00.787Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1601/&quot;&gt;基于 Hexo 从零开始搭建个人博客（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1602/&quot;&gt;基于 Hexo 从零开始搭建个人博客（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1603/&quot;&gt;基于 Hexo 从零开始搭建个人博客（三）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1604/&quot;&gt;基于 Hexo 从零开始搭建个人博客（四）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1605/&quot;&gt;基于 Hexo 从零开始搭建个人博客（五）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo 从零开始搭建个人博客（六）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1607/&quot;&gt;基于 Hexo 键入搜索功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1609/&quot;&gt;基于 Hexo 键入分享功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1608/&quot;&gt;Hexo + Butterfly 自定义右键菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1612/&quot;&gt;Hexo + Butterfly 一些常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1613/&quot;&gt;请收下这只可爱的猫咪吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1614/&quot;&gt;关于Vercel被墙导致获取Twikoo评论失败的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1615/&quot;&gt;飞只因太美，给你的首页装上吧！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1617/&quot;&gt;Hexo + Butterfly 自定义页脚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://fe32.top/articles/hexo1618/&quot;&gt;Hexo + Butterfly 侧边栏公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;div class=&quot;tip cogs faa-horizontal animated&quot;&gt;&lt;p&gt;之前有小伙伴留言问我博客悬挂灯笼如何实现的？ 那现在写一篇简单的教程。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;悬挂灯笼效果&quot;&gt;&lt;a href=&quot;#悬挂灯笼效果&quot; class=&quot;headerlink&quot; title=&quot;悬挂灯笼效果&quot;&gt;&lt;/a&gt;悬挂灯笼效果&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;还是先看效果，分别展示PC端和移动端，具体效果如下图：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tabs&quot; id=&quot;text-&quot;&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#text--1&quot;&gt;PC&lt;/button&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;button type=&quot;button&quot; data-href=&quot;#text--2&quot;&gt;Mobile&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-contents&quot;&gt;&lt;div class=&quot;tab-item-content active&quot; id=&quot;text--1&quot;&gt;&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/d639262f95b85.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/d304534177d69.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;tab-item-content&quot; id=&quot;text--2&quot;&gt;&lt;div class=&quot;justified-gallery&quot;&gt;&lt;p&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/2b5a9214222ff.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/44bdb2b03f327.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/848c6b4dbb123.jpg&quot;&gt;&lt;br&gt;&lt;img src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/2da209dcf5e72.jpg&quot;&gt;&lt;/p&gt;
          &lt;/div&gt;&lt;button type=&quot;button&quot; class=&quot;tab-to-top&quot; aria-label=&quot;scroll to top&quot;&gt;&lt;i class=&quot;fas fa-arrow-up&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;新建CSS样式&lt;br&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/source/css&lt;/code&gt;文件下新建 CSS 文件，并命名为 &lt;code&gt;lantern.css&lt;/code&gt;( 当然名字随便取，只要在主题配置文件中引入对应的&lt;code&gt;CSS&lt;/code&gt;文件即可 )，将以下代码复制到新建的&lt;code&gt;lantern.css&lt;/code&gt;中。&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 灯笼 Start */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-sizing&lt;/span&gt;: border-box;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 移动端显示/隐藏 /none/block，可自定义显示一个 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@media&lt;/span&gt; screen &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;attribute&quot;&gt;max-width:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;970px&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;selector-class&quot;&gt;.dengl&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d-box&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;40px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* 自定义灯笼大小 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.dengl&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* .d-box,.d-box1{&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    z-index: 9;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  } */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 自定义灯笼的位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;85px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 自定义灯笼大小 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 自定义灯笼的位置 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 自定义灯笼大小 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 修改灯笼的字体 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;虎年大吉&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;万事顺遂&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d-box1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#f01f1a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 自定义灯笼的阴影 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* box-shadow: 0 5px 61px rgba(255, 240, 29, 0.88); */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#f01f1a&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 自定义灯笼的阴影 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;61px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#ff1d1d&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;82px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;17px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;animation&lt;/span&gt;: swing &lt;span class=&quot;number&quot;&gt;4s&lt;/span&gt; linear infinite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transform-origin&lt;/span&gt;: top center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;160px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;90px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80px&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;49px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;123px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;62px&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;52px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;line-height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;90px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffe31d&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;35px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;69px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;41px&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;49px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;84px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;49px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffe31d&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(2)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;17px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;31px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;13px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;13px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;80px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;13px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;54px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;list-style&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;24px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2.5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3.5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(3)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(3)&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;47px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;54px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffe31d&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;55px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;13px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;19px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;3px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;199px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;61px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;122px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;98px&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;70px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;18px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;143px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;69px&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;67px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 自定义背景图片 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;51px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;75px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;57px&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;89px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(https://bu.dusays.com/&lt;span class=&quot;number&quot;&gt;2021&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;e1a77cf800cf.png) no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-position&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;92px&lt;/span&gt; auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;123px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;68px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;55px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;z-index&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffe31d&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(2)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;32px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;13px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;19px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;13px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;121px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;32px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;53px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;list-style&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;24px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(3)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;60px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:nth-child(3)&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::before&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;59px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;53px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;6px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#ffe31d&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt; solid &lt;span class=&quot;number&quot;&gt;#5c1713&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.d2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;21px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;54px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;18px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;17px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@keyframes&lt;/span&gt; swing {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    0% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    25% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rotate&lt;/span&gt;(-&lt;span class=&quot;number&quot;&gt;13deg&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    50% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    75% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;13deg&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    100% {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;rotate&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 灯笼 END */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;新建PUG&lt;br&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes&lt;/code&gt;文件夹下新建&lt;code&gt;lantern.pug&lt;/code&gt;，文件内容如下：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.dengl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .d-box&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .d1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .d2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .d-box1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .d1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .d2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/layout.pug&lt;/code&gt;中引入&lt;code&gt;lantern.pug&lt;/code&gt;。&lt;br&gt;具体位置请参考下图：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/f9738ff037914.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在主题配置文件&lt;code&gt;_config.butterfly.yml&lt;/code&gt;中的&lt;code&gt;inject.head&lt;/code&gt;中引入&lt;code&gt;lantern.css&lt;/code&gt;。&lt;br&gt;具体位置请参考下图：&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/05/06/eb76fbff1da60.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;重新编译文件再运行，即可看到效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;遇到问题&quot;&gt;&lt;a href=&quot;#遇到问题&quot; class=&quot;headerlink&quot; title=&quot;遇到问题&quot;&gt;&lt;/a&gt;遇到问题&lt;/h2&gt;&lt;div class=&quot;note icon modern&quot;&gt;&lt;i class=&quot;note-icon fas fa-car-crash&quot;&gt;&lt;/i&gt;&lt;p&gt;如果在阅读过程中遇到什么问题 ，请在 &lt;span class=&quot;p red&quot;&gt;评论区&lt;/span&gt; 留言 ，我会在第一时间内帮助您解决问题</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>百度分享插件的使用</title>
    <link href="https://fe32.top/articles/bd1314sh/"/>
    <id>https://fe32.top/articles/bd1314sh/</id>
    <published>2021-03-18T02:38:59.000Z</published>
    <updated>2023-06-27T14:39:00.610Z</updated>
    
    
    <summary type="html">百度分享插件的使用</summary>
    
    
    
    <category term="一点插件" scheme="https://fe32.top/categories/%E4%B8%80%E7%82%B9%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="分享插件" scheme="https://fe32.top/tags/%E5%88%86%E4%BA%AB%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Butterfly 主题美化</title>
    <link href="https://fe32.top/articles/hexo541u/"/>
    <id>https://fe32.top/articles/hexo541u/</id>
    <published>2021-03-03T09:06:47.000Z</published>
    <updated>2023-06-27T14:39:00.803Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2022/01/09/3a2053f3f8799.jpg&quot; style=&quot;width:500px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;

&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;本篇美化教程不再维护，请移步文章 &lt;a href=&quot;https://fe32.top/articles/hexo1606/&quot;&gt;基于 Hexo</summary>
        
      
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>一种自动化生成骨架屏的方案</title>
    <link href="https://fe32.top/articles/e13t14zy/"/>
    <id>https://fe32.top/articles/e13t14zy/</id>
    <published>2021-01-25T12:28:15.000Z</published>
    <updated>2023-06-27T14:39:00.703Z</updated>
    
    
    <summary type="html">今天分享的主题是：「一种自动化生成骨架屏的方案」。</summary>
    
    
    
    <category term="技术方案" scheme="https://fe32.top/categories/%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="骨架屏" scheme="https://fe32.top/tags/%E9%AA%A8%E6%9E%B6%E5%B1%8F/"/>
    
    <category term="Skeleton Screen" scheme="https://fe32.top/tags/Skeleton-Screen/"/>
    
    <category term="页面优化" scheme="https://fe32.top/tags/%E9%A1%B5%E9%9D%A2%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Vue-Cli3.0打包时如何去掉console打印信息</title>
    <link href="https://fe32.top/articles/p520xyz8/"/>
    <id>https://fe32.top/articles/p520xyz8/</id>
    <published>2021-01-23T10:28:07.000Z</published>
    <updated>2023-06-27T14:39:00.727Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;div class=&quot;tip cogs faa-horizontal animated&quot;&gt;&lt;p&gt;我们在进行项目开发过程中，一般会用到console.log打印某些信息。但是如何生产环境打包时去掉所有consloe打印信息呢？以下是解决办法，也是自己一直使用的方法。&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt; 安装插件 babel-plugin-transform-remove-console&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install babel-plugin-transform-remove-console --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;修改 babel.config.js（如果没有自己创建）&lt;div class=&quot;img-wrap&quot;&gt;&lt;div class=&quot;img-bg&quot;&gt;&lt;img class=&quot;img&quot; src= &quot;https://bu.dusays.com/2022/01/14/1ff50a00bd75c.gif&quot; data-lazy-src=&quot;https://bu.dusays.com/2021/12/31/bfef12a4dda96.jpg&quot; alt=&quot;请在根目录下创建babel.config.js&quot;&gt;&lt;/div&gt;&lt;span class=&quot;image-caption&quot;&gt;请在根目录下创建babel.config.js&lt;/span&gt;&lt;/div&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; plugins = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (process.env.NODE_ENV === &lt;span class=&quot;string&quot;&gt;&#39;production&#39;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//exclude(忽略)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plugins.push([&lt;span class=&quot;string&quot;&gt;&quot;transform-remove-console&quot;&lt;/span&gt;, { &lt;span class=&quot;string&quot;&gt;&quot;exclude&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;warn&quot;&lt;/span&gt;] }])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    presets: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;@vue/app&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plugins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div class=&quot;note red icon modern&quot;&gt;&lt;i class=&quot;note-icon fas</summary>
        
      
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>添加Github徽标</title>
    <link href="https://fe32.top/articles/kfwr2gpa/"/>
    <id>https://fe32.top/articles/kfwr2gpa/</id>
    <published>2021-01-07T10:36:00.000Z</published>
    <updated>2023-06-27T14:39:00.623Z</updated>
    
    
    <summary type="html">添加Github徽标</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>基于Butterfly的外挂标签引入</title>
    <link href="https://fe32.top/articles/0xiipgum/"/>
    <id>https://fe32.top/articles/0xiipgum/</id>
    <published>2021-01-05T08:14:02.000Z</published>
    <updated>2023-06-27T14:39:00.782Z</updated>
    
    
    <summary type="html">基于Butterfly的外挂标签引入</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Hexo" scheme="https://fe32.top/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://fe32.top/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>Nvm,npm与nrm</title>
    <link href="https://fe32.top/articles/9r95s1wt/"/>
    <id>https://fe32.top/articles/9r95s1wt/</id>
    <published>2020-12-30T07:55:35.000Z</published>
    <updated>2023-06-27T14:39:00.740Z</updated>
    
    
    <summary type="html">Node必备：nvm、npm与nrm</summary>
    
    
    
    <category term="Node" scheme="https://fe32.top/categories/Node/"/>
    
    
    <category term="Node" scheme="https://fe32.top/tags/Node/"/>
    
    <category term="nvm" scheme="https://fe32.top/tags/nvm/"/>
    
    <category term="npm" scheme="https://fe32.top/tags/npm/"/>
    
    <category term="nrm" scheme="https://fe32.top/tags/nrm/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法支持的Emoji表情</title>
    <link href="https://fe32.top/articles/hyeccjmu/"/>
    <id>https://fe32.top/articles/hyeccjmu/</id>
    <published>2020-12-28T08:28:37.000Z</published>
    <updated>2023-06-27T14:39:00.749Z</updated>
    
    
    <summary type="html">Markdown语法支持添加 emoji 表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</summary>
    
    
    
    <category term="Butterfly" scheme="https://fe32.top/categories/Butterfly/"/>
    
    
    <category term="Markdown" scheme="https://fe32.top/tags/Markdown/"/>
    
    <category term="Emoji表情" scheme="https://fe32.top/tags/Emoji%E8%A1%A8%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Vue后台管理系统模板推荐</title>
    <link href="https://fe32.top/articles/xi2mpxmd/"/>
    <id>https://fe32.top/articles/xi2mpxmd/</id>
    <published>2020-12-21T12:15:33.000Z</published>
    <updated>2023-06-27T14:39:00.722Z</updated>
    
    
    <summary type="html">在我们进行网站管理时一个好的后台管理模板是非常重要的，推荐几款后台模板给大家，也是自己常用的模板。</summary>
    
    
    
    <category term="Vue" scheme="https://fe32.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://fe32.top/tags/Vue/"/>
    
    <category term="后台管理" scheme="https://fe32.top/tags/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
</feed>
